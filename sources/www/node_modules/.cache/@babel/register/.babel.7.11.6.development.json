{
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _app = _interopRequireDefault(require(\"./app\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction main() {\n  return _main.apply(this, arguments);\n}\n\nfunction _main() {\n  _main = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _app[\"default\"].listen(3000);\n\n          case 2:\n            console.log('Server on port 3000');\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _main.apply(this, arguments);\n}\n\n;\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1haW4iLCJhcHAiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7OztTQUNlQSxJOzs7OztrRUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxtQkFDUUMsZ0JBQUlDLE1BQUosQ0FBVyxJQUFYLENBRFI7O0FBQUE7QUFFRUMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVkscUJBQVo7O0FBRkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztBQUdDO0FBQ0RKLElBQUkiLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFwcCBmcm9tICcuL2FwcCc7XG5hc3luYyBmdW5jdGlvbiBtYWluKCl7XG4gIGF3YWl0IGFwcC5saXN0ZW4oMzAwMCk7XG4gIGNvbnNvbGUubG9nKCdTZXJ2ZXIgb24gcG9ydCAzMDAwJylcbn07XG5tYWluKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "main",
        "app",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;;;;;SACeA,I;;;;;kEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQC,gBAAIC,MAAJ,CAAW,IAAX,CADR;;AAAA;AAEEC,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAGC;AACDJ,IAAI",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/",
      "sourcesContent": [
        "import app from './app';\nasync function main(){\n  await app.listen(3000);\n  console.log('Server on port 3000')\n};\nmain();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/app.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/app.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/app.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireWildcard(require(\"express\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _userController = _interopRequireDefault(require(\"./controllers/user.controller.js\"));\n\nvar _git = _interopRequireDefault(require(\"./routes/git\"));\n\nvar _projects = _interopRequireDefault(require(\"./routes/projects\"));\n\nvar _users = _interopRequireDefault(require(\"./routes/users\"));\n\nvar _home = _interopRequireDefault(require(\"./routes/home\"));\n\nvar _php = _interopRequireDefault(require(\"./routes/php\"));\n\nvar _save = _interopRequireDefault(require(\"./routes/save\"));\n\nvar _slack = _interopRequireDefault(require(\"./routes/slack\"));\n\nvar _sms = _interopRequireDefault(require(\"./routes/sms\"));\n\nvar _mail = _interopRequireDefault(require(\"./routes/mail\"));\n\nvar _mastodon = _interopRequireDefault(require(\"./routes/mastodon\"));\n\nvar _zip = _interopRequireDefault(require(\"./routes/zip\"));\n\nvar _user = require(\"./controllers/user.controller\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar app = (0, _express[\"default\"])();\nvar TWO_HOURS = 1000 * 60 * 60 * 2;\nvar _process$env = process.env,\n    _process$env$port = _process$env.port,\n    port = _process$env$port === void 0 ? 3000 : _process$env$port,\n    _process$env$SESS_NAM = _process$env.SESS_NAME,\n    SESS_NAME = _process$env$SESS_NAM === void 0 ? 'sid' : _process$env$SESS_NAM,\n    _process$env$SESS_SEC = _process$env.SESS_SECRET,\n    SESS_SECRET = _process$env$SESS_SEC === void 0 ? 'ssh!quiet,it\\'asecret!' : _process$env$SESS_SEC,\n    _process$env$NODE_ENV = _process$env.NODE_ENV,\n    NODE_ENV = _process$env$NODE_ENV === void 0 ? 'development' : _process$env$NODE_ENV,\n    _process$env$SESS_LIF = _process$env.SESS_LIFETIME,\n    SESS_LIFETIME = _process$env$SESS_LIF === void 0 ? TWO_HOURS : _process$env$SESS_LIF;\nvar IN_PROD = NODE_ENV == 'production';\nconsole.log(_userController[\"default\"]); //Importing routes\n\napp.use((0, _morgan[\"default\"])('dev'));\napp.use((0, _express.json)({\n  limit: '50mb'\n})); // support parsing of application/json type post data\n\napp.use(_bodyParser[\"default\"].json({\n  limit: '50mb',\n  extended: true\n})); //support parsing of application/x-www-form-urlencoded post data\n\napp.use(_bodyParser[\"default\"].urlencoded({\n  limit: '50mb',\n  extended: true\n}));\napp.use(_express[\"default\"][\"static\"](__dirname + '/public')); //routes\n\napp.use('/api/projects', _projects[\"default\"]);\napp.use('/api/users', _users[\"default\"]);\napp.use('/api/users/login', _users[\"default\"]);\napp.use('/home', _home[\"default\"]);\napp.use('/php', _php[\"default\"]);\napp.use('/save', _save[\"default\"]);\napp.use('/repos', _git[\"default\"]);\napp.use('/slack', _slack[\"default\"]);\napp.use('/sms', _sms[\"default\"]);\napp.use('/mail', _mail[\"default\"]);\napp.use('/mastodon', _mastodon[\"default\"]);\napp.use('/zip', _zip[\"default\"]);\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJhcHAiLCJUV09fSE9VUlMiLCJwcm9jZXNzIiwiZW52IiwicG9ydCIsIlNFU1NfTkFNRSIsIlNFU1NfU0VDUkVUIiwiTk9ERV9FTlYiLCJTRVNTX0xJRkVUSU1FIiwiSU5fUFJPRCIsImNvbnNvbGUiLCJsb2ciLCJzZXNzaW9uIiwidXNlIiwibGltaXQiLCJib2R5UGFyc2VyIiwianNvbiIsImV4dGVuZGVkIiwidXJsZW5jb2RlZCIsImV4cHJlc3MiLCJfX2Rpcm5hbWUiLCJwcm9qZWN0Um91dGVzIiwidXNlcnNSb3V0ZXMiLCJob21lUm91dGVzIiwicGhwUm91dGVzIiwic2F2ZVJvdXRlcyIsImdpdFJvdXRlcyIsInNsYWNrUm91dGVzIiwic21zUm91dGVzIiwibWFpbFJvdXRlcyIsIm1hc3RvZG9uUm91dGVzIiwiemlwUm91dGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFlQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7QUExQkEsSUFBTUEsR0FBRyxHQUFDLDBCQUFWO0FBQ0EsSUFBTUMsU0FBUyxHQUFDLE9BQUssRUFBTCxHQUFRLEVBQVIsR0FBVyxDQUEzQjttQkFRRUMsT0FBTyxDQUFDQyxHO3FDQU5SQyxJO0lBQUFBLEksa0NBQUssSTt5Q0FDTEMsUztJQUFBQSxTLHNDQUFVLEs7eUNBQ1ZDLFc7SUFBQUEsVyxzQ0FBWSx3Qjt5Q0FDWkMsUTtJQUFBQSxRLHNDQUFTLGE7eUNBQ1RDLGE7SUFBQUEsYSxzQ0FBY1AsUztBQUloQixJQUFNUSxPQUFPLEdBQUNGLFFBQVEsSUFBRSxZQUF4QjtBQUNBRyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsMEJBQVosRSxDQUNBOztBQWNBWixHQUFHLENBQUNhLEdBQUosQ0FBUSx3QkFBTyxLQUFQLENBQVI7QUFDQWIsR0FBRyxDQUFDYSxHQUFKLENBQVEsbUJBQUs7QUFBQ0MsRUFBQUEsS0FBSyxFQUFDO0FBQVAsQ0FBTCxDQUFSLEUsQ0FDQTs7QUFDQWQsR0FBRyxDQUFDYSxHQUFKLENBQVFFLHVCQUFXQyxJQUFYLENBQWdCO0FBQUNGLEVBQUFBLEtBQUssRUFBRSxNQUFSO0FBQWdCRyxFQUFBQSxRQUFRLEVBQUU7QUFBMUIsQ0FBaEIsQ0FBUixFLENBRUE7O0FBQ0FqQixHQUFHLENBQUNhLEdBQUosQ0FBUUUsdUJBQVdHLFVBQVgsQ0FBc0I7QUFBQ0osRUFBQUEsS0FBSyxFQUFDLE1BQVA7QUFBZUcsRUFBQUEsUUFBUSxFQUFFO0FBQXpCLENBQXRCLENBQVI7QUFLQWpCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRTSw4QkFBZUMsU0FBUyxHQUFHLFNBQTNCLENBQVIsRSxDQUVBOztBQUNBcEIsR0FBRyxDQUFDYSxHQUFKLENBQVEsZUFBUixFQUF3QlEsb0JBQXhCO0FBQ0FyQixHQUFHLENBQUNhLEdBQUosQ0FBUSxZQUFSLEVBQXFCUyxpQkFBckI7QUFDQXRCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLGtCQUFSLEVBQTJCUyxpQkFBM0I7QUFDQXRCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLE9BQVIsRUFBZ0JVLGdCQUFoQjtBQUNBdkIsR0FBRyxDQUFDYSxHQUFKLENBQVEsTUFBUixFQUFlVyxlQUFmO0FBQ0F4QixHQUFHLENBQUNhLEdBQUosQ0FBUSxPQUFSLEVBQWdCWSxnQkFBaEI7QUFDQXpCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLFFBQVIsRUFBaUJhLGVBQWpCO0FBQ0ExQixHQUFHLENBQUNhLEdBQUosQ0FBUSxRQUFSLEVBQWlCYyxpQkFBakI7QUFDQTNCLEdBQUcsQ0FBQ2EsR0FBSixDQUFRLE1BQVIsRUFBZWUsZUFBZjtBQUNBNUIsR0FBRyxDQUFDYSxHQUFKLENBQVEsT0FBUixFQUFnQmdCLGdCQUFoQjtBQUNBN0IsR0FBRyxDQUFDYSxHQUFKLENBQVEsV0FBUixFQUFvQmlCLG9CQUFwQjtBQUNBOUIsR0FBRyxDQUFDYSxHQUFKLENBQVEsTUFBUixFQUFla0IsZUFBZjtlQU9lL0IsRyIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlzYWJldGgvRW1lcmdpbm92LUlJL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcywge2pzb259IGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1vcmdhbiBmcm9tICdtb3JnYW4nO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSBcImJvZHktcGFyc2VyXCI7XG5pbXBvcnQgc2Vzc2lvbiBmcm9tIFwiLi9jb250cm9sbGVycy91c2VyLmNvbnRyb2xsZXIuanNcIlxuY29uc3QgYXBwPWV4cHJlc3MoKTtcbmNvbnN0IFRXT19IT1VSUz0xMDAwKjYwKjYwKjI7XG5jb25zdCAge1xuICBwb3J0PTMwMDAsXG4gIFNFU1NfTkFNRT0nc2lkJyxcbiAgU0VTU19TRUNSRVQ9J3NzaCFxdWlldCxpdFxcJ2FzZWNyZXQhJyxcbiAgTk9ERV9FTlY9J2RldmVsb3BtZW50JyxcbiAgU0VTU19MSUZFVElNRT1UV09fSE9VUlNcblxufT1wcm9jZXNzLmVudlxuXG5jb25zdCBJTl9QUk9EPU5PREVfRU5WPT0ncHJvZHVjdGlvbidcbmNvbnNvbGUubG9nKHNlc3Npb24pO1xuLy9JbXBvcnRpbmcgcm91dGVzXG5pbXBvcnQgZ2l0Um91dGVzIGZyb20gJy4vcm91dGVzL2dpdCdcbmltcG9ydCBwcm9qZWN0Um91dGVzIGZyb20gJy4vcm91dGVzL3Byb2plY3RzJztcbmltcG9ydCB1c2Vyc1JvdXRlcyBmcm9tICcuL3JvdXRlcy91c2Vycyc7XG5pbXBvcnQgaG9tZVJvdXRlcyBmcm9tICcuL3JvdXRlcy9ob21lJztcbmltcG9ydCBwaHBSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvcGhwJztcbmltcG9ydCBzYXZlUm91dGVzIGZyb20gJy4vcm91dGVzL3NhdmUnO1xuaW1wb3J0IHNsYWNrUm91dGVzIGZyb20gJy4vcm91dGVzL3NsYWNrJztcbmltcG9ydCBzbXNSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvc21zJztcbmltcG9ydCBtYWlsUm91dGVzIGZyb20gJy4vcm91dGVzL21haWwnO1xuaW1wb3J0IG1hc3RvZG9uUm91dGVzIGZyb20gJy4vcm91dGVzL21hc3RvZG9uJztcbmltcG9ydCB6aXBSb3V0ZXMgZnJvbSAnLi9yb3V0ZXMvemlwJztcbi8vbWlkZGxld2FyZXNcbmltcG9ydCAgeyBzdG9yYWdlMSB9IGZyb20gJy4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyJ1xuYXBwLnVzZShtb3JnYW4oJ2RldicpKTtcbmFwcC51c2UoanNvbih7bGltaXQ6JzUwbWInfSkpO1xuLy8gc3VwcG9ydCBwYXJzaW5nIG9mIGFwcGxpY2F0aW9uL2pzb24gdHlwZSBwb3N0IGRhdGFcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKHtsaW1pdDogJzUwbWInLCBleHRlbmRlZDogdHJ1ZX0pKTtcblxuLy9zdXBwb3J0IHBhcnNpbmcgb2YgYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIHBvc3QgZGF0YVxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2xpbWl0Oic1MG1iJywgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuXG5cblxuXG5hcHAudXNlKGV4cHJlc3Muc3RhdGljKF9fZGlybmFtZSArICcvcHVibGljJykpO1xuXG4vL3JvdXRlc1xuYXBwLnVzZSgnL2FwaS9wcm9qZWN0cycscHJvamVjdFJvdXRlcyk7XG5hcHAudXNlKCcvYXBpL3VzZXJzJyx1c2Vyc1JvdXRlcyk7XG5hcHAudXNlKCcvYXBpL3VzZXJzL2xvZ2luJyx1c2Vyc1JvdXRlcyk7XG5hcHAudXNlKCcvaG9tZScsaG9tZVJvdXRlcyk7XG5hcHAudXNlKCcvcGhwJyxwaHBSb3V0ZXMpO1xuYXBwLnVzZSgnL3NhdmUnLHNhdmVSb3V0ZXMpO1xuYXBwLnVzZSgnL3JlcG9zJyxnaXRSb3V0ZXMpO1xuYXBwLnVzZSgnL3NsYWNrJyxzbGFja1JvdXRlcyk7XG5hcHAudXNlKCcvc21zJyxzbXNSb3V0ZXMpO1xuYXBwLnVzZSgnL21haWwnLG1haWxSb3V0ZXMpO1xuYXBwLnVzZSgnL21hc3RvZG9uJyxtYXN0b2RvblJvdXRlcyk7XG5hcHAudXNlKCcvemlwJyx6aXBSb3V0ZXMpO1xuXG5cblxuXG5cblxuZXhwb3J0IGRlZmF1bHQgYXBwO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "app",
        "TWO_HOURS",
        "process",
        "env",
        "port",
        "SESS_NAME",
        "SESS_SECRET",
        "NODE_ENV",
        "SESS_LIFETIME",
        "IN_PROD",
        "console",
        "log",
        "session",
        "use",
        "limit",
        "bodyParser",
        "json",
        "extended",
        "urlencoded",
        "express",
        "__dirname",
        "projectRoutes",
        "usersRoutes",
        "homeRoutes",
        "phpRoutes",
        "saveRoutes",
        "gitRoutes",
        "slackRoutes",
        "smsRoutes",
        "mailRoutes",
        "mastodonRoutes",
        "zipRoutes"
      ],
      "mappings": ";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAeA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;AA1BA,IAAMA,GAAG,GAAC,0BAAV;AACA,IAAMC,SAAS,GAAC,OAAK,EAAL,GAAQ,EAAR,GAAW,CAA3B;mBAQEC,OAAO,CAACC,G;qCANRC,I;IAAAA,I,kCAAK,I;yCACLC,S;IAAAA,S,sCAAU,K;yCACVC,W;IAAAA,W,sCAAY,wB;yCACZC,Q;IAAAA,Q,sCAAS,a;yCACTC,a;IAAAA,a,sCAAcP,S;AAIhB,IAAMQ,OAAO,GAACF,QAAQ,IAAE,YAAxB;AACAG,OAAO,CAACC,GAAR,CAAYC,0BAAZ,E,CACA;;AAcAZ,GAAG,CAACa,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAb,GAAG,CAACa,GAAJ,CAAQ,mBAAK;AAACC,EAAAA,KAAK,EAAC;AAAP,CAAL,CAAR,E,CACA;;AACAd,GAAG,CAACa,GAAJ,CAAQE,uBAAWC,IAAX,CAAgB;AAACF,EAAAA,KAAK,EAAE,MAAR;AAAgBG,EAAAA,QAAQ,EAAE;AAA1B,CAAhB,CAAR,E,CAEA;;AACAjB,GAAG,CAACa,GAAJ,CAAQE,uBAAWG,UAAX,CAAsB;AAACJ,EAAAA,KAAK,EAAC,MAAP;AAAeG,EAAAA,QAAQ,EAAE;AAAzB,CAAtB,CAAR;AAKAjB,GAAG,CAACa,GAAJ,CAAQM,8BAAeC,SAAS,GAAG,SAA3B,CAAR,E,CAEA;;AACApB,GAAG,CAACa,GAAJ,CAAQ,eAAR,EAAwBQ,oBAAxB;AACArB,GAAG,CAACa,GAAJ,CAAQ,YAAR,EAAqBS,iBAArB;AACAtB,GAAG,CAACa,GAAJ,CAAQ,kBAAR,EAA2BS,iBAA3B;AACAtB,GAAG,CAACa,GAAJ,CAAQ,OAAR,EAAgBU,gBAAhB;AACAvB,GAAG,CAACa,GAAJ,CAAQ,MAAR,EAAeW,eAAf;AACAxB,GAAG,CAACa,GAAJ,CAAQ,OAAR,EAAgBY,gBAAhB;AACAzB,GAAG,CAACa,GAAJ,CAAQ,QAAR,EAAiBa,eAAjB;AACA1B,GAAG,CAACa,GAAJ,CAAQ,QAAR,EAAiBc,iBAAjB;AACA3B,GAAG,CAACa,GAAJ,CAAQ,MAAR,EAAee,eAAf;AACA5B,GAAG,CAACa,GAAJ,CAAQ,OAAR,EAAgBgB,gBAAhB;AACA7B,GAAG,CAACa,GAAJ,CAAQ,WAAR,EAAoBiB,oBAApB;AACA9B,GAAG,CAACa,GAAJ,CAAQ,MAAR,EAAekB,eAAf;eAOe/B,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/",
      "sourcesContent": [
        "import express, {json} from 'express';\nimport morgan from 'morgan';\nimport bodyParser from \"body-parser\";\nimport session from \"./controllers/user.controller.js\"\nconst app=express();\nconst TWO_HOURS=1000*60*60*2;\nconst  {\n  port=3000,\n  SESS_NAME='sid',\n  SESS_SECRET='ssh!quiet,it\\'asecret!',\n  NODE_ENV='development',\n  SESS_LIFETIME=TWO_HOURS\n\n}=process.env\n\nconst IN_PROD=NODE_ENV=='production'\nconsole.log(session);\n//Importing routes\nimport gitRoutes from './routes/git'\nimport projectRoutes from './routes/projects';\nimport usersRoutes from './routes/users';\nimport homeRoutes from './routes/home';\nimport phpRoutes from './routes/php';\nimport saveRoutes from './routes/save';\nimport slackRoutes from './routes/slack';\nimport smsRoutes from './routes/sms';\nimport mailRoutes from './routes/mail';\nimport mastodonRoutes from './routes/mastodon';\nimport zipRoutes from './routes/zip';\n//middlewares\nimport  { storage1 } from './controllers/user.controller'\napp.use(morgan('dev'));\napp.use(json({limit:'50mb'}));\n// support parsing of application/json type post data\napp.use(bodyParser.json({limit: '50mb', extended: true}));\n\n//support parsing of application/x-www-form-urlencoded post data\napp.use(bodyParser.urlencoded({limit:'50mb', extended: true }));\n\n\n\n\napp.use(express.static(__dirname + '/public'));\n\n//routes\napp.use('/api/projects',projectRoutes);\napp.use('/api/users',usersRoutes);\napp.use('/api/users/login',usersRoutes);\napp.use('/home',homeRoutes);\napp.use('/php',phpRoutes);\napp.use('/save',saveRoutes);\napp.use('/repos',gitRoutes);\napp.use('/slack',slackRoutes);\napp.use('/sms',smsRoutes);\napp.use('/mail',mailRoutes);\napp.use('/mastodon',mastodonRoutes);\napp.use('/zip',zipRoutes);\n\n\n\n\n\n\nexport default app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/user.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/user.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/user.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/user.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "user.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createUser = createUser;\nexports.getUsers = getUsers;\nexports.changeCurrent = changeCurrent;\nexports.updatePicture = updatePicture;\nexports.verifyCommit = verifyCommit;\nexports.getUsersByProject = getUsersByProject;\nexports.checkFollower = checkFollower;\nexports.unFollow = unFollow;\nexports.newFollower = newFollower;\nexports.getUserById = getUserById;\nexports.acceptRequest = acceptRequest;\nexports.getUserByName = getUserByName;\nexports.searchUserByLogin = searchUserByLogin;\nexports.getSession = getSession;\nexports.logout = logout;\nexports.getUserByLoginAndPassword = getUserByLoginAndPassword;\nexports.deleteUser = deleteUser;\nexports.deleteUserFromProject = deleteUserFromProject;\nexports.updateUser = updateUser;\nexports[\"default\"] = void 0;\n\nvar _Users = _interopRequireDefault(require(\"../models/Users\"));\n\nvar _Project = _interopRequireDefault(require(\"../models/Project\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar passwordHash = require('password-hash');\n\nvar storage = require('node-sessionstorage');\n\nvar storage1 = \"\";\n\nvar octokit = require('@octokit/rest');\n\nvar rimraf = require(\"rimraf\");\n\nvar fs = require('fs-extra'); //var path = require(\"path\")\n//var Git = require(\"nodegit\");\n\n\nvar simpleGit = require('simple-git')(); // Shelljs package for running shell tasks optional\n//const shellJs = require('shelljs');\n// Simple Git with Promise for handling success and failure\n\n\nvar simpleGitPromise = require('simple-git/promise')();\n\nstorage.setItem('userID', \"\");\n\nvar _require = require(\"sequelize\"),\n    Op = _require.Op;\n\nfunction createUser(_x, _x2) {\n  return _createUser.apply(this, arguments);\n} //console.log(passwordHash.verify('password123', hashedpassword)); // true\n\n\nfunction _createUser() {\n  _createUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, name, login, email, gittoken, gitusername, job, location, school, password, mastodon, hashedpassword, id, projectid, company, nbfollowers, listoffollow, picture, newUser;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, name = _req$body.name, login = _req$body.login, email = _req$body.email, gittoken = _req$body.gittoken, gitusername = _req$body.gitusername, job = _req$body.job, location = _req$body.location, school = _req$body.school, password = _req$body.password, mastodon = _req$body.mastodon;\n            hashedpassword = passwordHash.generate(password);\n            id = Math.floor(Math.random() * Math.floor(1000000000000));\n            projectid = null;\n            company = null;\n            nbfollowers = 0;\n            listoffollow = null;\n            picture = null;\n            _context.prev = 8;\n            _context.next = 11;\n            return _Users[\"default\"].create({\n              id: id,\n              name: name,\n              login: login,\n              email: email,\n              gittoken: gittoken,\n              school: school,\n              projectid: projectid,\n              location: location,\n              job: job,\n              company: company,\n              gitusername: gitusername,\n              nbfollowers: nbfollowers,\n              listoffollow: listoffollow,\n              picture: picture,\n              hashedpassword: hashedpassword,\n              mastodon: mastodon\n            }, {\n              fields: ['id', 'name', 'login', 'email', 'gittoken', 'school', 'projectid', 'location', 'job', 'company', 'gitusername', 'nbfollowers', 'listoffollow', 'picture', 'hashedpassword', 'mastodon']\n            });\n\n          case 11:\n            newUser = _context.sent;\n\n            if (newUser) {\n              setTimeout(function () {\n                console.log(\"user created successfully\");\n                res.redirect(\"/login.html\");\n              }, 500);\n            }\n\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](8);\n            console.log(_context.t0);\n            res.status(500).json({\n              message: 'something went wrong',\n              data: {}\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 15]]);\n  }));\n  return _createUser.apply(this, arguments);\n}\n\nfunction getUsers(_x3, _x4) {\n  return _getUsers.apply(this, arguments);\n}\n\nfunction _getUsers() {\n  _getUsers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var users;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _Users[\"default\"].findAll();\n\n          case 3:\n            users = _context2.sent;\n            res.json({\n              data: users\n            });\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getUsers.apply(this, arguments);\n}\n\nfunction changeCurrent(_x5, _x6) {\n  return _changeCurrent.apply(this, arguments);\n}\n\nfunction _changeCurrent() {\n  _changeCurrent = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, id, newCurrentid, newCurrentname, user, url, localPath;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, id = _req$body2.id, newCurrentid = _req$body2.newCurrentid, newCurrentname = _req$body2.newCurrentname; // rimraf(`fictiveProjects/${newCurrentname}/`, function () { console.log(\"done\"); });\n\n            _context3.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            user = _context3.sent;\n\n            if (!(user != null)) {\n              _context3.next = 10;\n              break;\n            }\n\n            user.update({\n              currentproject: {\n                id: newCurrentid,\n                name: newCurrentname\n              }\n            });\n            url = \"https://github.com/\".concat(user.gitusername, \"/\").concat(newCurrentname, \".git\");\n            localPath = \"\".concat(newCurrentname); // var opts = {\n            //     fetchOpts: {\n            //       callbacks: {\n            //         certificateCheck: () => 0\n            //     }\n            //   }\n            // };\n\n            if (!fs.existsSync(user.currentproject.name)) {\n              console.log(\"helloo\"); //fs.mkdirSync(user.currentproject.name);\n\n              simpleGit.clone(url, localPath);\n              setTimeout(function () {\n                if (!fs.existsSync(\"\".concat(user.currentproject.name, \"/src\"))) {\n                  fs.mkdirSync(\"\".concat(user.currentproject.name, \"/src\"));\n                  var file = fs.open(\"\".concat(user.currentproject.name, \"/src/index.php\"), 'w', function (err) {\n                    if (err) throw err;\n                  });\n                }\n              }, 2000);\n            }\n\n            return _context3.abrupt(\"return\", res.json(user));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _changeCurrent.apply(this, arguments);\n}\n\nfunction updatePicture(_x7, _x8) {\n  return _updatePicture.apply(this, arguments);\n}\n\nfunction _updatePicture() {\n  _updatePicture = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, id, picture, user;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, id = _req$body3.id, picture = _req$body3.picture;\n            _context4.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            user = _context4.sent;\n\n            if (!(user != null)) {\n              _context4.next = 10;\n              break;\n            }\n\n            console.log(user);\n            user.update({\n              picture: picture\n            });\n            return _context4.abrupt(\"return\", res.json(user));\n\n          case 10:\n            console.log(\"hp\");\n            return _context4.abrupt(\"return\", res.json({\n              message: 'User does not exist '\n            }));\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _updatePicture.apply(this, arguments);\n}\n\nfunction verifyCommit(_x9, _x10) {\n  return _verifyCommit.apply(this, arguments);\n}\n\nfunction _verifyCommit() {\n  _verifyCommit = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var id, listOfprojectNotCommited, user, _loop, i;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            id = req.body.id;\n            listOfprojectNotCommited = [];\n            _context6.next = 4;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 4:\n            user = _context6.sent;\n\n            if (!(user.projectid != null)) {\n              _context6.next = 16;\n              break;\n            }\n\n            console.log(\"client :\");\n            _loop = /*#__PURE__*/regeneratorRuntime.mark(function _loop() {\n              var project;\n              return regeneratorRuntime.wrap(function _loop$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _Project[\"default\"].findOne({\n                        where: {\n                          id: user.projectid[i]\n                        }\n                      });\n\n                    case 2:\n                      project = _context5.sent;\n                      simpleGit.cwd(project.name);\n                      simpleGitPromise.cwd(project.name); //     simpleGitPromise.diffSummary()\n                      //         .then(\n                      //           (diff) => {\n                      //             console.log(\"get\");\n                      //             console.log(\"this is commit\",diff);\n                      //             if (diff.changed!=\"0\") {\n                      //                   console.log(diff.changed)\n                      //\n                      //                    listOfprojectNotCommited.push(project.name)\n                      //\n                      //\n                      //              }\n                      //\n                      //\n                      //       });\n                      //     setTimeout(function(){\n                      //               console.log(listOfprojectNotCommited);\n                      //              if (listOfprojectNotCommited.length!=0) {\n                      //                 res.json({\"message\":listOfprojectNotCommited})\n                      //\n                      //                     }else {\n                      //                   res.json({\"message\":\"no problem\"})\n                      //\n                      //                   }\n                      //\n                      //   },500)\n                      // }\n\n                      simpleGitPromise.log().then(function (addSuccess) {\n                        console.log(\"yes\");\n                        simpleGitPromise.diffSummary().then(function (diff) {\n                          console.log(\"get\");\n                          console.log(\"this is commit\", diff);\n\n                          if (diff.changed != \"0\") {\n                            console.log(diff.changed);\n                            listOfprojectNotCommited.push(project.name);\n                            setTimeout(function () {\n                              console.log(listOfprojectNotCommited);\n                              console.log(\"hello\");\n\n                              if (listOfprojectNotCommited.length != 0) {\n                                res.json({\n                                  \"message\": listOfprojectNotCommited\n                                });\n                              } else {\n                                res.json({\n                                  \"message\": \"no problem\"\n                                });\n                              }\n                            }, 500);\n                          }\n                        });\n                      }, function (failedAdd) {\n                        res.json({\n                          \"message\": []\n                        });\n                      });\n\n                    case 6:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, _loop);\n            });\n            i = 0;\n\n          case 9:\n            if (!(i < user.projectid.length)) {\n              _context6.next = 14;\n              break;\n            }\n\n            return _context6.delegateYield(_loop(), \"t0\", 11);\n\n          case 11:\n            i++;\n            _context6.next = 9;\n            break;\n\n          case 14:\n            _context6.next = 17;\n            break;\n\n          case 16:\n            res.json({\n              \"message\": \"no projects\"\n            });\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _verifyCommit.apply(this, arguments);\n}\n\nfunction getUsersByProject(_x11, _x12) {\n  return _getUsersByProject.apply(this, arguments);\n}\n\nfunction _getUsersByProject() {\n  _getUsersByProject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var projectId, ProjectUsers;\n    return regeneratorRuntime.wrap(function _callee6$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            projectId = req.params.projectId;\n            _context7.next = 3;\n            return _Users[\"default\"].findAll({\n              attributes: ['name', 'projectid'],\n              where: {\n                projectid: _defineProperty({}, Op.contains, projectId)\n              }\n            });\n\n          case 3:\n            ProjectUsers = _context7.sent;\n\n            if (!(ProjectUsers.length > 0)) {\n              _context7.next = 8;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", res.json(ProjectUsers));\n\n          case 8:\n            res.json({\n              message: 'that project does not exist'\n            });\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getUsersByProject.apply(this, arguments);\n}\n\nfunction checkFollower(_x13, _x14) {\n  return _checkFollower.apply(this, arguments);\n}\n\nfunction _checkFollower() {\n  _checkFollower = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var _req$body4, id, myid, check, user, myinfo, i;\n\n    return regeneratorRuntime.wrap(function _callee7$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _req$body4 = req.body, id = _req$body4.id, myid = _req$body4.myid;\n            check = false;\n            _context8.next = 4;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 4:\n            user = _context8.sent;\n\n            if (user.listoffollow != null) {\n              console.log(user.listoffollow[0]);\n              myinfo = {\n                \"id\": myid\n              };\n              console.log(myinfo);\n              console.log(user.listoffollow[0].json == myid);\n\n              for (i = 0; i < user.listoffollow.length; i++) {\n                if (user.listoffollow[i].id == myid) {\n                  check = true;\n                  console.log(check);\n                }\n              }\n\n              if (check == true) {\n                res.json({\n                  \"check\": true\n                });\n              }\n            } else {\n              res.json({\n                \"check\": false\n              });\n            }\n\n          case 6:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _checkFollower.apply(this, arguments);\n}\n\nfunction unFollow(_x15, _x16) {\n  return _unFollow.apply(this, arguments);\n}\n\nfunction _unFollow() {\n  _unFollow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var _req$body5, id, myid, user, listoffollow;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _req$body5 = req.body, id = _req$body5.id, myid = _req$body5.myid;\n            console.log(id);\n            _context9.next = 4;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 4:\n            user = _context9.sent;\n            listoffollow = user.listoffollow;\n\n            if (listoffollow != null) {\n              if (listoffollow.length == 1) {\n                user.update({\n                  nbfollowers: user.nbfollowers - 1,\n                  listoffollow: null\n                });\n              } else {\n                listoffollow.splice(listoffollow.indexOf({\n                  \"id\": myid\n                }), 1);\n                user.update({\n                  nbfollowers: user.nbfollowers - 1,\n                  listoffollow: listoffollow\n                });\n              }\n            }\n\n            if (!(user != null)) {\n              _context9.next = 11;\n              break;\n            }\n\n            return _context9.abrupt(\"return\", res.json(user));\n\n          case 11:\n            return _context9.abrupt(\"return\", res.json({\n              message: 'User does not exist '\n            }));\n\n          case 12:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _unFollow.apply(this, arguments);\n}\n\nfunction newFollower(_x17, _x18) {\n  return _newFollower.apply(this, arguments);\n}\n\nfunction _newFollower() {\n  _newFollower = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var _req$body6, id, myid, user, listoffollow;\n\n    return regeneratorRuntime.wrap(function _callee9$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _req$body6 = req.body, id = _req$body6.id, myid = _req$body6.myid;\n            myid = parseInt(myid);\n            console.log(req.body);\n            console.log(id);\n            _context10.next = 6;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 6:\n            user = _context10.sent;\n            listoffollow = user.listoffollow;\n\n            if (listoffollow != null) {\n              listoffollow.append({\n                \"id\": myid\n              });\n              console.log(listoffollow);\n              user.update({\n                nbfollowers: user.nbfollowers + 1,\n                listoffollow: listoffollow\n              });\n            } else {\n              user.update({\n                nbfollowers: user.nbfollowers + 1,\n                listoffollow: [{\n                  \"id\": myid\n                }]\n              });\n            }\n\n            if (!(user != null)) {\n              _context10.next = 13;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", res.json(user));\n\n          case 13:\n            return _context10.abrupt(\"return\", res.json({\n              message: 'User does not exist '\n            }));\n\n          case 14:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _newFollower.apply(this, arguments);\n}\n\nfunction getUserById(_x19, _x20) {\n  return _getUserById.apply(this, arguments);\n}\n\nfunction _getUserById() {\n  _getUserById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var id, user;\n    return regeneratorRuntime.wrap(function _callee10$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            id = req.body.id;\n            console.log(id);\n            _context11.next = 4;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 4:\n            user = _context11.sent;\n\n            if (!(user != null)) {\n              _context11.next = 9;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", res.json(user));\n\n          case 9:\n            return _context11.abrupt(\"return\", res.json({\n              message: 'User does not exist '\n            }));\n\n          case 10:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee10);\n  }));\n  return _getUserById.apply(this, arguments);\n}\n\nfunction acceptRequest(_x21, _x22) {\n  return _acceptRequest.apply(this, arguments);\n}\n\nfunction _acceptRequest() {\n  _acceptRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var _req$body7, id, senderLogin, name, sender, user, newRequests, i, newProjectid, project;\n\n    return regeneratorRuntime.wrap(function _callee11$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _req$body7 = req.body, id = _req$body7.id, senderLogin = _req$body7.senderLogin, name = _req$body7.name;\n            console.log(id);\n            _context12.next = 4;\n            return _Users[\"default\"].findOne({\n              where: {\n                login: senderLogin\n              }\n            });\n\n          case 4:\n            sender = _context12.sent;\n            _context12.next = 7;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 7:\n            user = _context12.sent;\n\n            if (user.requests != null) {\n              newRequests = [];\n\n              for (i = 0; i < user.requests.length; i++) {\n                if (user.requests[i].senderID != sender.id || user.requests[i].projectName != name) {\n                  newRequests.push(user.requests[i]);\n                } else {\n                  newRequests.push({\n                    \"projectName\": name,\n                    \"senderID\": sender.id,\n                    \"status\": \"approved\"\n                  });\n                }\n              }\n\n              user.update({\n                requests: newRequests\n              });\n            }\n\n            newProjectid = sender.projectid;\n            console.log(name);\n            console.log(\"les anciens projets sont \" + newProjectid);\n            _context12.next = 14;\n            return _Project[\"default\"].findOne({\n              where: {\n                name: name\n              }\n            });\n\n          case 14:\n            project = _context12.sent;\n            console.log(\"yes \" + project.name);\n            console.log(project.id);\n\n            if (newProjectid != null) {\n              newProjectid.push(project.id);\n            } else {\n              console.log(newProjectid);\n              newProjectid = [project.id];\n            }\n\n            sender.update({\n              projectid: newProjectid\n            });\n\n          case 19:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _acceptRequest.apply(this, arguments);\n}\n\nfunction getUserByName(_x23, _x24) {\n  return _getUserByName.apply(this, arguments);\n}\n\nfunction _getUserByName() {\n  _getUserByName = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var name, user;\n    return regeneratorRuntime.wrap(function _callee12$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            name = req.body.name;\n            _context13.next = 3;\n            return _Users[\"default\"].findAll({\n              where: {\n                login: _defineProperty({}, Op.like, \"%\".concat(name, \"%\"))\n              }\n            });\n\n          case 3:\n            user = _context13.sent;\n\n            if (!(user != null)) {\n              _context13.next = 8;\n              break;\n            }\n\n            return _context13.abrupt(\"return\", res.json(user));\n\n          case 8:\n            return _context13.abrupt(\"return\", res.json({\n              message: 'User does not exist '\n            }));\n\n          case 9:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee12);\n  }));\n  return _getUserByName.apply(this, arguments);\n}\n\nfunction searchUserByLogin(_x25, _x26) {\n  return _searchUserByLogin.apply(this, arguments);\n}\n\nfunction _searchUserByLogin() {\n  _searchUserByLogin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(req, res) {\n    var login, user;\n    return regeneratorRuntime.wrap(function _callee13$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            login = req.body.login;\n            _context14.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                login: login\n              }\n            });\n\n          case 3:\n            user = _context14.sent;\n\n            if (!(user != null)) {\n              _context14.next = 8;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", res.json(user));\n\n          case 8:\n            return _context14.abrupt(\"return\", res.json({\n              message: 'User does not exist '\n            }));\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _searchUserByLogin.apply(this, arguments);\n}\n\nfunction getSession(_x27, _x28) {\n  return _getSession.apply(this, arguments);\n}\n\nfunction _getSession() {\n  _getSession = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(req, res) {\n    var session;\n    return regeneratorRuntime.wrap(function _callee14$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            session = storage.getItem('userID');\n            res.json({\n              \"session\": session\n            });\n\n          case 2:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getSession.apply(this, arguments);\n}\n\nfunction logout(_x29, _x30) {\n  return _logout.apply(this, arguments);\n}\n\nfunction _logout() {\n  _logout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(req, res) {\n    var id, user, i, project;\n    return regeneratorRuntime.wrap(function _callee15$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            id = req.body.id;\n            _context16.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            user = _context16.sent;\n\n            if (!(user.projectid != null)) {\n              _context16.next = 16;\n              break;\n            }\n\n            i = 0;\n\n          case 6:\n            if (!(i < user.projectid.length)) {\n              _context16.next = 16;\n              break;\n            }\n\n            _context16.next = 9;\n            return _Project[\"default\"].findOne({\n              where: {\n                id: user.projectid[i]\n              }\n            });\n\n          case 9:\n            project = _context16.sent;\n\n            if (fs.existsSync(\"fictiveProjects/\" + project.name)) {\n              rimraf(\"fictiveProjects/\" + project.name, function () {\n                console.log(\"done\");\n              });\n            }\n\n            if (fs.existsSync(project.name)) {\n              rimraf(project.name, function () {\n                console.log(\"done\");\n              });\n            }\n\n            res.json({\n              \"message\": \"deleted\"\n            });\n\n          case 13:\n            i++;\n            _context16.next = 6;\n            break;\n\n          case 16:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _logout.apply(this, arguments);\n}\n\nfunction getUserByLoginAndPassword(_x31, _x32) {\n  return _getUserByLoginAndPassword.apply(this, arguments);\n}\n\nfunction _getUserByLoginAndPassword() {\n  _getUserByLoginAndPassword = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(req, res) {\n    var _req$body8, login, password, user;\n\n    return regeneratorRuntime.wrap(function _callee16$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            _req$body8 = req.body, login = _req$body8.login, password = _req$body8.password;\n            _context17.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                login: login\n              }\n            });\n\n          case 3:\n            user = _context17.sent;\n\n            if (!(user != null)) {\n              _context17.next = 14;\n              break;\n            }\n\n            if (!passwordHash.verify(password, user.hashedpassword)) {\n              _context17.next = 11;\n              break;\n            }\n\n            storage.setItem('userID', user.id);\n            storage1 = user.id;\n            return _context17.abrupt(\"return\", res.redirect(\"http://localhost:3000/\"));\n\n          case 11:\n            return _context17.abrupt(\"return\", res.redirect(\"http://localhost:3000/login.html\"));\n\n          case 12:\n            _context17.next = 15;\n            break;\n\n          case 14:\n            return _context17.abrupt(\"return\", res.redirect(\"http://localhost:3000/login.html\"));\n\n          case 15:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _getUserByLoginAndPassword.apply(this, arguments);\n}\n\nfunction deleteUser(_x33, _x34) {\n  return _deleteUser.apply(this, arguments);\n}\n\nfunction _deleteUser() {\n  _deleteUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(req, res) {\n    var id, deleteRowCount;\n    return regeneratorRuntime.wrap(function _callee17$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            id = req.params.id;\n            _context18.next = 3;\n            return _Users[\"default\"].destroy({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            deleteRowCount = _context18.sent;\n            res.json({\n              message: 'User deleted successfully',\n              count: deleteRowCount\n            });\n\n          case 5:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _deleteUser.apply(this, arguments);\n}\n\nfunction deleteUserFromProject(_x35, _x36) {\n  return _deleteUserFromProject.apply(this, arguments);\n}\n\nfunction _deleteUserFromProject() {\n  _deleteUserFromProject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(req, res) {\n    return regeneratorRuntime.wrap(function _callee18$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _deleteUserFromProject.apply(this, arguments);\n}\n\nfunction updateUser(_x37, _x38) {\n  return _updateUser.apply(this, arguments);\n}\n\nfunction _updateUser() {\n  _updateUser = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(req, res) {\n    var id, _req$body9, name, login, gittoken, projectid, users;\n\n    return regeneratorRuntime.wrap(function _callee20$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            id = req.params.id;\n            _req$body9 = req.body, name = _req$body9.name, login = _req$body9.login, gittoken = _req$body9.gittoken, projectid = _req$body9.projectid;\n            _context21.next = 4;\n            return _Users[\"default\"].findAll({\n              attributes: ['id', 'name', 'login', 'gittoken', 'projectid'],\n              where: {\n                id: id\n              }\n            });\n\n          case 4:\n            users = _context21.sent;\n\n            if (users.length > 0) {\n              users.forEach( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(user) {\n                  return regeneratorRuntime.wrap(function _callee19$(_context20) {\n                    while (1) {\n                      switch (_context20.prev = _context20.next) {\n                        case 0:\n                          _context20.next = 2;\n                          return user.update({\n                            name: name,\n                            login: login,\n                            gittoken: gittoken,\n                            projectid: projectid\n                          });\n\n                        case 2:\n                        case \"end\":\n                          return _context20.stop();\n                      }\n                    }\n                  }, _callee19);\n                }));\n\n                return function (_x39) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n            }\n\n            return _context21.abrupt(\"return\", res.json({\n              message: 'User Updated successfully',\n              data: users\n            }));\n\n          case 7:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _updateUser.apply(this, arguments);\n}\n\nvar _default = storage1;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.controller.js"
      ],
      "names": [
        "passwordHash",
        "require",
        "storage",
        "storage1",
        "octokit",
        "rimraf",
        "fs",
        "simpleGit",
        "simpleGitPromise",
        "setItem",
        "Op",
        "createUser",
        "req",
        "res",
        "body",
        "name",
        "login",
        "email",
        "gittoken",
        "gitusername",
        "job",
        "location",
        "school",
        "password",
        "mastodon",
        "hashedpassword",
        "generate",
        "id",
        "Math",
        "floor",
        "random",
        "projectid",
        "company",
        "nbfollowers",
        "listoffollow",
        "picture",
        "Users",
        "create",
        "fields",
        "newUser",
        "setTimeout",
        "console",
        "log",
        "redirect",
        "status",
        "json",
        "message",
        "data",
        "getUsers",
        "findAll",
        "users",
        "changeCurrent",
        "newCurrentid",
        "newCurrentname",
        "findOne",
        "where",
        "user",
        "update",
        "currentproject",
        "url",
        "localPath",
        "existsSync",
        "clone",
        "mkdirSync",
        "file",
        "open",
        "err",
        "updatePicture",
        "verifyCommit",
        "listOfprojectNotCommited",
        "Project",
        "i",
        "project",
        "cwd",
        "then",
        "addSuccess",
        "diffSummary",
        "diff",
        "changed",
        "push",
        "length",
        "failedAdd",
        "getUsersByProject",
        "projectId",
        "params",
        "attributes",
        "contains",
        "ProjectUsers",
        "checkFollower",
        "myid",
        "check",
        "myinfo",
        "unFollow",
        "splice",
        "indexOf",
        "newFollower",
        "parseInt",
        "append",
        "getUserById",
        "acceptRequest",
        "senderLogin",
        "sender",
        "requests",
        "newRequests",
        "senderID",
        "projectName",
        "newProjectid",
        "getUserByName",
        "like",
        "searchUserByLogin",
        "getSession",
        "session",
        "getItem",
        "logout",
        "getUserByLoginAndPassword",
        "verify",
        "deleteUser",
        "destroy",
        "deleteRowCount",
        "count",
        "deleteUserFromProject",
        "updateUser",
        "forEach"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;;;;;;;AACA,IAAIA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAArB;;AACA,IAAIE,QAAQ,GAAC,EAAb;;AACA,IAAOC,OAAO,GAAGH,OAAO,CAAC,eAAD,CAAxB;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIK,EAAE,GAAGL,OAAO,CAAC,UAAD,CAAhB,C,CACA;AACA;;;AAEA,IAAMM,SAAS,GAAGN,OAAO,CAAC,YAAD,CAAP,EAAlB,C,CACA;AACA;AACA;;;AACA,IAAMO,gBAAgB,GAAGP,OAAO,CAAC,oBAAD,CAAP,EAAzB;;AACAC,OAAO,CAACO,OAAR,CAAgB,QAAhB,EAA0B,EAA1B;;eAEeR,OAAO,CAAC,WAAD,C;IAAdS,E,YAAAA,E;;SAIcC,U;;EA4CtB;;;;wEA5CO,iBAA0BC,GAA1B,EAA+BC,GAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAC+ED,GAAG,CAACE,IADnF,EACCC,IADD,aACCA,IADD,EACMC,KADN,aACMA,KADN,EACYC,KADZ,aACYA,KADZ,EACkBC,QADlB,aACkBA,QADlB,EAC2BC,WAD3B,aAC2BA,WAD3B,EACuCC,GADvC,aACuCA,GADvC,EAC2CC,QAD3C,aAC2CA,QAD3C,EACoDC,MADpD,aACoDA,MADpD,EAC2DC,QAD3D,aAC2DA,QAD3D,EACoEC,QADpE,aACoEA,QADpE;AAEDC,YAAAA,cAFC,GAEgBzB,YAAY,CAAC0B,QAAb,CAAsBH,QAAtB,CAFhB;AAGDI,YAAAA,EAHC,GAGGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,aAAX,CAA3B,CAHH;AAIDE,YAAAA,SAJC,GAIS,IAJT;AAKDC,YAAAA,OALC,GAKO,IALP;AAMDC,YAAAA,WANC,GAMW,CANX;AAODC,YAAAA,YAPC,GAOY,IAPZ;AAQDC,YAAAA,OARC,GAQO,IARP;AAAA;AAAA;AAAA,mBAUgBC,kBAAMC,MAAN,CAAa;AAC9BV,cAAAA,EAAE,EAAFA,EAD8B;AAE9BZ,cAAAA,IAAI,EAAJA,IAF8B;AAG9BC,cAAAA,KAAK,EAALA,KAH8B;AAI9BC,cAAAA,KAAK,EAALA,KAJ8B;AAK9BC,cAAAA,QAAQ,EAARA,QAL8B;AAM9BI,cAAAA,MAAM,EAANA,MAN8B;AAO9BS,cAAAA,SAAS,EAATA,SAP8B;AAQ9BV,cAAAA,QAAQ,EAARA,QAR8B;AAS9BD,cAAAA,GAAG,EAAHA,GAT8B;AAU9BY,cAAAA,OAAO,EAAPA,OAV8B;AAW9Bb,cAAAA,WAAW,EAAXA,WAX8B;AAY9Bc,cAAAA,WAAW,EAAXA,WAZ8B;AAa9BC,cAAAA,YAAY,EAAZA,YAb8B;AAc9BC,cAAAA,OAAO,EAAPA,OAd8B;AAe9BV,cAAAA,cAAc,EAAdA,cAf8B;AAgB9BD,cAAAA,QAAQ,EAARA;AAhB8B,aAAb,EAiBjB;AACAc,cAAAA,MAAM,EAAC,CAAC,IAAD,EAAM,MAAN,EAAa,OAAb,EAAqB,OAArB,EAA6B,UAA7B,EAAwC,QAAxC,EAAiD,WAAjD,EAA6D,UAA7D,EAAwE,KAAxE,EAA8E,SAA9E,EAAwF,aAAxF,EAAsG,aAAtG,EAAoH,cAApH,EAAmI,SAAnI,EAA6I,gBAA7I,EAA8J,UAA9J;AADP,aAjBiB,CAVhB;;AAAA;AAUCC,YAAAA,OAVD;;AA8BH,gBAAGA,OAAH,EAAW;AACTC,cAAAA,UAAU,CAAC,YAAU;AACnBC,gBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA7B,gBAAAA,GAAG,CAAC8B,QAAJ,CAAa,aAAb;AAA4B,eAFpB,EAEqB,GAFrB,CAAV;AAGC;;AAlCA;AAAA;;AAAA;AAAA;AAAA;AAqCHF,YAAAA,OAAO,CAACC,GAAR;AACA7B,YAAAA,GAAG,CAAC+B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE,sBADU;AAEnBC,cAAAA,IAAI,EAAC;AAFc,aAArB;;AAtCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA8CeC,Q;;;;;sEAAf,kBAAwBpC,GAAxB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEgBuB,kBAAMa,OAAN,EAFhB;;AAAA;AAEGC,YAAAA,KAFH;AAGHrC,YAAAA,GAAG,CAACgC,IAAJ,CAAS;AACPE,cAAAA,IAAI,EAACG;AADE,aAAT;AAHG;AAAA;;AAAA;AAAA;AAAA;AAOHT,YAAAA,OAAO,CAACC,GAAR;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAWkBS,a;;;;;2EAAf,kBAA6BvC,GAA7B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACoCD,GAAG,CAACE,IADxC,EACGa,EADH,cACGA,EADH,EACMyB,YADN,cACMA,YADN,EACmBC,cADnB,cACmBA,cADnB,EAEN;;AAFM;AAAA,mBAIcjB,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAJd;;AAAA;AAIE6B,YAAAA,IAJF;;AAAA,kBASAA,IAAI,IAAE,IATN;AAAA;AAAA;AAAA;;AAUFA,YAAAA,IAAI,CAACC,MAAL,CAAY;AAERC,cAAAA,cAAc,EAAC;AACb/B,gBAAAA,EAAE,EAACyB,YADU;AAEbrC,gBAAAA,IAAI,EAACsC;AAFQ;AAFP,aAAZ;AAQGM,YAAAA,GAlBD,gCAkB2BH,IAAI,CAACrC,WAlBhC,cAkB+CkC,cAlB/C;AAuBEO,YAAAA,SAvBF,aAuBgBP,cAvBhB,GAwBF;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAI,CAAC/C,EAAE,CAACuD,UAAH,CAAcL,IAAI,CAACE,cAAL,CAAoB3C,IAAlC,CAAL,EAA8C;AAC5C0B,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAD4C,CAE9C;;AAEAnC,cAAAA,SAAS,CAACuD,KAAV,CAAgBH,GAAhB,EAAqBC,SAArB;AAICpB,cAAAA,UAAU,CAAC,YAAU;AACnB,oBAAI,CAAClC,EAAE,CAACuD,UAAH,WAAiBL,IAAI,CAACE,cAAL,CAAoB3C,IAArC,UAAL,EAAsD;AACnDT,kBAAAA,EAAE,CAACyD,SAAH,WAAgBP,IAAI,CAACE,cAAL,CAAoB3C,IAApC;AACA,sBAAIiD,IAAI,GAAC1D,EAAE,CAAC2D,IAAH,WAAWT,IAAI,CAACE,cAAL,CAAoB3C,IAA/B,qBAAoD,GAApD,EAAyD,UAACmD,GAAD,EAAS;AACrE,wBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,mBAFI,CAAT;AAKH;AACF,eATU,EAST,IATS,CAAV;AAUA;;AAjDC,8CAmDKrD,GAAG,CAACgC,IAAJ,CAASW,IAAT,CAnDL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwDgBW,a;;;;;2EAAf,kBAA6BvD,GAA7B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACcD,GAAG,CAACE,IADlB,EACCa,EADD,cACCA,EADD,EACIQ,OADJ,cACIA,OADJ;AAAA;AAAA,mBAEWC,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAFX;;AAAA;AAED6B,YAAAA,IAFC;;AAAA,kBAOHA,IAAI,IAAE,IAPH;AAAA;AAAA;AAAA;;AAQLf,YAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ;AACAA,YAAAA,IAAI,CAACC,MAAL,CAAY;AAERtB,cAAAA,OAAO,EAAPA;AAFQ,aAAZ;AATK,8CAcEtB,GAAG,CAACgC,IAAJ,CAASW,IAAT,CAdF;;AAAA;AAiBLf,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAjBK,8CAkBE7B,GAAG,CAACgC,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CAlBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwBasB,Y;;;;;0EAAf,kBAA4BxD,GAA5B,EAAgCC,GAAhC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACIc,YAAAA,EADJ,GACSf,GAAG,CAACE,IADb,CACIa,EADJ;AAEC0C,YAAAA,wBAFD,GAE0B,EAF1B;AAAA;AAAA,mBAGgBjC,kBAAMkB,OAAN,CAAc;AAC/BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADyB,aAAd,CAHhB;;AAAA;AAGG6B,YAAAA,IAHH;;AAAA,kBASCA,IAAI,CAACzB,SAAL,IAAgB,IATjB;AAAA;AAAA;AAAA;;AAUDU,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAVC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAauB4B,oBAAQhB,OAAR,CAAgB;AACpCC,wBAAAA,KAAK,EAAC;AACJ5B,0BAAAA,EAAE,EAAC6B,IAAI,CAACzB,SAAL,CAAewC,CAAf;AADC;AAD8B,uBAAhB,CAbvB;;AAAA;AAaOC,sBAAAA,OAbP;AAkBCjE,sBAAAA,SAAS,CAACkE,GAAV,CAAcD,OAAO,CAACzD,IAAtB;AACAP,sBAAAA,gBAAgB,CAACiE,GAAjB,CAAqBD,OAAO,CAACzD,IAA7B,EAnBD,CAqBH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGIP,sBAAAA,gBAAgB,CAACkC,GAAjB,GAAuBgC,IAAvB,CAEE,UAACC,UAAD,EAAgB;AAETlC,wBAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AAEWlC,wBAAAA,gBAAgB,CAACoE,WAAjB,GACGF,IADH,CAEK,UAACG,IAAD,EAAU;AACRpC,0BAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,0BAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BmC,IAA7B;;AACA,8BAAIA,IAAI,CAACC,OAAL,IAAc,GAAlB,EAAuB;AACrBrC,4BAAAA,OAAO,CAACC,GAAR,CAAYmC,IAAI,CAACC,OAAjB;AAEAT,4BAAAA,wBAAwB,CAACU,IAAzB,CAA8BP,OAAO,CAACzD,IAAtC;AACAyB,4BAAAA,UAAU,CAAC,YAAU;AACnBC,8BAAAA,OAAO,CAACC,GAAR,CAAY2B,wBAAZ;AACA5B,8BAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,kCAAI2B,wBAAwB,CAACW,MAAzB,IAAiC,CAArC,EAAwC;AACtCnE,gCAAAA,GAAG,CAACgC,IAAJ,CAAS;AAAC,6CAAUwB;AAAX,iCAAT;AAED,+BAHD,MAGM;AACJxD,gCAAAA,GAAG,CAACgC,IAAJ,CAAS;AAAC,6CAAU;AAAX,iCAAT;AAED;AAEF,6BAXS,EAWR,GAXQ,CAAV;AAaH;AAGA,yBAzBN;AA+BZ,uBArCR,EAqCU,UAACoC,SAAD,EAAe;AAEhBpE,wBAAAA,GAAG,CAACgC,IAAJ,CAAS;AAAC,qCAAU;AAAX,yBAAT;AACA,uBAxCT;;AAlDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYQ0B,YAAAA,CAZR,GAYY,CAZZ;;AAAA;AAAA,kBAYeA,CAAC,GAAGf,IAAI,CAACzB,SAAL,CAAeiD,MAZlC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAY0CT,YAAAA,CAAC,EAZ3C;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAiGD1D,YAAAA,GAAG,CAACgC,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT;;AAjGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuGaqC,iB;;;;;+EAAf,kBAAiCtE,GAAjC,EAAqCC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACIsE,YAAAA,SADJ,GACgBvE,GAAG,CAACwE,MADpB,CACID,SADJ;AAAA;AAAA,mBAEwB/C,kBAAMa,OAAN,CAAc;AACvCoC,cAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,WAAT,CAD2B;AAEvC9B,cAAAA,KAAK,EAAC;AACJxB,gBAAAA,SAAS,sBACPrB,EAAE,CAAC4E,QADI,EACMH,SADN;AADL;AAFiC,aAAd,CAFxB;;AAAA;AAEGI,YAAAA,YAFH;;AAAA,kBAYCA,YAAY,CAACP,MAAb,GAAoB,CAZrB;AAAA;AAAA;AAAA;;AAAA,8CAaMnE,GAAG,CAACgC,IAAJ,CAAS0C,YAAT,CAbN;;AAAA;AAeD1E,YAAAA,GAAG,CAACgC,IAAJ,CAAS;AACPC,cAAAA,OAAO,EAAC;AADD,aAAT;;AAfC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAqBe0C,a;;;;;2EAAf,kBAA6B5E,GAA7B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACaD,GAAG,CAACE,IADjB,EACGa,EADH,cACGA,EADH,EACM8D,IADN,cACMA,IADN;AAEDC,YAAAA,KAFC,GAEK,KAFL;AAAA;AAAA,mBAGatD,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAHb;;AAAA;AAGC6B,YAAAA,IAHD;;AAQL,gBAAIA,IAAI,CAACtB,YAAL,IAAmB,IAAvB,EAA6B;AAC3BO,cAAAA,OAAO,CAACC,GAAR,CAAYc,IAAI,CAACtB,YAAL,CAAkB,CAAlB,CAAZ;AAEIyD,cAAAA,MAHuB,GAGhB;AAAC,sBAAKF;AAAN,eAHgB;AAI3BhD,cAAAA,OAAO,CAACC,GAAR,CAAYiD,MAAZ;AACAlD,cAAAA,OAAO,CAACC,GAAR,CAAYc,IAAI,CAACtB,YAAL,CAAkB,CAAlB,EAAqBW,IAArB,IAA2B4C,IAAvC;;AACA,mBAASlB,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAACtB,YAAL,CAAkB8C,MAAtC,EAA8CT,CAAC,EAA/C,EAAmD;AACjD,oBAAIf,IAAI,CAACtB,YAAL,CAAkBqC,CAAlB,EAAqB5C,EAArB,IAAyB8D,IAA7B,EAAmC;AACjCC,kBAAAA,KAAK,GAAC,IAAN;AACAjD,kBAAAA,OAAO,CAACC,GAAR,CAAYgD,KAAZ;AACD;AACF;;AACD,kBAAIA,KAAK,IAAE,IAAX,EAAiB;AACb7E,gBAAAA,GAAG,CAACgC,IAAJ,CAAS;AACP,2BAAQ;AADD,iBAAT;AAGH;AACF,aAjBD,MAiBM;AACJhC,cAAAA,GAAG,CAACgC,IAAJ,CAAS;AACP,yBAAQ;AADD,eAAT;AAID;;AA9BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkCe+C,Q;;;;;sEAAf,kBAAwBhF,GAAxB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACeD,GAAG,CAACE,IADnB,EACKa,EADL,cACKA,EADL,EACQ8D,IADR,cACQA,IADR;AAEHhD,YAAAA,OAAO,CAACC,GAAR,CAAYf,EAAZ;AAFG;AAAA,mBAGeS,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAHf;;AAAA;AAGG6B,YAAAA,IAHH;AAQCtB,YAAAA,YARD,GAQcsB,IAAI,CAACtB,YARnB;;AASH,gBAAIA,YAAY,IAAE,IAAlB,EAAwB;AACtB,kBAAIA,YAAY,CAAC8C,MAAb,IAAqB,CAAzB,EAA4B;AAC1BxB,gBAAAA,IAAI,CAACC,MAAL,CAAY;AAERxB,kBAAAA,WAAW,EAAEuB,IAAI,CAACvB,WAAL,GAAiB,CAFtB;AAGRC,kBAAAA,YAAY,EAAC;AAHL,iBAAZ;AAMD,eAPD,MAOK;AACHA,gBAAAA,YAAY,CAAC2D,MAAb,CAAqB3D,YAAY,CAAC4D,OAAb,CAAqB;AAAC,wBAAKL;AAAN,iBAArB,CAArB,EAAwD,CAAxD;AACAjC,gBAAAA,IAAI,CAACC,MAAL,CAAY;AAERxB,kBAAAA,WAAW,EAAEuB,IAAI,CAACvB,WAAL,GAAiB,CAFtB;AAGRC,kBAAAA,YAAY,EAACA;AAHL,iBAAZ;AAMD;AAEF;;AA3BE,kBAgCCsB,IAAI,IAAE,IAhCP;AAAA;AAAA;AAAA;;AAAA,8CAiCM3C,GAAG,CAACgC,IAAJ,CAASW,IAAT,CAjCN;;AAAA;AAAA,8CAoCM3C,GAAG,CAACgC,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CApCN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA0CeiD,W;;;;;yEAAf,kBAA2BnF,GAA3B,EAA+BC,GAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACYD,GAAG,CAACE,IADhB,EACGa,EADH,cACGA,EADH,EACM8D,IADN,cACMA,IADN;AAEHA,YAAAA,IAAI,GAACO,QAAQ,CAACP,IAAD,CAAb;AACAhD,YAAAA,OAAO,CAACC,GAAR,CAAY9B,GAAG,CAACE,IAAhB;AACA2B,YAAAA,OAAO,CAACC,GAAR,CAAYf,EAAZ;AAJG;AAAA,mBAKeS,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CALf;;AAAA;AAKG6B,YAAAA,IALH;AAUCtB,YAAAA,YAVD,GAUcsB,IAAI,CAACtB,YAVnB;;AAWH,gBAAIA,YAAY,IAAE,IAAlB,EAAwB;AACtBA,cAAAA,YAAY,CAAC+D,MAAb,CAAoB;AAClB,sBAAKR;AADa,eAApB;AAGAhD,cAAAA,OAAO,CAACC,GAAR,CAAYR,YAAZ;AACAsB,cAAAA,IAAI,CAACC,MAAL,CAAY;AAERxB,gBAAAA,WAAW,EAAEuB,IAAI,CAACvB,WAAL,GAAiB,CAFtB;AAGRC,gBAAAA,YAAY,EAACA;AAHL,eAAZ;AAOD,aAZD,MAYM;AACJsB,cAAAA,IAAI,CAACC,MAAL,CAAY;AAERxB,gBAAAA,WAAW,EAAEuB,IAAI,CAACvB,WAAL,GAAiB,CAFtB;AAGRC,gBAAAA,YAAY,EAAC,CAAC;AAAC,wBAAKuD;AAAN,iBAAD;AAHL,eAAZ;AAMD;;AA9BE,kBAiCCjC,IAAI,IAAE,IAjCP;AAAA;AAAA;AAAA;;AAAA,+CAkCM3C,GAAG,CAACgC,IAAJ,CAASW,IAAT,CAlCN;;AAAA;AAAA,+CAqCM3C,GAAG,CAACgC,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CArCN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA2CiBoD,W;;;;;yEAAf,mBAA2BtF,GAA3B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACGc,YAAAA,EADH,GACQf,GAAG,CAACE,IADZ,CACGa,EADH;AAELc,YAAAA,OAAO,CAACC,GAAR,CAAYf,EAAZ;AAFK;AAAA,mBAGaS,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAHb;;AAAA;AAGC6B,YAAAA,IAHD;;AAAA,kBAQDA,IAAI,IAAE,IARL;AAAA;AAAA;AAAA;;AAAA,+CASI3C,GAAG,CAACgC,IAAJ,CAASW,IAAT,CATJ;;AAAA;AAAA,+CAYI3C,GAAG,CAACgC,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CAZJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkBeqD,a;;;;;2EAAf,mBAA6BvF,GAA7B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACyBD,GAAG,CAACE,IAD7B,EACGa,EADH,cACGA,EADH,EACMyE,WADN,cACMA,WADN,EACkBrF,IADlB,cACkBA,IADlB;AAEL0B,YAAAA,OAAO,CAACC,GAAR,CAAYf,EAAZ;AAFK;AAAA,mBAGeS,kBAAMkB,OAAN,CAAc;AAChCC,cAAAA,KAAK,EAAC;AACJvC,gBAAAA,KAAK,EAACoF;AADF;AAD0B,aAAd,CAHf;;AAAA;AAGCC,YAAAA,MAHD;AAAA;AAAA,mBAQajE,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CARb;;AAAA;AAQC6B,YAAAA,IARD;;AAaL,gBAAIA,IAAI,CAAC8C,QAAL,IAAe,IAAnB,EAAyB;AACnBC,cAAAA,WADmB,GACP,EADO;;AAEvB,mBAAShC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGf,IAAI,CAAC8C,QAAL,CAActB,MAAlC,EAA0CT,CAAC,EAA3C,EAA+C;AAC7C,oBAAGf,IAAI,CAAC8C,QAAL,CAAc/B,CAAd,EAAiBiC,QAAjB,IAA2BH,MAAM,CAAC1E,EAAlC,IAAwC6B,IAAI,CAAC8C,QAAL,CAAc/B,CAAd,EAAiBkC,WAAjB,IAA8B1F,IAAzE,EAA8E;AAC5EwF,kBAAAA,WAAW,CAACxB,IAAZ,CAAiBvB,IAAI,CAAC8C,QAAL,CAAc/B,CAAd,CAAjB;AACD,iBAFD,MAEM;AACJgC,kBAAAA,WAAW,CAACxB,IAAZ,CAAiB;AACf,mCAAchE,IADC;AAEf,gCAAWsF,MAAM,CAAC1E,EAFH;AAGf,8BAAS;AAHM,mBAAjB;AAKD;AAEF;;AACD6B,cAAAA,IAAI,CAACC,MAAL,CAAY;AACV6C,gBAAAA,QAAQ,EAACC;AADC,eAAZ;AAID;;AAIGG,YAAAA,YAnCC,GAmCYL,MAAM,CAACtE,SAnCnB;AAoCLU,YAAAA,OAAO,CAACC,GAAR,CAAY3B,IAAZ;AAEA0B,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAA4BgE,YAAxC;AAtCK;AAAA,mBAuCgBpC,oBAAQhB,OAAR,CAAgB;AACnCC,cAAAA,KAAK,EAAC;AACJxC,gBAAAA,IAAI,EAACA;AADD;AAD6B,aAAhB,CAvChB;;AAAA;AAuCCyD,YAAAA,OAvCD;AA4CL/B,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAO8B,OAAO,CAACzD,IAA3B;AACA0B,YAAAA,OAAO,CAACC,GAAR,CAAY8B,OAAO,CAAC7C,EAApB;;AACA,gBAAI+E,YAAY,IAAE,IAAlB,EAAwB;AACtBA,cAAAA,YAAY,CAAC3B,IAAb,CAAkBP,OAAO,CAAC7C,EAA1B;AACD,aAFD,MAEM;AACJc,cAAAA,OAAO,CAACC,GAAR,CAAYgE,YAAZ;AACIA,cAAAA,YAFA,GAEa,CAAClC,OAAO,CAAC7C,EAAT,CAFb;AAGL;;AACD0E,YAAAA,MAAM,CAAC5C,MAAP,CAAc;AACZ1B,cAAAA,SAAS,EAAC2E;AADE,aAAd;;AApDK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA0DaC,a;;;;;2EAAf,mBAA6B/F,GAA7B,EAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACSE,YAAAA,IADT,GACgBH,GAAG,CAACE,IADpB,CACSC,IADT;AAAA;AAAA,mBAEmBqB,kBAAMa,OAAN,CAAc;AAC9BM,cAAAA,KAAK,EAAC;AACJvC,gBAAAA,KAAK,sBACFN,EAAE,CAACkG,IADD,aACW7F,IADX;AADD;AADwB,aAAd,CAFnB;;AAAA;AAEOyC,YAAAA,IAFP;;AAAA,kBASKA,IAAI,IAAE,IATX;AAAA;AAAA;AAAA;;AAAA,+CAUU3C,GAAG,CAACgC,IAAJ,CAASW,IAAT,CAVV;;AAAA;AAAA,+CAaU3C,GAAG,CAACgC,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CAbV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmBgB+D,iB;;;;;+EAAf,mBAAiCjG,GAAjC,EAAqCC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AACOG,YAAAA,KADP,GACeJ,GAAG,CAACE,IADnB,CACOE,KADP;AAAA;AAAA,mBAGkBoB,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJvC,gBAAAA,KAAK,EAALA;AADI;AADwB,aAAd,CAHlB;;AAAA;AAGMwC,YAAAA,IAHN;;AAAA,kBAQIA,IAAI,IAAE,IARV;AAAA;AAAA;AAAA;;AAAA,+CASW3C,GAAG,CAACgC,IAAJ,CAASW,IAAT,CATX;;AAAA;AAAA,+CAYS3C,GAAG,CAACgC,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkBcgE,U;;;;;wEAAf,mBAA0BlG,GAA1B,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACDkG,YAAAA,OADC,GACO7G,OAAO,CAAC8G,OAAR,CAAgB,QAAhB,CADP;AAELnG,YAAAA,GAAG,CAACgC,IAAJ,CAAS;AAAC,yBAAUkE;AAAX,aAAT;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeE,M;;;;;oEAAf,mBAAsBrG,GAAtB,EAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEc,YAAAA,EADF,GACMf,GAAG,CAACE,IADV,CACEa,EADF;AAAA;AAAA,mBAEaS,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAFb;;AAAA;AAEC6B,YAAAA,IAFD;;AAAA,kBAWDA,IAAI,CAACzB,SAAL,IAAgB,IAXf;AAAA;AAAA;AAAA;;AAYMwC,YAAAA,CAZN,GAYU,CAZV;;AAAA;AAAA,kBAYaA,CAAC,GAAGf,IAAI,CAACzB,SAAL,CAAeiD,MAZhC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAaoBV,oBAAQhB,OAAR,CAAgB;AACnCC,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAC6B,IAAI,CAACzB,SAAL,CAAewC,CAAf;AADC;AAD6B,aAAhB,CAbpB;;AAAA;AAaKC,YAAAA,OAbL;;AAmBD,gBAAIlE,EAAE,CAACuD,UAAH,CAAc,qBAAmBW,OAAO,CAACzD,IAAzC,CAAJ,EAAoD;AAClDV,cAAAA,MAAM,CAAC,qBAAmBmE,OAAO,CAACzD,IAA5B,EAAkC,YAAY;AAAE0B,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAsB,eAAtE,CAAN;AAED;;AACD,gBAAIpC,EAAE,CAACuD,UAAH,CAAcW,OAAO,CAACzD,IAAtB,CAAJ,EAAiC;AAC/BV,cAAAA,MAAM,CAACmE,OAAO,CAACzD,IAAT,EAAe,YAAY;AAAE0B,gBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAsB,eAAnD,CAAN;AAED;;AAEP7B,YAAAA,GAAG,CAACgC,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT;;AA5BO;AAYwC0B,YAAAA,CAAC,EAZzC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAoCe2C,yB;;;;;uFAAf,mBAAyCtG,GAAzC,EAA6CC,GAA7C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACyBD,GAAG,CAACE,IAD7B,EACQE,KADR,cACQA,KADR,EACcO,QADd,cACcA,QADd;AAAA;AAAA,mBAEmBa,kBAAMkB,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJvC,gBAAAA,KAAK,EAALA;AADI;AADwB,aAAd,CAFnB;;AAAA;AAEOwC,YAAAA,IAFP;;AAAA,kBAOKA,IAAI,IAAE,IAPX;AAAA;AAAA;AAAA;;AAAA,iBAQQxD,YAAY,CAACmH,MAAb,CAAoB5F,QAApB,EAA8BiC,IAAI,CAAC/B,cAAnC,CARR;AAAA;AAAA;AAAA;;AASKvB,YAAAA,OAAO,CAACO,OAAR,CAAgB,QAAhB,EAA0B+C,IAAI,CAAC7B,EAA/B;AACAxB,YAAAA,QAAQ,GAACqD,IAAI,CAAC7B,EAAd;AAVL,+CAYYd,GAAG,CAAC8B,QAAJ,0BAZZ;;AAAA;AAAA,+CAeY9B,GAAG,CAAC8B,QAAJ,oCAfZ;;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAsBQ9B,GAAG,CAAC8B,QAAJ,oCAtBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA2BeyE,U;;;;;wEAAf,mBAA0BxG,GAA1B,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACKc,YAAAA,EADL,GACUf,GAAG,CAACwE,MADd,CACKzD,EADL;AAAA;AAAA,mBAE0BS,kBAAMiF,OAAN,CAAc;AACzC9D,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AADmC,aAAd,CAF1B;;AAAA;AAEG2F,YAAAA,cAFH;AAOHzG,YAAAA,GAAG,CAACgC,IAAJ,CAAS;AACPC,cAAAA,OAAO,EAAC,2BADD;AAEPyE,cAAAA,KAAK,EAAED;AAFA,aAAT;;AAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAceE,qB;;;;;mFAAf,mBAAqC5G,GAArC,EAAyCC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAEe4G,U;;;;;wEAAf,mBAA0B7G,GAA1B,EAA8BC,GAA9B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACKc,YAAAA,EADL,GACYf,GAAG,CAACwE,MADhB,CACKzD,EADL;AAAA,yBAEwCf,GAAG,CAACE,IAF5C,EAEIC,IAFJ,cAEIA,IAFJ,EAESC,KAFT,cAESA,KAFT,EAEgBE,QAFhB,cAEgBA,QAFhB,EAE0Ba,SAF1B,cAE0BA,SAF1B;AAAA;AAAA,mBAIiBK,kBAAMa,OAAN,CAAc;AAChCoC,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,MAAP,EAAc,OAAd,EAAuB,UAAvB,EAAmC,WAAnC,CADoB;AAEhC9B,cAAAA,KAAK,EAAC;AACJ5B,gBAAAA,EAAE,EAAFA;AADI;AAF0B,aAAd,CAJjB;;AAAA;AAIGuB,YAAAA,KAJH;;AAWH,gBAAIA,KAAK,CAAC8B,MAAN,GAAa,CAAjB,EAAoB;AAClB9B,cAAAA,KAAK,CAACwE,OAAN;AAAA,mFAAc,mBAAMlE,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACNA,IAAI,CAACC,MAAL,CAAY;AAChB1C,4BAAAA,IAAI,EAAJA,IADgB;AAEhBC,4BAAAA,KAAK,EAALA,KAFgB;AAGhBE,4BAAAA,QAAQ,EAARA,QAHgB;AAIhBa,4BAAAA,SAAS,EAATA;AAJgB,2BAAZ,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAd;;AAAA;AAAA;AAAA;AAAA;AASD;;AArBE,+CAsBIlB,GAAG,CAACgC,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC,2BADM;AAEdC,cAAAA,IAAI,EAACG;AAFS,aAAT,CAtBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;eA2BU/C,Q",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "import Users from '../models/Users';\nimport Project from '../models/Project';\nvar passwordHash = require('password-hash');\nvar storage = require('node-sessionstorage')\nvar storage1=\"\";\nconst  octokit = require('@octokit/rest');\n\nvar rimraf = require(\"rimraf\");\nvar fs = require('fs-extra');\n//var path = require(\"path\")\n//var Git = require(\"nodegit\");\n\nconst simpleGit = require('simple-git')();\n// Shelljs package for running shell tasks optional\n//const shellJs = require('shelljs');\n// Simple Git with Promise for handling success and failure\nconst simpleGitPromise = require('simple-git/promise')();\nstorage.setItem('userID', \"\")\n\nconst { Op } = require(\"sequelize\");\n\n\n\nexport async function createUser(req, res){\n  var { name,login,email,gittoken,gitusername,job,location,school,password,mastodon}= req.body;\n  let hashedpassword = passwordHash.generate(password);\n  var id= Math.floor(Math.random() * Math.floor(1000000000000));\n  var projectid=null;\n  var company=null;\n  var nbfollowers=0;\n  var listoffollow=null;\n  var picture=null;\n  try{\n    let newUser= await Users.create({\n      id,\n      name,\n      login,\n      email,\n      gittoken,\n      school,\n      projectid,\n      location,\n      job,\n      company,\n      gitusername,\n      nbfollowers,\n      listoffollow,\n      picture,\n      hashedpassword,\n      mastodon\n    },{\n      fields:['id','name','login','email','gittoken','school','projectid','location','job','company','gitusername','nbfollowers','listoffollow','picture','hashedpassword','mastodon']\n    });\n    if(newUser){\n      setTimeout(function(){\n        console.log(\"user created successfully\");\n        res.redirect(\"/login.html\")},500)\n      }\n\n  }catch(error){\n    console.log(error);\n    res.status(500).json({\n      message: 'something went wrong',\n      data:{}\n    });\n  }\n}\n//console.log(passwordHash.verify('password123', hashedpassword)); // true\n\nexport async function getUsers(req,res){\n   try{\n    const users= await Users.findAll();\n    res.json({\n      data:users\n    });\n   }catch(e){\n    console.log(e)\n   }\n  }\n\n   export async function changeCurrent(req,res){\n     const { id,newCurrentid,newCurrentname }=req.body;\n    // rimraf(`fictiveProjects/${newCurrentname}/`, function () { console.log(\"done\"); });\n\n      const user= await Users.findOne({\n        where:{\n          id\n        }\n      });\n      if (user!=null) {\n        user.update({\n\n            currentproject:{\n              id:newCurrentid,\n              name:newCurrentname\n            }\n\n        })\n       var url=`https://github.com/${user.gitusername}/${newCurrentname}.git`\n\n\n\n\n        var localPath =`${newCurrentname}`;\n        // var opts = {\n        //     fetchOpts: {\n        //       callbacks: {\n        //         certificateCheck: () => 0\n        //     }\n        //   }\n        // };\n        if (!fs.existsSync(user.currentproject.name)) {\n          console.log(\"helloo\");\n        //fs.mkdirSync(user.currentproject.name);\n\n        simpleGit.clone(url, localPath)\n\n\n\n         setTimeout(function(){\n           if (!fs.existsSync(`${user.currentproject.name}/src`)){\n              fs.mkdirSync(`${user.currentproject.name}/src`);\n              var file=fs.open(`${user.currentproject.name}/src/index.php`,'w', (err) => {\n                    if (err) throw err;\n                  });\n\n\n          }\n        },2000)\n        }\n\n        return res.json(user);\n\n    }\n\n    }\n    export async function updatePicture(req,res){\n    const { id,picture }=req.body;\n    const user= await Users.findOne({\n      where:{\n        id\n      }\n    });\n    if (user!=null) {\n      console.log(user);\n      user.update({\n\n          picture\n\n      })\n      return res.json(user);\n\n    }else {\n      console.log(\"hp\");\n      return res.json({\n        message:'User does not exist '\n      });\n    }\n\n  }\n  export async function verifyCommit(req,res){\n      const {id}= req.body;\n      var listOfprojectNotCommited=[]\n      const user = await Users.findOne({\n        where:{\n          id\n      }\n      });\n\n      if (user.projectid!=null) {\n        console.log(\"client :\");\n\n        for (var i = 0; i < user.projectid.length; i++) {\n          const project = await Project.findOne({\n            where:{\n              id:user.projectid[i]\n            }\n          });\n          simpleGit.cwd(project.name)\n          simpleGitPromise.cwd(project.name)\n\n      //     simpleGitPromise.diffSummary()\n      //         .then(\n      //           (diff) => {\n      //             console.log(\"get\");\n      //             console.log(\"this is commit\",diff);\n      //             if (diff.changed!=\"0\") {\n      //                   console.log(diff.changed)\n      //\n      //                    listOfprojectNotCommited.push(project.name)\n      //\n      //\n      //              }\n      //\n      //\n      //       });\n      //     setTimeout(function(){\n      //               console.log(listOfprojectNotCommited);\n      //              if (listOfprojectNotCommited.length!=0) {\n      //                 res.json({\"message\":listOfprojectNotCommited})\n      //\n      //                     }else {\n      //                   res.json({\"message\":\"no problem\"})\n      //\n      //                   }\n      //\n      //   },500)\n      // }\n\n\n          simpleGitPromise.log().then(\n\n            (addSuccess) => {\n\n                   console.log(\"yes\");\n\n                              simpleGitPromise.diffSummary()\n                                .then(\n                                   (diff) => {\n                                     console.log(\"get\");\n                                     console.log(\"this is commit\",diff);\n                                     if (diff.changed!=\"0\") {\n                                       console.log(diff.changed)\n\n                                       listOfprojectNotCommited.push(project.name)\n                                       setTimeout(function(){\n                                         console.log(listOfprojectNotCommited);\n                                         console.log(\"hello\");\n                                         if (listOfprojectNotCommited.length!=0) {\n                                           res.json({\"message\":listOfprojectNotCommited})\n\n                                         }else {\n                                           res.json({\"message\":\"no problem\"})\n\n                                         }\n\n                                       },500)\n\n                                   }\n\n\n                                   });\n\n\n\n\n\n                 }, (failedAdd) => {\n\n                   res.json({\"message\":[]})\n                  }\n          )\n\n        }\n\n\n      }else {\n        res.json({\n          \"message\":\"no projects\"\n        })\n      }\n\n  }\nexport async function getUsersByProject(req,res){\n    const {projectId}= req.params;\n    const ProjectUsers = await Users.findAll({\n      attributes: ['name', 'projectid'],\n      where:{\n        projectid:{\n         [Op.contains]:projectId\n\n\n      }\n    }\n    });\n    if (ProjectUsers.length>0) {\n      return res.json(ProjectUsers);\n    }else {\n      res.json({\n        message:'that project does not exist'\n      });\n    }\n\n}\nexport async function checkFollower(req,res){\n  const { id,myid }=req.body;\n  let check=false\n  const user= await Users.findOne({\n    where:{\n      id\n    }\n  });\n  if (user.listoffollow!=null) {\n    console.log(user.listoffollow[0]);\n\n    let myinfo={\"id\":myid}\n    console.log(myinfo);\n    console.log(user.listoffollow[0].json==myid);\n    for (var i = 0; i < user.listoffollow.length; i++) {\n      if (user.listoffollow[i].id==myid) {\n        check=true\n        console.log(check);\n      }\n    }\n    if (check==true) {\n        res.json({\n          \"check\":true\n        })\n    }\n  }else {\n    res.json({\n      \"check\":false\n\n    })\n  }\n\n\n}\nexport async function unFollow(req,res){\n    const { id,myid }=req.body;\n    console.log(id);\n    const user= await Users.findOne({\n      where:{\n        id\n      }\n    })\n    var listoffollow=user.listoffollow\n    if (listoffollow!=null) {\n      if (listoffollow.length==1) {\n        user.update({\n\n            nbfollowers: user.nbfollowers-1,\n            listoffollow:null\n\n        })\n      }else{\n        listoffollow.splice( listoffollow.indexOf({\"id\":myid}), 1 );\n        user.update({\n\n            nbfollowers: user.nbfollowers-1,\n            listoffollow:listoffollow\n\n        })\n      }\n\n    }\n\n\n\n\n    if (user!=null) {\n      return res.json(user);\n\n    }else {\n      return res.json({\n        message:'User does not exist '\n      });\n    }\n\n  }\nexport async function newFollower(req,res){\n    var { id,myid}=req.body;\n    myid=parseInt(myid)\n    console.log(req.body);\n    console.log(id);\n    const user= await Users.findOne({\n      where:{\n        id\n      }\n    })\n    var listoffollow=user.listoffollow\n    if (listoffollow!=null) {\n      listoffollow.append({\n        \"id\":myid\n      })\n      console.log(listoffollow);\n      user.update({\n\n          nbfollowers: user.nbfollowers+1,\n          listoffollow:listoffollow\n\n      })\n\n    }else {\n      user.update({\n\n          nbfollowers: user.nbfollowers+1,\n          listoffollow:[{\"id\":myid}]\n\n      })\n    }\n\n\n    if (user!=null) {\n      return res.json(user);\n\n    }else {\n      return res.json({\n        message:'User does not exist '\n      });\n    }\n\n  }\n  export async function getUserById(req,res){\n    const { id }=req.body;\n    console.log(id);\n    const user= await Users.findOne({\n      where:{\n        id\n      }\n    });\n    if (user!=null) {\n      return res.json(user);\n\n    }else {\n      return res.json({\n        message:'User does not exist '\n      });\n    }\n\n  }\n  export async function acceptRequest(req,res){\n    const { id,senderLogin,name }=req.body;\n    console.log(id);\n    const sender= await Users.findOne({\n      where:{\n        login:senderLogin\n      }\n    });\n    const user= await Users.findOne({\n      where:{\n        id\n      }\n    });\n    if (user.requests!=null) {\n      var newRequests=[]\n      for (var i = 0; i < user.requests.length; i++) {\n        if(user.requests[i].senderID!=sender.id || user.requests[i].projectName!=name){\n          newRequests.push(user.requests[i])\n        }else {\n          newRequests.push({\n            \"projectName\":name,\n            \"senderID\":sender.id,\n            \"status\":\"approved\"\n          })\n        }\n\n      }\n      user.update({\n        requests:newRequests\n      })\n\n    }\n\n\n\n    var newProjectid=sender.projectid\n    console.log(name);\n\n    console.log(\"les anciens projets sont \"+newProjectid);\n    const project= await Project.findOne({\n      where:{\n        name:name\n      }\n    });\n    console.log(\"yes \"+project.name);\n    console.log(project.id);\n    if (newProjectid!=null) {\n      newProjectid.push(project.id)\n    }else {\n      console.log(newProjectid);\n      var newProjectid=[project.id]\n    }\n    sender.update({\n      projectid:newProjectid\n    })\n\n  }\n\nexport async function getUserByName(req,res){\n        const { name }=req.body;\n        const user= await Users.findAll({\n          where:{\n            login : {\n              [Op.like]:`%${name}%`\n            }\n          }\n        });\n        if (user!=null) {\n          return res.json(user);\n\n        }else {\n          return res.json({\n            message:'User does not exist '\n          });\n        }\n\n      }\n export async function searchUserByLogin(req,res){\n        const {login}= req.body;\n\n        const user= await Users.findOne({\n          where:{\n            login\n          }\n        });\n        if (user!=null) {\n            return res.json(user);\n\n        }else {\n          return res.json({\n            message:'User does not exist '\n          });\n        }\n\n      }\nexport async function getSession(req,res){\n  var session=storage.getItem('userID')\n  res.json({\"session\":session})\n\n}\nexport async function logout(req,res){\n  const {id}=req.body\n  const user= await Users.findOne({\n    where:{\n      id\n    }\n  });\n  // user.update({\n  //\n  //     currentproject:null\n  // })\n  if (user.projectid!=null) {\n    for (var i = 0; i < user.projectid.length; i++) {\n      const project= await Project.findOne({\n        where:{\n          id:user.projectid[i]\n\n        }\n      });\n      if (fs.existsSync(\"fictiveProjects/\"+project.name)) {\n        rimraf(\"fictiveProjects/\"+project.name, function () { console.log(\"done\"); });\n\n      }\n      if (fs.existsSync(project.name)) {\n        rimraf(project.name, function () { console.log(\"done\"); });\n\n      }\n\nres.json({\n  \"message\":\"deleted\"\n})\n\n    }\n  }\n\n}\nexport async function getUserByLoginAndPassword(req,res){\n        const {login,password}= req.body;\n        const user= await Users.findOne({\n          where:{\n            login\n          }\n        });\n        if (user!=null ) {\n          if ( passwordHash.verify(password, user.hashedpassword)) {\n            storage.setItem('userID', user.id)\n            storage1=user.id\n\n            return res.redirect(`http://localhost:3000/`);\n\n          }else {\n            return res.redirect(`http://localhost:3000/login.html`);\n\n          }\n\n\n\n      }else {\n        return res.redirect(`http://localhost:3000/login.html`);\n\n      }\n    }\n\nexport async function deleteUser(req,res){\n    const { id }=req.params;\n    const deleteRowCount = await Users.destroy({\n      where:{\n        id\n      }\n    });\n    res.json({\n      message:'User deleted successfully',\n      count: deleteRowCount\n    });\n\n  }\n\nexport async function deleteUserFromProject(req,res){}\n\nexport async function updateUser(req,res){\n    const { id } = req.params;\n    const{ name,login, gittoken, projectid } = req.body;\n\n    const users = await Users.findAll({\n      attributes: ['id', 'name','login', 'gittoken', 'projectid'],\n      where:{\n        id\n      }\n    });\n\n    if (users.length>0) {\n      users.forEach(async user => {\n        await user.update({\n          name,\n          login,\n          gittoken,\n          projectid\n        });\n      })\n\n    }\n    return res.json({\n      message:'User Updated successfully',\n      data:users\n    })\n  }\n  export default storage1;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/models/Users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/models/Users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/models/Users.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/models/Users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/models/",
        "sourceFileName": "Users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Users = _database.sequelize.define('users', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  name: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  login: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  gitusername: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  email: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  gittoken: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  projectid: {\n    type: _sequelize[\"default\"].DataTypes.ARRAY(_sequelize[\"default\"].INTEGER)\n  },\n  location: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  job: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  school: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  company: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  nbfollowers: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  listoffollow: {\n    type: _sequelize[\"default\"].DataTypes.ARRAY(JSON)\n  },\n  picture: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  hashedpassword: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  currentproject: {\n    type: _sequelize[\"default\"].JSON\n  },\n  mastodon: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  requests: {\n    type: _sequelize[\"default\"].DataTypes.ARRAY(JSON)\n  }\n}, {\n  timestamps: false\n});\n\nvar _default = Users;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzLmpzIl0sIm5hbWVzIjpbIlVzZXJzIiwic2VxdWVsaXplIiwiZGVmaW5lIiwiaWQiLCJ0eXBlIiwiU2VxdWVsaXplIiwiSU5URUdFUiIsInByaW1hcnlLZXkiLCJuYW1lIiwiVEVYVCIsImxvZ2luIiwiZ2l0dXNlcm5hbWUiLCJlbWFpbCIsImdpdHRva2VuIiwicHJvamVjdGlkIiwiRGF0YVR5cGVzIiwiQVJSQVkiLCJsb2NhdGlvbiIsImpvYiIsInNjaG9vbCIsImNvbXBhbnkiLCJuYmZvbGxvd2VycyIsImxpc3RvZmZvbGxvdyIsIkpTT04iLCJwaWN0dXJlIiwiaGFzaGVkcGFzc3dvcmQiLCJjdXJyZW50cHJvamVjdCIsIm1hc3RvZG9uIiwicmVxdWVzdHMiLCJ0aW1lc3RhbXBzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxLQUFLLEdBQUNDLG9CQUFVQyxNQUFWLENBQWlCLE9BQWpCLEVBQXlCO0FBQ25DQyxFQUFBQSxFQUFFLEVBQUM7QUFDREMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEZjtBQUVEQyxJQUFBQSxVQUFVLEVBQUM7QUFGVixHQURnQztBQUtuQ0MsRUFBQUEsSUFBSSxFQUFDO0FBQ0hKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRGIsR0FMOEI7QUFRbkNDLEVBQUFBLEtBQUssRUFBQztBQUNKTixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURaLEdBUjZCO0FBV25DRSxFQUFBQSxXQUFXLEVBQUM7QUFDVlAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFETixHQVh1QjtBQWNuQ0csRUFBQUEsS0FBSyxFQUFDO0FBQ0pSLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FkNkI7QUFpQm5DSSxFQUFBQSxRQUFRLEVBQUM7QUFDUFQsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEVCxHQWpCMEI7QUFvQm5DSyxFQUFBQSxTQUFTLEVBQUM7QUFDUlYsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVVUsU0FBVixDQUFvQkMsS0FBcEIsQ0FBMEJYLHNCQUFVQyxPQUFwQztBQURFLEdBcEJ5QjtBQXVCbkNXLEVBQUFBLFFBQVEsRUFBQztBQUNQYixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURULEdBdkIwQjtBQTBCbkNTLEVBQUFBLEdBQUcsRUFBQztBQUNGZCxJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURkLEdBMUIrQjtBQTZCbkNVLEVBQUFBLE1BQU0sRUFBQztBQUNMZixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURYLEdBN0I0QjtBQWdDbkNXLEVBQUFBLE9BQU8sRUFBQztBQUNOaEIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFEVixHQWhDMkI7QUFtQ25DWSxFQUFBQSxXQUFXLEVBQUM7QUFDVmpCLElBQUFBLElBQUksRUFBRUMsc0JBQVVDO0FBRE4sR0FuQ3VCO0FBc0NuQ2dCLEVBQUFBLFlBQVksRUFBQztBQUNYbEIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVVUsU0FBVixDQUFvQkMsS0FBcEIsQ0FBMEJPLElBQTFCO0FBREssR0F0Q3NCO0FBeUNuQ0MsRUFBQUEsT0FBTyxFQUFDO0FBQ05wQixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURWLEdBekMyQjtBQTZDbkNnQixFQUFBQSxjQUFjLEVBQUM7QUFDYnJCLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBREgsR0E3Q29CO0FBaURuQ2lCLEVBQUFBLGNBQWMsRUFBQztBQUNidEIsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVWtCO0FBREgsR0FqRG9CO0FBcURuQ0ksRUFBQUEsUUFBUSxFQUFDO0FBQ052QixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVSTtBQURWLEdBckQwQjtBQXlEbENtQixFQUFBQSxRQUFRLEVBQUM7QUFDTnhCLElBQUFBLElBQUksRUFBRUMsc0JBQVVVLFNBQVYsQ0FBb0JDLEtBQXBCLENBQTBCTyxJQUExQjtBQURBO0FBekR5QixDQUF6QixFQThEVjtBQUNBTSxFQUFBQSxVQUFVLEVBQUM7QUFEWCxDQTlEVSxDQUFaOztlQWlFZTdCLEsiLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvbW9kZWxzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJztcbmltcG9ydCB7IHNlcXVlbGl6ZSB9IGZyb20gJy4uL2RhdGFiYXNlL2RhdGFiYXNlJztcblxuY29uc3QgVXNlcnM9c2VxdWVsaXplLmRlZmluZSgndXNlcnMnLHtcbiAgaWQ6e1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSLFxuICAgIHByaW1hcnlLZXk6dHJ1ZVxuICB9LFxuICBuYW1lOntcbiAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxuICB9LFxuICBsb2dpbjp7XG4gICAgdHlwZTogU2VxdWVsaXplLlRFWFRcbiAgfSxcbiAgZ2l0dXNlcm5hbWU6e1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXG4gIH0sXG4gIGVtYWlsOntcbiAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxuICB9LFxuICBnaXR0b2tlbjp7XG4gICAgdHlwZTogU2VxdWVsaXplLlRFWFRcbiAgfSxcbiAgcHJvamVjdGlkOntcbiAgICB0eXBlOiBTZXF1ZWxpemUuRGF0YVR5cGVzLkFSUkFZKFNlcXVlbGl6ZS5JTlRFR0VSKVxuICB9LFxuICBsb2NhdGlvbjp7XG4gICAgdHlwZTogU2VxdWVsaXplLlRFWFRcbiAgfSxcbiAgam9iOntcbiAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxuICB9LFxuICBzY2hvb2w6e1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXG4gIH0sXG4gIGNvbXBhbnk6e1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXG4gIH0sXG4gIG5iZm9sbG93ZXJzOntcbiAgICB0eXBlOiBTZXF1ZWxpemUuSU5URUdFUlxuICB9LFxuICBsaXN0b2Zmb2xsb3c6e1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5EYXRhVHlwZXMuQVJSQVkoSlNPTilcbiAgfSxcbiAgcGljdHVyZTp7XG4gICAgdHlwZTogU2VxdWVsaXplLlRFWFRcblxuICB9LFxuICBoYXNoZWRwYXNzd29yZDp7XG4gICAgdHlwZTogU2VxdWVsaXplLlRFWFRcblxuICB9LFxuICBjdXJyZW50cHJvamVjdDp7XG4gICAgdHlwZTogU2VxdWVsaXplLkpTT05cblxuICB9LFxuICBtYXN0b2Rvbjp7XG4gICAgIHR5cGU6IFNlcXVlbGl6ZS5URVhUXG5cbiAgIH0sXG4gICByZXF1ZXN0czp7XG4gICAgICB0eXBlOiBTZXF1ZWxpemUuRGF0YVR5cGVzLkFSUkFZKEpTT04pXG5cbiAgICAgfVxuXG59LHtcbiAgdGltZXN0YW1wczpmYWxzZVxufSk7XG5leHBvcnQgZGVmYXVsdCBVc2VycztcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Users.js"
      ],
      "names": [
        "Users",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "name",
        "TEXT",
        "login",
        "gitusername",
        "email",
        "gittoken",
        "projectid",
        "DataTypes",
        "ARRAY",
        "location",
        "job",
        "school",
        "company",
        "nbfollowers",
        "listoffollow",
        "JSON",
        "picture",
        "hashedpassword",
        "currentproject",
        "mastodon",
        "requests",
        "timestamps"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,KAAK,GAACC,oBAAUC,MAAV,CAAiB,OAAjB,EAAyB;AACnCC,EAAAA,EAAE,EAAC;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,OADf;AAEDC,IAAAA,UAAU,EAAC;AAFV,GADgC;AAKnCC,EAAAA,IAAI,EAAC;AACHJ,IAAAA,IAAI,EAAEC,sBAAUI;AADb,GAL8B;AAQnCC,EAAAA,KAAK,EAAC;AACJN,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAR6B;AAWnCE,EAAAA,WAAW,EAAC;AACVP,IAAAA,IAAI,EAAEC,sBAAUI;AADN,GAXuB;AAcnCG,EAAAA,KAAK,EAAC;AACJR,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GAd6B;AAiBnCI,EAAAA,QAAQ,EAAC;AACPT,IAAAA,IAAI,EAAEC,sBAAUI;AADT,GAjB0B;AAoBnCK,EAAAA,SAAS,EAAC;AACRV,IAAAA,IAAI,EAAEC,sBAAUU,SAAV,CAAoBC,KAApB,CAA0BX,sBAAUC,OAApC;AADE,GApByB;AAuBnCW,EAAAA,QAAQ,EAAC;AACPb,IAAAA,IAAI,EAAEC,sBAAUI;AADT,GAvB0B;AA0BnCS,EAAAA,GAAG,EAAC;AACFd,IAAAA,IAAI,EAAEC,sBAAUI;AADd,GA1B+B;AA6BnCU,EAAAA,MAAM,EAAC;AACLf,IAAAA,IAAI,EAAEC,sBAAUI;AADX,GA7B4B;AAgCnCW,EAAAA,OAAO,EAAC;AACNhB,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAhC2B;AAmCnCY,EAAAA,WAAW,EAAC;AACVjB,IAAAA,IAAI,EAAEC,sBAAUC;AADN,GAnCuB;AAsCnCgB,EAAAA,YAAY,EAAC;AACXlB,IAAAA,IAAI,EAAEC,sBAAUU,SAAV,CAAoBC,KAApB,CAA0BO,IAA1B;AADK,GAtCsB;AAyCnCC,EAAAA,OAAO,EAAC;AACNpB,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GAzC2B;AA6CnCgB,EAAAA,cAAc,EAAC;AACbrB,IAAAA,IAAI,EAAEC,sBAAUI;AADH,GA7CoB;AAiDnCiB,EAAAA,cAAc,EAAC;AACbtB,IAAAA,IAAI,EAAEC,sBAAUkB;AADH,GAjDoB;AAqDnCI,EAAAA,QAAQ,EAAC;AACNvB,IAAAA,IAAI,EAAEC,sBAAUI;AADV,GArD0B;AAyDlCmB,EAAAA,QAAQ,EAAC;AACNxB,IAAAA,IAAI,EAAEC,sBAAUU,SAAV,CAAoBC,KAApB,CAA0BO,IAA1B;AADA;AAzDyB,CAAzB,EA8DV;AACAM,EAAAA,UAAU,EAAC;AADX,CA9DU,CAAZ;;eAiEe7B,K",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/models/",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\nimport { sequelize } from '../database/database';\n\nconst Users=sequelize.define('users',{\n  id:{\n    type: Sequelize.INTEGER,\n    primaryKey:true\n  },\n  name:{\n    type: Sequelize.TEXT\n  },\n  login:{\n    type: Sequelize.TEXT\n  },\n  gitusername:{\n    type: Sequelize.TEXT\n  },\n  email:{\n    type: Sequelize.TEXT\n  },\n  gittoken:{\n    type: Sequelize.TEXT\n  },\n  projectid:{\n    type: Sequelize.DataTypes.ARRAY(Sequelize.INTEGER)\n  },\n  location:{\n    type: Sequelize.TEXT\n  },\n  job:{\n    type: Sequelize.TEXT\n  },\n  school:{\n    type: Sequelize.TEXT\n  },\n  company:{\n    type: Sequelize.TEXT\n  },\n  nbfollowers:{\n    type: Sequelize.INTEGER\n  },\n  listoffollow:{\n    type: Sequelize.DataTypes.ARRAY(JSON)\n  },\n  picture:{\n    type: Sequelize.TEXT\n\n  },\n  hashedpassword:{\n    type: Sequelize.TEXT\n\n  },\n  currentproject:{\n    type: Sequelize.JSON\n\n  },\n  mastodon:{\n     type: Sequelize.TEXT\n\n   },\n   requests:{\n      type: Sequelize.DataTypes.ARRAY(JSON)\n\n     }\n\n},{\n  timestamps:false\n});\nexport default Users;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/database/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/database/database.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/database/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/database/database.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/database/database.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/database/database.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/database/",
        "sourceFileName": "database.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//connexion to database\nvar sequelize = new _sequelize[\"default\"]('db_emerginov', 'test_user', 'azerty', // 'lpjibasl',\n// 'lpjibasl',\n// '6o5Zh4iXTCgAdrpg9SGsRoYlM70c0X3o',\n{\n  host: 'localhost',\n  // host: 'localhost',\n  dialect: 'postgres',\n  pool: {\n    max: 1000,\n    min: 0,\n    require: 30000,\n    idle: 10000\n  },\n  logging: false\n});\nexports.sequelize = sequelize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGFiYXNlLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwicG9vbCIsIm1heCIsIm1pbiIsInJlcXVpcmUiLCJpZGxlIiwibG9nZ2luZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBRUE7QUFDTyxJQUFNQSxTQUFTLEdBQUMsSUFBSUMscUJBQUosQ0FDdkIsY0FEdUIsRUFFdkIsV0FGdUIsRUFHdkIsUUFIdUIsRUFNckI7QUFDQTtBQUNBO0FBQ0E7QUFDR0MsRUFBQUEsSUFBSSxFQUFDLFdBRFI7QUFFRTtBQUNBQyxFQUFBQSxPQUFPLEVBQUMsVUFIVjtBQUlFQyxFQUFBQSxJQUFJLEVBQUM7QUFDSEMsSUFBQUEsR0FBRyxFQUFDLElBREQ7QUFFSEMsSUFBQUEsR0FBRyxFQUFDLENBRkQ7QUFHSEMsSUFBQUEsT0FBTyxFQUFDLEtBSEw7QUFJSEMsSUFBQUEsSUFBSSxFQUFDO0FBSkYsR0FKUDtBQVVFQyxFQUFBQSxPQUFPLEVBQUM7QUFWVixDQVRxQixDQUFoQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlzYWJldGgvRW1lcmdpbm92LUlJL3NyYy9kYXRhYmFzZS8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5cbi8vY29ubmV4aW9uIHRvIGRhdGFiYXNlXG5leHBvcnQgY29uc3Qgc2VxdWVsaXplPW5ldyBTZXF1ZWxpemUoXG4nZGJfZW1lcmdpbm92Jyxcbid0ZXN0X3VzZXInLFxuJ2F6ZXJ0eScsXG5cblxuICAvLyAnbHBqaWJhc2wnLFxuICAvLyAnbHBqaWJhc2wnLFxuICAvLyAnNm81Wmg0aVhUQ2dBZHJwZzlTR3NSb1lsTTcwYzBYM28nLFxuICB7XG4gICAgIGhvc3Q6J2xvY2FsaG9zdCcsXG4gICAgLy8gaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgZGlhbGVjdDoncG9zdGdyZXMnLFxuICAgIHBvb2w6e1xuICAgICAgbWF4OjEwMDAsXG4gICAgICBtaW46MCxcbiAgICAgIHJlcXVpcmU6MzAwMDAsXG4gICAgICBpZGxlOjEwMDAwXG4gICAgfSxcbiAgICBsb2dnaW5nOmZhbHNlXG4gIH1cbilcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "database.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "pool",
        "max",
        "min",
        "require",
        "idle",
        "logging"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAEA;AACO,IAAMA,SAAS,GAAC,IAAIC,qBAAJ,CACvB,cADuB,EAEvB,WAFuB,EAGvB,QAHuB,EAMrB;AACA;AACA;AACA;AACGC,EAAAA,IAAI,EAAC,WADR;AAEE;AACAC,EAAAA,OAAO,EAAC,UAHV;AAIEC,EAAAA,IAAI,EAAC;AACHC,IAAAA,GAAG,EAAC,IADD;AAEHC,IAAAA,GAAG,EAAC,CAFD;AAGHC,IAAAA,OAAO,EAAC,KAHL;AAIHC,IAAAA,IAAI,EAAC;AAJF,GAJP;AAUEC,EAAAA,OAAO,EAAC;AAVV,CATqB,CAAhB",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/database/",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\n\n//connexion to database\nexport const sequelize=new Sequelize(\n'db_emerginov',\n'test_user',\n'azerty',\n\n\n  // 'lpjibasl',\n  // 'lpjibasl',\n  // '6o5Zh4iXTCgAdrpg9SGsRoYlM70c0X3o',\n  {\n     host:'localhost',\n    // host: 'localhost',\n    dialect:'postgres',\n    pool:{\n      max:1000,\n      min:0,\n      require:30000,\n      idle:10000\n    },\n    logging:false\n  }\n)\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/models/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/models/Project.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/models/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/models/Project.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/models/Project.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/models/Project.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/models/",
        "sourceFileName": "Project.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nvar _database = require(\"../database/database\");\n\nvar _Users = _interopRequireDefault(require(\"./Users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Project = _database.sequelize.define('projects', {\n  id: {\n    type: _sequelize[\"default\"].INTEGER,\n    primaryKey: true\n  },\n  name: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  priority: {\n    type: _sequelize[\"default\"].INTEGER\n  },\n  description: {\n    type: _sequelize[\"default\"].TEXT\n  },\n  deliverydate: {\n    type: _sequelize[\"default\"].DATE\n  }\n}, {\n  timestamps: false\n});\n\nProject.hasMany(_Users[\"default\"], {\n  foreignKey: 'projectid',\n  sourceKey: 'id'\n});\n\n_Users[\"default\"].belongsTo(Project, {\n  foreignKey: 'projectid',\n  sourceKey: 'id'\n});\n\nvar _default = Project;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlByb2plY3QuanMiXSwibmFtZXMiOlsiUHJvamVjdCIsInNlcXVlbGl6ZSIsImRlZmluZSIsImlkIiwidHlwZSIsIlNlcXVlbGl6ZSIsIklOVEVHRVIiLCJwcmltYXJ5S2V5IiwibmFtZSIsIlRFWFQiLCJwcmlvcml0eSIsImRlc2NyaXB0aW9uIiwiZGVsaXZlcnlkYXRlIiwiREFURSIsInRpbWVzdGFtcHMiLCJoYXNNYW55IiwiVXNlcnMiLCJmb3JlaWduS2V5Iiwic291cmNlS2V5IiwiYmVsb25nc1RvIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFNQSxPQUFPLEdBQUVDLG9CQUFVQyxNQUFWLENBQWlCLFVBQWpCLEVBQTRCO0FBQ3pDQyxFQUFBQSxFQUFFLEVBQUM7QUFDREMsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUMsT0FEZjtBQUVEQyxJQUFBQSxVQUFVLEVBQUU7QUFGWCxHQURzQztBQUt6Q0MsRUFBQUEsSUFBSSxFQUFFO0FBQ0pKLElBQUFBLElBQUksRUFBRUMsc0JBQVVJO0FBRFosR0FMbUM7QUFRekNDLEVBQUFBLFFBQVEsRUFBQztBQUNQTixJQUFBQSxJQUFJLEVBQUVDLHNCQUFVQztBQURULEdBUmdDO0FBV3pDSyxFQUFBQSxXQUFXLEVBQUM7QUFDVlAsSUFBQUEsSUFBSSxFQUFFQyxzQkFBVUk7QUFETixHQVg2QjtBQWN6Q0csRUFBQUEsWUFBWSxFQUFDO0FBQ1hSLElBQUFBLElBQUksRUFBRUMsc0JBQVVRO0FBREw7QUFkNEIsQ0FBNUIsRUFpQmI7QUFDQUMsRUFBQUEsVUFBVSxFQUFDO0FBRFgsQ0FqQmEsQ0FBZjs7QUFvQkFkLE9BQU8sQ0FBQ2UsT0FBUixDQUFnQkMsaUJBQWhCLEVBQXNCO0FBQUNDLEVBQUFBLFVBQVUsRUFBQyxXQUFaO0FBQXdCQyxFQUFBQSxTQUFTLEVBQUM7QUFBbEMsQ0FBdEI7O0FBQ0FGLGtCQUFNRyxTQUFOLENBQWdCbkIsT0FBaEIsRUFBd0I7QUFBQ2lCLEVBQUFBLFVBQVUsRUFBQyxXQUFaO0FBQXdCQyxFQUFBQSxTQUFTLEVBQUM7QUFBbEMsQ0FBeEI7O2VBRWVsQixPIiwic291cmNlUm9vdCI6Ii9ob21lL2VsaXNhYmV0aC9FbWVyZ2lub3YtSUkvc3JjL21vZGVscy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2VxdWVsaXplIGZyb20gJ3NlcXVlbGl6ZSc7XG5pbXBvcnQgeyBzZXF1ZWxpemUgfSAgZnJvbSAnLi4vZGF0YWJhc2UvZGF0YWJhc2UnO1xuaW1wb3J0IFVzZXJzIGZyb20gJy4vVXNlcnMnO1xuXG5jb25zdCBQcm9qZWN0PSBzZXF1ZWxpemUuZGVmaW5lKCdwcm9qZWN0cycse1xuICBpZDp7XG4gICAgdHlwZTogU2VxdWVsaXplLklOVEVHRVIsXG4gICAgcHJpbWFyeUtleTogdHJ1ZVxuICB9LFxuICBuYW1lOiB7XG4gICAgdHlwZTogU2VxdWVsaXplLlRFWFRcbiAgfSxcbiAgcHJpb3JpdHk6e1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5JTlRFR0VSXG4gIH0sXG4gIGRlc2NyaXB0aW9uOntcbiAgICB0eXBlOiBTZXF1ZWxpemUuVEVYVFxuICB9LFxuICBkZWxpdmVyeWRhdGU6e1xuICAgIHR5cGU6IFNlcXVlbGl6ZS5EQVRFXG4gIH1cbn0se1xuICB0aW1lc3RhbXBzOmZhbHNlXG59KTtcblByb2plY3QuaGFzTWFueShVc2Vycyx7Zm9yZWlnbktleToncHJvamVjdGlkJyxzb3VyY2VLZXk6J2lkJ30pO1xuVXNlcnMuYmVsb25nc1RvKFByb2plY3Qse2ZvcmVpZ25LZXk6J3Byb2plY3RpZCcsc291cmNlS2V5OidpZCd9KTtcblxuZXhwb3J0IGRlZmF1bHQgUHJvamVjdDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "Project.js"
      ],
      "names": [
        "Project",
        "sequelize",
        "define",
        "id",
        "type",
        "Sequelize",
        "INTEGER",
        "primaryKey",
        "name",
        "TEXT",
        "priority",
        "description",
        "deliverydate",
        "DATE",
        "timestamps",
        "hasMany",
        "Users",
        "foreignKey",
        "sourceKey",
        "belongsTo"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,OAAO,GAAEC,oBAAUC,MAAV,CAAiB,UAAjB,EAA4B;AACzCC,EAAAA,EAAE,EAAC;AACDC,IAAAA,IAAI,EAAEC,sBAAUC,OADf;AAEDC,IAAAA,UAAU,EAAE;AAFX,GADsC;AAKzCC,EAAAA,IAAI,EAAE;AACJJ,IAAAA,IAAI,EAAEC,sBAAUI;AADZ,GALmC;AAQzCC,EAAAA,QAAQ,EAAC;AACPN,IAAAA,IAAI,EAAEC,sBAAUC;AADT,GARgC;AAWzCK,EAAAA,WAAW,EAAC;AACVP,IAAAA,IAAI,EAAEC,sBAAUI;AADN,GAX6B;AAczCG,EAAAA,YAAY,EAAC;AACXR,IAAAA,IAAI,EAAEC,sBAAUQ;AADL;AAd4B,CAA5B,EAiBb;AACAC,EAAAA,UAAU,EAAC;AADX,CAjBa,CAAf;;AAoBAd,OAAO,CAACe,OAAR,CAAgBC,iBAAhB,EAAsB;AAACC,EAAAA,UAAU,EAAC,WAAZ;AAAwBC,EAAAA,SAAS,EAAC;AAAlC,CAAtB;;AACAF,kBAAMG,SAAN,CAAgBnB,OAAhB,EAAwB;AAACiB,EAAAA,UAAU,EAAC,WAAZ;AAAwBC,EAAAA,SAAS,EAAC;AAAlC,CAAxB;;eAEelB,O",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/models/",
      "sourcesContent": [
        "import Sequelize from 'sequelize';\nimport { sequelize }  from '../database/database';\nimport Users from './Users';\n\nconst Project= sequelize.define('projects',{\n  id:{\n    type: Sequelize.INTEGER,\n    primaryKey: true\n  },\n  name: {\n    type: Sequelize.TEXT\n  },\n  priority:{\n    type: Sequelize.INTEGER\n  },\n  description:{\n    type: Sequelize.TEXT\n  },\n  deliverydate:{\n    type: Sequelize.DATE\n  }\n},{\n  timestamps:false\n});\nProject.hasMany(Users,{foreignKey:'projectid',sourceKey:'id'});\nUsers.belongsTo(Project,{foreignKey:'projectid',sourceKey:'id'});\n\nexport default Project;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/git.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/git.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/git.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/git.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "git.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _git = require(\"../controllers/git.controller\");\n\nvar router = (0, _express.Router)();\n//http://localhost:3000/repos/create\"\nrouter.post('/create', _git.create_Git_Repository);\nrouter.post('/delete', _git.delete_Git_Repository);\nrouter.post('/push', _git.pushRepo);\nrouter.post('/pull', _git.pullRepo);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdpdC5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJwb3N0IiwiY3JlYXRlX0dpdF9SZXBvc2l0b3J5IiwiZGVsZXRlX0dpdF9SZXBvc2l0b3J5IiwicHVzaFJlcG8iLCJwdWxsUmVwbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOztBQURBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUdBO0FBRUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFnQixTQUFoQixFQUE0QkMsMEJBQTVCO0FBQ0FGLE1BQU0sQ0FBQ0MsSUFBUCxDQUFlLFNBQWYsRUFBMEJFLDBCQUExQjtBQUNBSCxNQUFNLENBQUNDLElBQVAsQ0FBZSxPQUFmLEVBQXdCRyxhQUF4QjtBQUNBSixNQUFNLENBQUNDLElBQVAsQ0FBZSxPQUFmLEVBQXdCSSxhQUF4QjtlQUVlTCxNIiwic291cmNlUm9vdCI6Ii9ob21lL2VsaXNhYmV0aC9FbWVyZ2lub3YtSUkvc3JjL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5pbXBvcnQge2NyZWF0ZV9HaXRfUmVwb3NpdG9yeSxkZWxldGVfR2l0X1JlcG9zaXRvcnkscHVzaFJlcG8scHVsbFJlcG99IGZyb20gJy4uL2NvbnRyb2xsZXJzL2dpdC5jb250cm9sbGVyJztcblxuLy9odHRwOi8vbG9jYWxob3N0OjMwMDAvcmVwb3MvY3JlYXRlXCJcblxucm91dGVyLnBvc3QgICAoICcvY3JlYXRlJyAsIGNyZWF0ZV9HaXRfUmVwb3NpdG9yeSk7XG5yb3V0ZXIucG9zdCAgKCAnL2RlbGV0ZScsIGRlbGV0ZV9HaXRfUmVwb3NpdG9yeSk7XG5yb3V0ZXIucG9zdCAgKCAnL3B1c2gnLCBwdXNoUmVwbyk7XG5yb3V0ZXIucG9zdCAgKCAnL3B1bGwnLCBwdWxsUmVwbyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "git.js"
      ],
      "names": [
        "router",
        "post",
        "create_Git_Repository",
        "delete_Git_Repository",
        "pushRepo",
        "pullRepo"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAGA;AAEAA,MAAM,CAACC,IAAP,CAAgB,SAAhB,EAA4BC,0BAA5B;AACAF,MAAM,CAACC,IAAP,CAAe,SAAf,EAA0BE,0BAA1B;AACAH,MAAM,CAACC,IAAP,CAAe,OAAf,EAAwBG,aAAxB;AACAJ,MAAM,CAACC,IAAP,CAAe,OAAf,EAAwBI,aAAxB;eAEeL,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {create_Git_Repository,delete_Git_Repository,pushRepo,pullRepo} from '../controllers/git.controller';\n\n//http://localhost:3000/repos/create\"\n\nrouter.post   ( '/create' , create_Git_Repository);\nrouter.post  ( '/delete', delete_Git_Repository);\nrouter.post  ( '/push', pushRepo);\nrouter.post  ( '/pull', pullRepo);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/git.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/git.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/git.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/git.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "git.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create_Git_Repository = create_Git_Repository;\nexports.pullRepo = pullRepo;\nexports.pushRepo = pushRepo;\nexports.delete_Git_Repository = delete_Git_Repository;\n\nvar _phpController = _interopRequireDefault(require(\"./php.controller.js\"));\n\nvar _Users = _interopRequireDefault(require(\"../models/Users\"));\n\nvar _Project = _interopRequireDefault(require(\"../models/Project\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//require(\"dotenv\").config();\nvar octokit = require('@octokit/rest');\n\nvar $ = require(\"jquery\");\n\n//var Git = require(\"nodegit\");\nvar fs = require('fs-extra');\n\nvar rimraf = require(\"rimraf\");\n\nvar exist = false;\nvar badtry = false;\n\nvar simpleGit = require('simple-git')(); // Shelljs package for running shell tasks optional\n//const shellJs = require('shelljs');\n// Simple Git with Promise for handling success and failure\n\n\nvar simpleGitPromise = require('simple-git/promise')();\n\nfunction create_Git_Repository(_x, _x2) {\n  return _create_Git_Repository.apply(this, arguments);\n}\n\nfunction _create_Git_Repository() {\n  _create_Git_Repository = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, myID, name, user, i, project, clientWithAuth, idProject, id, priority, deliverydate, newProject, projID, newProjectid;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rimraf(\"fictiveProjects/projects/\", function () {\n              console.log(\"done\");\n            });\n            _req$body = req.body, myID = _req$body.myID, name = _req$body.name;\n            _context.next = 4;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: myID\n              }\n            });\n\n          case 4:\n            user = _context.sent;\n\n            if (!(user.projectid != null)) {\n              _context.next = 17;\n              break;\n            }\n\n            i = 0;\n\n          case 7:\n            if (!(i < user.projectid.length)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 10;\n            return _Project[\"default\"].findOne({\n              where: {\n                id: user.projectid[i]\n              }\n            });\n\n          case 10:\n            project = _context.sent;\n\n            if (!(project != null && name == project.name)) {\n              _context.next = 14;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              \"message\": \"this project already exist\"\n            }));\n\n          case 14:\n            i++;\n            _context.next = 7;\n            break;\n\n          case 17:\n            console.log(exist);\n\n            if (!(exist == false)) {\n              _context.next = 33;\n              break;\n            }\n\n            clientWithAuth = new octokit({\n              //auth:\"c7a365f1185f37ea43d3f58217dd6a6074889bea\"\n              auth: user.gittoken\n            });\n            clientWithAuth.repos.createForAuthenticatedUser({\n              name: name\n            }).then(function (data) {\n              fs.mkdirSync(name);\n              console.log(data.data.html_url);\n              console.log(\"repo successfully created\");\n              res.json({\n                \"message\": \"created\"\n              });\n              var localPath = name; //   var opts = {\n              //       fetchOpts: {\n              //         callbacks: {\n              //           certificateCheck: () => 0\n              //       }\n              //     }\n              //   };\n\n              simpleGitPromise.clone(data.data.html_url, localPath).then(function (addSuccess) {\n                console.log(\"clonage réussi\", addSuccess);\n              });\n              setTimeout(function () {\n                fs.mkdirSync(\"\".concat(name, \"/src\"));\n                var file = fs.open(\"\".concat(name, \"/src/index.php\"), 'w', function (err) {\n                  if (err) throw err;\n                });\n              }, 200);\n            }); // setTimeout(function(){\n            //   simpleGitPromise.cwd(name)\n            //   simpleGit.cwd(name)\n            //   simpleGitPromise.add('.')\n            //     .then(\n            //        (addSuccess) => {\n            //          console.log(\"adding files succeeded\");\n            //           console.log(addSuccess);\n            //        }, (failedAdd) => {\n            //           console.log('adding files failed');\n            //     });\n            //   // Commit files as Initial Commit\n            //   simpleGitPromise.commit(\"initial commit\")\n            //    .then(\n            //       (successCommit) => {\n            //         console.log(\"get\");\n            //         console.log(\"this is commit\",successCommit);\n            //       })\n            // },2000)\n\n            console.log(req.body);\n            idProject = Math.floor(Math.random() * Math.floor(100000));\n            console.log(idProject);\n            id = idProject;\n            priority = null;\n            deliverydate = null;\n            _context.next = 29;\n            return _Project[\"default\"].create({\n              id: id,\n              name: name,\n              priority: priority,\n              deliverydate: deliverydate\n            }, {\n              fields: ['id', 'name', 'priority', 'deliverydate']\n            });\n\n          case 29:\n            newProject = _context.sent;\n            projID = user.projectid;\n            console.log(projID);\n\n            if (user.projectid != null) {\n              projID.push(idProject);\n              console.log(projID);\n              user.update({\n                projectid: projID,\n                currentproject: {\n                  \"id\": idProject,\n                  \"name\": newProject.name\n                }\n              });\n            } else {\n              newProjectid = [idProject];\n              console.log(newProjectid);\n              user.update({\n                currentproject: {\n                  \"id\": idProject,\n                  \"name\": newProject.name\n                },\n                projectid: newProjectid\n              });\n            }\n\n          case 33:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _create_Git_Repository.apply(this, arguments);\n}\n\nfunction pullRepo(_x3, _x4) {\n  return _pullRepo.apply(this, arguments);\n}\n\nfunction _pullRepo() {\n  _pullRepo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var id, user, project;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = req.body.id;\n            _context2.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            user = _context2.sent;\n\n            if (!(user == null)) {\n              _context2.next = 8;\n              break;\n            }\n\n            res.json({\n              \"message\": \"please verify your informations\"\n            });\n            _context2.next = 18;\n            break;\n\n          case 8:\n            if (!(user.currentproject == null)) {\n              _context2.next = 12;\n              break;\n            }\n\n            res.json({\n              \"message\": \"you don't have any project\"\n            });\n            _context2.next = 18;\n            break;\n\n          case 12:\n            _context2.next = 14;\n            return _Project[\"default\"].findOne({\n              where: {\n                id: user.currentproject.id\n              }\n            });\n\n          case 14:\n            project = _context2.sent;\n            simpleGit.cwd(user.currentproject.name);\n            simpleGitPromise.cwd(user.currentproject.name);\n            simpleGitPromise.pull().then(function (addSuccess) {\n              console.log(\"adding files succeeded\");\n              console.log(addSuccess);\n\n              if (addSuccess.summary.changes == 0) {\n                res.json({\n                  \"message\": \"No pull available\"\n                });\n              } else {\n                res.json({\n                  \"message\": \"file have been pulled\"\n                });\n              }\n            }, function (failedAdd) {\n              res.json({\n                \"message\": \"error\"\n              });\n              console.log('adding files failed');\n            }); // rimraf(`fictiveProjects/${user.currentproject.name}`, function () { console.log(\"deleted\"); });\n            // rimraf(`${user.currentproject.name}`, function () { console.log(\"deleted\"); });\n            // const clientWithAuth = new octokit({\n            //  //auth:\"c7a365f1185f37ea43d3f58217dd6a6074889bea\"\n            //\n            //  auth:user.gittoken\n            //  })\n            //\n            //  var localPath = user.currentproject.name;\n            //  var opts = {\n            //      fetchOpts: {\n            //        callbacks: {\n            //          certificateCheck: () => 0\n            //      }\n            //    }\n            //  };\n            //  setTimeout(function(){\n            //    fs.mkdirSync(user.currentproject.name)\n            //    var cloneRepository = Git.Clone(`https://github.com/${user.gitUsername}/${user.currentproject.name}.git`, localPath, opts);\n            //\n            //    },200)\n            //\n            //    setTimeout(function(){\n            //      if (!fs.existsSync(`${user.currentproject.name}/src`)){\n            //         fs.mkdirSync(`${user.currentProject.name}/src`);\n            //         var file=fs.open(`${user.currentproject.name}/src/index.php`,'w', (err) => {\n            //               if (err) throw err;\n            //             });\n            //     }\n            //   },400)\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _pullRepo.apply(this, arguments);\n}\n\nfunction pushRepo(_x5, _x6) {\n  return _pushRepo.apply(this, arguments);\n}\n\nfunction _pushRepo() {\n  _pushRepo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, id, commitMessage, gitusername, password, user, clientWithAuth, project, repo, userName, gitHubUrl;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            // Simple-git without promise\n            _req$body2 = req.body, id = _req$body2.id, commitMessage = _req$body2.commitMessage, gitusername = _req$body2.gitusername, password = _req$body2.password;\n            _context3.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            user = _context3.sent;\n            console.log(\"commit message: \", commitMessage);\n\n            if (!(commitMessage != \"\")) {\n              _context3.next = 27;\n              break;\n            }\n\n            clientWithAuth = new octokit({\n              auth: user.gittoken\n            });\n\n            if (!(user.currentproject != null)) {\n              _context3.next = 24;\n              break;\n            }\n\n            _context3.next = 10;\n            return _Project[\"default\"].findOne({\n              where: {\n                id: user.currentproject.id\n              }\n            });\n\n          case 10:\n            project = _context3.sent;\n            console.log(user.currentproject.name); // change current directory to repo directory in local\n            // shellJs.cd(\"testforpush\");\n            // Repo name\n\n            simpleGit.cwd(user.currentproject.name);\n            simpleGitPromise.cwd(user.currentproject.name);\n            repo = user.currentproject.name; //Repo name\n            // User name and password of your GitHub\n\n            userName = user.gitusername; // Set up GitHub url like this so no manual entry of user pass needed\n\n            gitHubUrl = \"https://\".concat(userName, \":\").concat(password, \"@github.com/\").concat(userName, \"/\").concat(repo); // add local git config like username and email\n\n            simpleGit.addConfig('user.email', user.Email);\n            simpleGit.addConfig('user.name', userName); // Add remore repo url as origin to repo\n\n            fs.readFile(\"\".concat(repo, \"/.git/config\"), 'utf8', function (err, data) {\n              if (err) {\n                return console.log(err);\n              }\n\n              if (data.includes(\"https://github.com/\".concat(userName, \"/\").concat(repo))) {\n                var result = data.replace(\"https://github.com/\".concat(userName, \"/\").concat(repo), gitHubUrl);\n                fs.writeFile(\"\".concat(repo, \"/.git/config\"), result, 'utf8', function (err) {\n                  if (err) return console.log(err);\n                });\n              }\n            }); // simpleGitPromise.addRemote('origin',gitHubUrl);\n            // Add all files for commit\n\n            simpleGitPromise.add('.').then(function (addSuccess) {\n              console.log(\"adding files succeeded\");\n              console.log(addSuccess);\n            }, function (failedAdd) {\n              console.log('adding files failed');\n            }); // Commit files as Initial Commit\n\n            simpleGitPromise.commit(commitMessage).then(function (successCommit) {\n              console.log(\"get\");\n              console.log(\"this is commit\", successCommit);\n\n              if (successCommit.summary.changes != \"0\" || badtry == true) {\n                console.log(\"badtry= \", badtry);\n                simpleGitPromise.push('origin', 'master').then(function (success) {\n                  res.json({\n                    \"message\": \"repo successfully pushed\"\n                  });\n                  console.log('repo successfully pushed');\n                  fs.readFile(\"\".concat(repo, \"/.git/config\"), 'utf8', function (err, data) {\n                    if (err) {\n                      return console.log(err);\n                    }\n\n                    if (data.includes(\"https://\".concat(userName, \":\").concat(password, \"@github.com/\").concat(userName, \"/\").concat(repo))) {\n                      var result = data.replace(\"https://\".concat(userName, \":\").concat(password, \"@github.com/\").concat(userName, \"/\").concat(repo), \"https://github.com/\".concat(userName, \"/\").concat(repo));\n                      fs.writeFile(\"\".concat(repo, \"/.git/config\"), result, 'utf8', function (err) {\n                        if (err) return console.log(err);\n                      });\n                    }\n                  });\n                  badtry = false;\n                }, function (failed) {\n                  fs.readFile(\"\".concat(repo, \"/.git/config\"), 'utf8', function (err, data) {\n                    if (err) {\n                      return console.log(err);\n                    }\n\n                    if (data.includes(\"https://\".concat(userName, \":\").concat(password, \"@github.com/\").concat(userName, \"/\").concat(repo))) {\n                      var result = data.replace(\"https://\".concat(userName, \":\").concat(password, \"@github.com/\").concat(userName, \"/\").concat(repo), \"https://github.com/\".concat(userName, \"/\").concat(repo));\n                      fs.writeFile(\"\".concat(repo, \"/.git/config\"), result, 'utf8', function (err) {\n                        if (err) return console.log(err);\n                      });\n                    }\n                  });\n                  badtry = true;\n                  res.json({\n                    \"message\": \"mot de passe incorrect\"\n                  });\n                  console.log('repo push failed');\n                });\n              } else {\n                res.json({\n                  \"message\": \"already pushed\"\n                });\n              }\n            }, function (failed) {\n              console.log('failed commmit');\n            }); // Finally push to online repository\n\n            _context3.next = 25;\n            break;\n\n          case 24:\n            res.json({\n              \"message\": \"you don't have any project\"\n            });\n\n          case 25:\n            _context3.next = 28;\n            break;\n\n          case 27:\n            res.json({\n              \"message\": \"please put a commit message\"\n            });\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _pushRepo.apply(this, arguments);\n}\n\nfunction delete_Git_Repository(_x7, _x8) {\n  return _delete_Git_Repository.apply(this, arguments);\n}\n/*clientWithAuth.repos.delete({\n  owner: \"moncef08\",\n  repo:\"testing123\"\n}).then(data =>{\n  console.log(\"repo successfully deleted\");\n}).catch(e =>{\n  console.log(e);\n})*/\n\n\nfunction _delete_Git_Repository() {\n  _delete_Git_Repository = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, gitusername, name, token, clientWithAuth;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, gitusername = _req$body3.gitusername, name = _req$body3.name, token = _req$body3.token;\n            console.log(req.body);\n            clientWithAuth = new octokit({\n              auth: token\n            });\n            clientWithAuth.repos[\"delete\"]({\n              owner: gitusername,\n              repo: name\n            }).then(function (data) {\n              console.log(\"repo successfully deleted\");\n            })[\"catch\"](function (e) {\n              console.log(e);\n            });\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _delete_Git_Repository.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "git.controller.js"
      ],
      "names": [
        "octokit",
        "require",
        "$",
        "fs",
        "rimraf",
        "exist",
        "badtry",
        "simpleGit",
        "simpleGitPromise",
        "create_Git_Repository",
        "req",
        "res",
        "console",
        "log",
        "body",
        "myID",
        "name",
        "Users",
        "findOne",
        "where",
        "id",
        "user",
        "projectid",
        "i",
        "length",
        "Project",
        "project",
        "json",
        "clientWithAuth",
        "auth",
        "gittoken",
        "repos",
        "createForAuthenticatedUser",
        "then",
        "data",
        "mkdirSync",
        "html_url",
        "localPath",
        "clone",
        "addSuccess",
        "setTimeout",
        "file",
        "open",
        "err",
        "idProject",
        "Math",
        "floor",
        "random",
        "priority",
        "deliverydate",
        "create",
        "fields",
        "newProject",
        "projID",
        "push",
        "update",
        "currentproject",
        "newProjectid",
        "pullRepo",
        "cwd",
        "pull",
        "summary",
        "changes",
        "failedAdd",
        "pushRepo",
        "commitMessage",
        "gitusername",
        "password",
        "repo",
        "userName",
        "gitHubUrl",
        "addConfig",
        "Email",
        "readFile",
        "includes",
        "result",
        "replace",
        "writeFile",
        "add",
        "commit",
        "successCommit",
        "success",
        "failed",
        "delete_Git_Repository",
        "token",
        "owner",
        "e"
      ],
      "mappings": ";;;;;;;;;;AAGA;;AACA;;AACA;;;;;;;;AALA;AACA,IAAOA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,QAAD,CAAf;;AAIA;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAhB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AACA,IAAII,KAAK,GAAC,KAAV;AACA,IAAIC,MAAM,GAAC,KAAX;;AAEA,IAAMC,SAAS,GAAGN,OAAO,CAAC,YAAD,CAAP,EAAlB,C,CACA;AACA;AACA;;;AACA,IAAMO,gBAAgB,GAAGP,OAAO,CAAC,oBAAD,CAAP,EAAzB;;SACsBQ,qB;;;;;mFAAf,iBAAqCC,GAArC,EAAyCC,GAAzC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLP,YAAAA,MAAM,CAAC,2BAAD,EAA8B,YAAY;AAAEQ,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAsB,aAAlE,CAAN;AADK,wBAGYH,GAAG,CAACI,IAHhB,EAGAC,IAHA,aAGAA,IAHA,EAGKC,IAHL,aAGKA,IAHL;AAAA;AAAA,mBAIaC,kBAAMC,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJC,gBAAAA,EAAE,EAACL;AADC;AADwB,aAAd,CAJb;;AAAA;AAICM,YAAAA,IAJD;;AAAA,kBAUDA,IAAI,CAACC,SAAL,IAAgB,IAVf;AAAA;AAAA;AAAA;;AAWMC,YAAAA,CAXN,GAWU,CAXV;;AAAA;AAAA,kBAWaA,CAAC,GAAGF,IAAI,CAACC,SAAL,CAAeE,MAXhC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAYoBC,oBAAQP,OAAR,CAAgB;AACnCC,cAAAA,KAAK,EAAC;AACJC,gBAAAA,EAAE,EAACC,IAAI,CAACC,SAAL,CAAeC,CAAf;AADC;AAD6B,aAAhB,CAZpB;;AAAA;AAYKG,YAAAA,OAZL;;AAAA,kBAiBGA,OAAO,IAAE,IAAT,IAAiBV,IAAI,IAAEU,OAAO,CAACV,IAjBlC;AAAA;AAAA;AAAA;;AAAA,6CAkBQL,GAAG,CAACgB,IAAJ,CAAS;AACd,yBAAU;AADI,aAAT,CAlBR;;AAAA;AAWwCJ,YAAAA,CAAC,EAXzC;AAAA;AAAA;;AAAA;AAyBLX,YAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;;AAzBK,kBA0BDA,KAAK,IAAE,KA1BN;AAAA;AAAA;AAAA;;AA2BGuB,YAAAA,cA3BH,GA2BoB,IAAI5B,OAAJ,CAAY;AAClC;AAEA6B,cAAAA,IAAI,EAACR,IAAI,CAACS;AAHwB,aAAZ,CA3BpB;AAgCFF,YAAAA,cAAc,CAACG,KAAf,CAAqBC,0BAArB,CAAgD;AAChDhB,cAAAA,IAAI,EAACA;AAD2C,aAAhD,EAEGiB,IAFH,CAEQ,UAAAC,IAAI,EAAG;AACf/B,cAAAA,EAAE,CAACgC,SAAH,CAAanB,IAAb;AACAJ,cAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAI,CAACA,IAAL,CAAUE,QAAtB;AACAxB,cAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAF,cAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,2BAAY;AADL,eAAT;AAGA,kBAAIU,SAAS,GAAGrB,IAAhB,CAPe,CAQjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAR,cAAAA,gBAAgB,CAAC8B,KAAjB,CAAuBJ,IAAI,CAACA,IAAL,CAAUE,QAAjC,EAA2CC,SAA3C,EAAsDJ,IAAtD,CACE,UAACM,UAAD,EAAgB;AACX3B,gBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6B0B,UAA7B;AAEN,eAJD;AAMEC,cAAAA,UAAU,CAAC,YAAU;AACnBrC,gBAAAA,EAAE,CAACgC,SAAH,WAAgBnB,IAAhB;AACA,oBAAIyB,IAAI,GAACtC,EAAE,CAACuC,IAAH,WAAW1B,IAAX,qBAAgC,GAAhC,EAAqC,UAAC2B,GAAD,EAAS;AACjD,sBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,iBAFI,CAAT;AAIH,eANW,EAMV,GANU,CAAV;AASH,aAjCG,EAhCE,CAmEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC/B,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACI8B,YAAAA,SAxFF,GAwFaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAW,MAAX,CAA3B,CAxFb;AAyFFlC,YAAAA,OAAO,CAACC,GAAR,CAAY+B,SAAZ;AACIxB,YAAAA,EA1FF,GA0FKwB,SA1FL;AA2FEI,YAAAA,QA3FF,GA2FW,IA3FX;AA4FEC,YAAAA,YA5FF,GA4Fe,IA5Ff;AAAA;AAAA,mBA6FoBxB,oBAAQyB,MAAR,CAAe;AACnC9B,cAAAA,EAAE,EAAFA,EADmC;AAEnCJ,cAAAA,IAAI,EAAJA,IAFmC;AAGnCgC,cAAAA,QAAQ,EAARA,QAHmC;AAInCC,cAAAA,YAAY,EAAZA;AAJmC,aAAf,EAKpB;AACAE,cAAAA,MAAM,EAAC,CAAC,IAAD,EAAM,MAAN,EAAa,UAAb,EAAwB,cAAxB;AADP,aALoB,CA7FpB;;AAAA;AA6FEC,YAAAA,UA7FF;AAsGEC,YAAAA,MAtGF,GAsGShC,IAAI,CAACC,SAtGd;AAuGFV,YAAAA,OAAO,CAACC,GAAR,CAAYwC,MAAZ;;AACA,gBAAIhC,IAAI,CAACC,SAAL,IAAgB,IAApB,EAA0B;AACxB+B,cAAAA,MAAM,CAACC,IAAP,CAAYV,SAAZ;AACAhC,cAAAA,OAAO,CAACC,GAAR,CAAYwC,MAAZ;AACAhC,cAAAA,IAAI,CAACkC,MAAL,CAAY;AACVjC,gBAAAA,SAAS,EAAC+B,MADA;AAEVG,gBAAAA,cAAc,EAAC;AACb,wBAAKZ,SADQ;AAEb,0BAAOQ,UAAU,CAACpC;AAFL;AAFL,eAAZ;AAQD,aAXD,MAWM;AACAyC,cAAAA,YADA,GACa,CAACb,SAAD,CADb;AAEJhC,cAAAA,OAAO,CAACC,GAAR,CAAY4C,YAAZ;AACApC,cAAAA,IAAI,CAACkC,MAAL,CAAY;AACVC,gBAAAA,cAAc,EAAC;AACb,wBAAKZ,SADQ;AAEb,0BAAOQ,UAAU,CAACpC;AAFL,iBADL;AAKVM,gBAAAA,SAAS,EAACmC;AALA,eAAZ;AAOD;;AA7HC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuIeC,Q;;;;;sEAAf,kBAAwBhD,GAAxB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACES,YAAAA,EADF,GACMV,GAAG,CAACI,IADV,CACEM,EADF;AAAA;AAAA,mBAEaH,kBAAMC,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJC,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAFb;;AAAA;AAECC,YAAAA,IAFD;;AAAA,kBAODA,IAAI,IAAE,IAPL;AAAA;AAAA;AAAA;;AAQHV,YAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT;AARG;AAAA;;AAAA;AAAA,kBAYCN,IAAI,CAACmC,cAAL,IAAqB,IAZtB;AAAA;AAAA;AAAA;;AAaD7C,YAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT;AAbC;AAAA;;AAAA;AAAA;AAAA,mBAiBoBF,oBAAQP,OAAR,CAAgB;AACnCC,cAAAA,KAAK,EAAC;AACJC,gBAAAA,EAAE,EAACC,IAAI,CAACmC,cAAL,CAAoBpC;AADnB;AAD6B,aAAhB,CAjBpB;;AAAA;AAiBKM,YAAAA,OAjBL;AAuBDnB,YAAAA,SAAS,CAACoD,GAAV,CAActC,IAAI,CAACmC,cAAL,CAAoBxC,IAAlC;AACAR,YAAAA,gBAAgB,CAACmD,GAAjB,CAAqBtC,IAAI,CAACmC,cAAL,CAAoBxC,IAAzC;AAEDR,YAAAA,gBAAgB,CAACoD,IAAjB,GACG3B,IADH,CAEK,UAACM,UAAD,EAAgB;AACd3B,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY0B,UAAZ;;AACA,kBAAIA,UAAU,CAACsB,OAAX,CAAmBC,OAAnB,IAA4B,CAAhC,EAAmC;AACjCnD,gBAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,6BAAU;AADH,iBAAT;AAGD,eAJD,MAIM;AACJhB,gBAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,6BAAU;AADH,iBAAT;AAGD;AAEF,aAfN,EAeQ,UAACoC,SAAD,EAAe;AAChBpD,cAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,2BAAU;AADH,eAAT;AAGCf,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACL,aApBH,EA1BE,CA+CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5EC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgFemD,Q;;;;;sEAAf,kBAAwBtD,GAAxB,EAA4BC,GAA5B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACL;AADK,yBAEyCD,GAAG,CAACI,IAF7C,EAEEM,EAFF,cAEEA,EAFF,EAEK6C,aAFL,cAEKA,aAFL,EAEmBC,WAFnB,cAEmBA,WAFnB,EAE+BC,QAF/B,cAE+BA,QAF/B;AAAA;AAAA,mBAGalD,kBAAMC,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJC,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAHb;;AAAA;AAGCC,YAAAA,IAHD;AAQLT,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BoD,aAA/B;;AARK,kBAUHA,aAAa,IAAE,EAVZ;AAAA;AAAA;AAAA;;AAWCrC,YAAAA,cAXD,GAWkB,IAAI5B,OAAJ,CAAY;AACnC6B,cAAAA,IAAI,EAACR,IAAI,CAACS;AADyB,aAAZ,CAXlB;;AAAA,kBAcFT,IAAI,CAACmC,cAAL,IAAqB,IAdnB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAeiB/B,oBAAQP,OAAR,CAAgB;AACnCC,cAAAA,KAAK,EAAC;AACJC,gBAAAA,EAAE,EAACC,IAAI,CAACmC,cAAL,CAAoBpC;AADnB;AAD6B,aAAhB,CAfjB;;AAAA;AAeEM,YAAAA,OAfF;AAqBJd,YAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACmC,cAAL,CAAoBxC,IAAhC,EArBI,CAsBH;AACD;AACC;;AACAT,YAAAA,SAAS,CAACoD,GAAV,CAActC,IAAI,CAACmC,cAAL,CAAoBxC,IAAlC;AACAR,YAAAA,gBAAgB,CAACmD,GAAjB,CAAqBtC,IAAI,CAACmC,cAAL,CAAoBxC,IAAzC;AACMoD,YAAAA,IA3BH,GA2BU/C,IAAI,CAACmC,cAAL,CAAoBxC,IA3B9B,EA2BqC;AACxC;;AACMqD,YAAAA,QA7BH,GA6BchD,IAAI,CAAC6C,WA7BnB,EA+BH;;AACMI,YAAAA,SAhCH,qBAgC0BD,QAhC1B,cAgCsCF,QAhCtC,yBAgC6DE,QAhC7D,cAgCyED,IAhCzE,GAiCH;;AACA7D,YAAAA,SAAS,CAACgE,SAAV,CAAoB,YAApB,EAAiClD,IAAI,CAACmD,KAAtC;AACAjE,YAAAA,SAAS,CAACgE,SAAV,CAAoB,WAApB,EAAiCF,QAAjC,EAnCG,CAoCH;;AACAlE,YAAAA,EAAE,CAACsE,QAAH,WAAeL,IAAf,mBAAmC,MAAnC,EAA2C,UAAUzB,GAAV,EAAcT,IAAd,EAAoB;AAC9D,kBAAIS,GAAJ,EAAS;AACP,uBAAO/B,OAAO,CAACC,GAAR,CAAY8B,GAAZ,CAAP;AACD;;AACD,kBAAIT,IAAI,CAACwC,QAAL,8BAAoCL,QAApC,cAAgDD,IAAhD,EAAJ,EAA6D;AAC3D,oBAAIO,MAAM,GAAGzC,IAAI,CAAC0C,OAAL,8BAAmCP,QAAnC,cAA+CD,IAA/C,GAAuDE,SAAvD,CAAb;AACAnE,gBAAAA,EAAE,CAAC0E,SAAH,WAAgBT,IAAhB,mBAAoCO,MAApC,EAA4C,MAA5C,EAAoD,UAAUhC,GAAV,EAAe;AAC9D,sBAAIA,GAAJ,EAAS,OAAO/B,OAAO,CAACC,GAAR,CAAY8B,GAAZ,CAAP;AACX,iBAFH;AAGD;AAGF,aAZA,EArCG,CAkDJ;AACC;;AACEnC,YAAAA,gBAAgB,CAACsE,GAAjB,CAAqB,GAArB,EACG7C,IADH,CAEK,UAACM,UAAD,EAAgB;AACd3B,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACCD,cAAAA,OAAO,CAACC,GAAR,CAAY0B,UAAZ;AACF,aALN,EAKQ,UAACwB,SAAD,EAAe;AACfnD,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACL,aAPH,EApDC,CA4DH;;AACCL,YAAAA,gBAAgB,CAACuE,MAAjB,CAAwBd,aAAxB,EACGhC,IADH,CAEK,UAAC+C,aAAD,EAAmB;AACjBpE,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BmE,aAA7B;;AACA,kBAAIA,aAAa,CAACnB,OAAd,CAAsBC,OAAtB,IAA+B,GAA/B,IAAwCxD,MAAM,IAAE,IAApD,EAA0D;AACxDM,gBAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBP,MAAvB;AACAE,gBAAAA,gBAAgB,CAAC8C,IAAjB,CAAsB,QAAtB,EAA+B,QAA/B,EACIrB,IADJ,CACS,UAACgD,OAAD,EAAa;AACjBtE,kBAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,+BAAU;AADH,mBAAT;AAKCf,kBAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAV,kBAAAA,EAAE,CAACsE,QAAH,WAAeL,IAAf,mBAAmC,MAAnC,EAA2C,UAAUzB,GAAV,EAAcT,IAAd,EAAoB;AAC9D,wBAAIS,GAAJ,EAAS;AACP,6BAAO/B,OAAO,CAACC,GAAR,CAAY8B,GAAZ,CAAP;AACD;;AACD,wBAAIT,IAAI,CAACwC,QAAL,mBAAyBL,QAAzB,cAAqCF,QAArC,yBAA4DE,QAA5D,cAAwED,IAAxE,EAAJ,EAAqF;AACnF,0BAAIO,MAAM,GAAGzC,IAAI,CAAC0C,OAAL,mBAAwBP,QAAxB,cAAoCF,QAApC,yBAA2DE,QAA3D,cAAuED,IAAvE,gCAAoGC,QAApG,cAAgHD,IAAhH,EAAb;AACAjE,sBAAAA,EAAE,CAAC0E,SAAH,WAAgBT,IAAhB,mBAAoCO,MAApC,EAA4C,MAA5C,EAAoD,UAAUhC,GAAV,EAAe;AAC9D,4BAAIA,GAAJ,EAAS,OAAO/B,OAAO,CAACC,GAAR,CAAY8B,GAAZ,CAAP;AACX,uBAFH;AAGD;AAGF,mBAZA;AAaDrC,kBAAAA,MAAM,GAAC,KAAP;AACD,iBAtBJ,EAsBK,UAAC4E,MAAD,EAAW;AACX/E,kBAAAA,EAAE,CAACsE,QAAH,WAAeL,IAAf,mBAAmC,MAAnC,EAA2C,UAAUzB,GAAV,EAAcT,IAAd,EAAoB;AAC9D,wBAAIS,GAAJ,EAAS;AACP,6BAAO/B,OAAO,CAACC,GAAR,CAAY8B,GAAZ,CAAP;AACD;;AACD,wBAAIT,IAAI,CAACwC,QAAL,mBAAyBL,QAAzB,cAAqCF,QAArC,yBAA4DE,QAA5D,cAAwED,IAAxE,EAAJ,EAAqF;AACnF,0BAAIO,MAAM,GAAGzC,IAAI,CAAC0C,OAAL,mBAAwBP,QAAxB,cAAoCF,QAApC,yBAA2DE,QAA3D,cAAuED,IAAvE,gCAAoGC,QAApG,cAAgHD,IAAhH,EAAb;AACAjE,sBAAAA,EAAE,CAAC0E,SAAH,WAAgBT,IAAhB,mBAAoCO,MAApC,EAA4C,MAA5C,EAAoD,UAAUhC,GAAV,EAAe;AAC9D,4BAAIA,GAAJ,EAAS,OAAO/B,OAAO,CAACC,GAAR,CAAY8B,GAAZ,CAAP;AACX,uBAFH;AAGD;AAGF,mBAZA;AAaDrC,kBAAAA,MAAM,GAAC,IAAP;AAECK,kBAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,+BAAU;AADH,mBAAT;AAICf,kBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACL,iBA3CD;AA4CD,eA9CD,MA8CM;AACJF,gBAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,6BAAU;AADH,iBAAT;AAID;AACH,aAzDL,EAyDO,UAACuD,MAAD,EAAY;AACZtE,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACN,aA3DD,EA7DE,CA0HH;;AA1HG;AAAA;;AAAA;AA6HJF,YAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT;;AA7HI;AAAA;AAAA;;AAAA;AAmILhB,YAAAA,GAAG,CAACgB,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT;;AAnIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyIewD,qB;;;AAkBtB;;;;;;;;;;;mFAlBO,kBAAqCzE,GAArC,EAAyCC,GAAzC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAC2BD,GAAG,CAACI,IAD/B,EACEoD,WADF,cACEA,WADF,EACclD,IADd,cACcA,IADd,EACmBoE,KADnB,cACmBA,KADnB;AAELxE,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACMc,YAAAA,cAHD,GAGkB,IAAI5B,OAAJ,CAAY;AACnC6B,cAAAA,IAAI,EAACuD;AAD8B,aAAZ,CAHlB;AAMLxD,YAAAA,cAAc,CAACG,KAAf,WAA4B;AAC1BsD,cAAAA,KAAK,EAAEnB,WADmB;AAE1BE,cAAAA,IAAI,EAACpD;AAFqB,aAA5B,EAGGiB,IAHH,CAGQ,UAAAC,IAAI,EAAG;AACbtB,cAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,aALD,WAKS,UAAAyE,CAAC,EAAG;AACX1E,cAAAA,OAAO,CAACC,GAAR,CAAYyE,CAAZ;AACD,aAPD;;AANK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "//require(\"dotenv\").config();\nconst  octokit = require('@octokit/rest');\nvar $ = require(\"jquery\");\nimport copyFiles_And_CreateVirtualHost from './php.controller.js'\nimport Users from '../models/Users';\nimport Project from '../models/Project';\n//var Git = require(\"nodegit\");\nvar fs = require('fs-extra');\nvar rimraf = require(\"rimraf\");\nvar exist=false;\nvar badtry=false;\n\nconst simpleGit = require('simple-git')();\n// Shelljs package for running shell tasks optional\n//const shellJs = require('shelljs');\n// Simple Git with Promise for handling success and failure\nconst simpleGitPromise = require('simple-git/promise')();\nexport async function create_Git_Repository(req,res){\n  rimraf(\"fictiveProjects/projects/\", function () { console.log(\"done\"); });\n\n  var {myID,name}= req.body;\n  const user= await Users.findOne({\n    where:{\n      id:myID\n    }\n  });\n\n  if (user.projectid!=null) {\n    for (var i = 0; i < user.projectid.length; i++) {\n      const project= await Project.findOne({\n        where:{\n          id:user.projectid[i]\n        }\n      });\n      if (project!=null && name==project.name) {\n        return res.json({\n          \"message\":\"this project already exist\"\n        })\n         exist=true;\n      }\n    }\n  }\n  console.log(exist);\n  if (exist==false) {\n    const clientWithAuth = new octokit({\n     //auth:\"c7a365f1185f37ea43d3f58217dd6a6074889bea\"\n\n     auth:user.gittoken\n     })\n     clientWithAuth.repos.createForAuthenticatedUser({\n     name:name\n     }).then(data =>{\n     fs.mkdirSync(name)\n     console.log(data.data.html_url);\n     console.log(\"repo successfully created\");\n     res.json({\n       \"message\" : \"created\"\n     })\n     var localPath = name;\n   //   var opts = {\n   //       fetchOpts: {\n   //         callbacks: {\n   //           certificateCheck: () => 0\n   //       }\n   //     }\n   //   };\n\n   simpleGitPromise.clone(data.data.html_url, localPath).then(\n     (addSuccess) => {\n          console.log(\"clonage réussi\",addSuccess);\n\n   })\n\n     setTimeout(function(){\n       fs.mkdirSync(`${name}/src`)\n       var file=fs.open(`${name}/src/index.php`,'w', (err) => {\n             if (err) throw err;\n           });\n\n   },200)\n\n\n })\n\n    // setTimeout(function(){\n    //   simpleGitPromise.cwd(name)\n    //   simpleGit.cwd(name)\n    //   simpleGitPromise.add('.')\n    //     .then(\n    //        (addSuccess) => {\n    //          console.log(\"adding files succeeded\");\n    //           console.log(addSuccess);\n    //        }, (failedAdd) => {\n    //           console.log('adding files failed');\n    //     });\n    //   // Commit files as Initial Commit\n    //   simpleGitPromise.commit(\"initial commit\")\n    //    .then(\n    //       (successCommit) => {\n    //         console.log(\"get\");\n    //         console.log(\"this is commit\",successCommit);\n    //       })\n    // },2000)\n\n     console.log(req.body);\n     var idProject= Math.floor(Math.random() * Math.floor(100000));\n     console.log(idProject);\n     let id=idProject;\n     let priority=null;\n     let deliverydate=null;\n     let newProject= await Project.create({\n       id,\n       name,\n       priority,\n       deliverydate\n     },{\n       fields:['id','name','priority','deliverydate']\n     });\n\n     var projID=user.projectid\n     console.log(projID);\n     if (user.projectid!=null) {\n       projID.push(idProject)\n       console.log(projID);\n       user.update({\n         projectid:projID,\n         currentproject:{\n           \"id\":idProject,\n           \"name\":newProject.name\n         }\n\n       })\n     }else {\n       var newProjectid=[idProject]\n       console.log(newProjectid);\n       user.update({\n         currentproject:{\n           \"id\":idProject,\n           \"name\":newProject.name\n         },\n         projectid:newProjectid\n       })\n     }\n\n\n  }\n\n\n\n\n\n}\nexport async function pullRepo(req,res){\n  const {id}=req.body;\n  const user= await Users.findOne({\n    where:{\n      id\n    }\n  });\n  if (user==null) {\n    res.json({\n      \"message\":\"please verify your informations\"\n    })\n  }else {\n    if (user.currentproject==null) {\n      res.json({\n        \"message\":\"you don't have any project\"\n      })\n    }else {\n      const project= await Project.findOne({\n        where:{\n          id:user.currentproject.id\n\n      }\n      });\n      simpleGit.cwd(user.currentproject.name)\n      simpleGitPromise.cwd(user.currentproject.name)\n\n     simpleGitPromise.pull()\n       .then(\n          (addSuccess) => {\n            console.log(\"adding files succeeded\");\n            console.log(addSuccess);\n            if (addSuccess.summary.changes==0) {\n              res.json({\n                \"message\":\"No pull available\"\n              })\n            }else {\n              res.json({\n                \"message\":\"file have been pulled\"\n              })\n            }\n\n          }, (failedAdd) => {\n            res.json({\n              \"message\":\"error\"\n            })\n             console.log('adding files failed');\n       });\n      // rimraf(`fictiveProjects/${user.currentproject.name}`, function () { console.log(\"deleted\"); });\n      // rimraf(`${user.currentproject.name}`, function () { console.log(\"deleted\"); });\n      // const clientWithAuth = new octokit({\n      //  //auth:\"c7a365f1185f37ea43d3f58217dd6a6074889bea\"\n      //\n      //  auth:user.gittoken\n      //  })\n      //\n      //  var localPath = user.currentproject.name;\n      //  var opts = {\n      //      fetchOpts: {\n      //        callbacks: {\n      //          certificateCheck: () => 0\n      //      }\n      //    }\n      //  };\n      //  setTimeout(function(){\n      //    fs.mkdirSync(user.currentproject.name)\n      //    var cloneRepository = Git.Clone(`https://github.com/${user.gitUsername}/${user.currentproject.name}.git`, localPath, opts);\n      //\n      //    },200)\n      //\n      //    setTimeout(function(){\n      //      if (!fs.existsSync(`${user.currentproject.name}/src`)){\n      //         fs.mkdirSync(`${user.currentProject.name}/src`);\n      //         var file=fs.open(`${user.currentproject.name}/src/index.php`,'w', (err) => {\n      //               if (err) throw err;\n      //             });\n      //     }\n      //   },400)\n}\n}\n}\nexport async function pushRepo(req,res){\n  // Simple-git without promise\n  const {id,commitMessage,gitusername,password}=req.body;\n  const user= await Users.findOne({\n    where:{\n      id\n    }\n  });\n  console.log(\"commit message: \",commitMessage);\n\nif (commitMessage!=\"\") {\n  const clientWithAuth = new octokit({\n  auth:user.gittoken\n  })\n if (user.currentproject!=null) {\n   const project= await Project.findOne({\n     where:{\n       id:user.currentproject.id\n\n   }\n   });\n   console.log(user.currentproject.name);\n    // change current directory to repo directory in local\n   // shellJs.cd(\"testforpush\");\n    // Repo name\n    simpleGit.cwd(user.currentproject.name)\n    simpleGitPromise.cwd(user.currentproject.name)\n    const repo = user.currentproject.name;  //Repo name\n    // User name and password of your GitHub\n    const userName = user.gitusername;\n\n    // Set up GitHub url like this so no manual entry of user pass needed\n    const gitHubUrl = `https://${userName}:${password}@github.com/${userName}/${repo}`;\n    // add local git config like username and email\n    simpleGit.addConfig('user.email',user.Email);\n    simpleGit.addConfig('user.name', userName);\n    // Add remore repo url as origin to repo\n    fs.readFile(`${repo}/.git/config`, 'utf8', function (err,data) {\n     if (err) {\n       return console.log(err);\n     }\n     if (data.includes(`https://github.com/${userName}/${repo}`)) {\n       var result = data.replace(`https://github.com/${userName}/${repo}`, gitHubUrl);\n       fs.writeFile(`${repo}/.git/config`, result, 'utf8', function (err) {\n            if (err) return console.log(err);\n         });\n     }\n\n\n   });\n   // simpleGitPromise.addRemote('origin',gitHubUrl);\n    // Add all files for commit\n      simpleGitPromise.add('.')\n        .then(\n           (addSuccess) => {\n             console.log(\"adding files succeeded\");\n              console.log(addSuccess);\n           }, (failedAdd) => {\n              console.log('adding files failed');\n        });\n    // Commit files as Initial Commit\n     simpleGitPromise.commit(commitMessage)\n       .then(\n          (successCommit) => {\n            console.log(\"get\");\n            console.log(\"this is commit\",successCommit);\n            if (successCommit.summary.changes!=\"0\"  ||  badtry==true) {\n              console.log(\"badtry= \",badtry);\n              simpleGitPromise.push('origin','master')\n                 .then((success) => {\n                   res.json({\n                     \"message\":\"repo successfully pushed\"\n\n                   })\n\n                    console.log('repo successfully pushed');\n                    fs.readFile(`${repo}/.git/config`, 'utf8', function (err,data) {\n                     if (err) {\n                       return console.log(err);\n                     }\n                     if (data.includes(`https://${userName}:${password}@github.com/${userName}/${repo}`)) {\n                       var result = data.replace(`https://${userName}:${password}@github.com/${userName}/${repo}`,`https://github.com/${userName}/${repo}`);\n                       fs.writeFile(`${repo}/.git/config`, result, 'utf8', function (err) {\n                            if (err) return console.log(err);\n                         });\n                     }\n\n\n                   });\n                   badtry=false;\n                 },(failed)=> {\n                   fs.readFile(`${repo}/.git/config`, 'utf8', function (err,data) {\n                    if (err) {\n                      return console.log(err);\n                    }\n                    if (data.includes(`https://${userName}:${password}@github.com/${userName}/${repo}`)) {\n                      var result = data.replace(`https://${userName}:${password}@github.com/${userName}/${repo}`,`https://github.com/${userName}/${repo}`);\n                      fs.writeFile(`${repo}/.git/config`, result, 'utf8', function (err) {\n                           if (err) return console.log(err);\n                        });\n                    }\n\n\n                  });\n                  badtry=true\n\n                   res.json({\n                     \"message\":\"mot de passe incorrect\"\n\n                   })\n                    console.log('repo push failed');\n              });\n            }else {\n              res.json({\n                \"message\":\"already pushed\"\n\n              })\n            }\n         }, (failed) => {\n            console.log('failed commmit');\n     });\n\n    // Finally push to online repository\n\n }else {\n   res.json({\n     \"message\":\"you don't have any project\"\n   })\n }\n\n}else {\n  res.json({\n    \"message\":\"please put a commit message\"\n  })\n\n}\n}\nexport async function delete_Git_Repository(req,res){\n  const {gitusername,name,token}= req.body;\n  console.log(req.body);\n  const clientWithAuth = new octokit({\n  auth:token\n  })\n  clientWithAuth.repos.delete({\n    owner: gitusername,\n    repo:name\n  }).then(data =>{\n    console.log(\"repo successfully deleted\");\n  }).catch(e =>{\n    console.log(e);\n  })\n\n}\n\n\n/*clientWithAuth.repos.delete({\n  owner: \"moncef08\",\n  repo:\"testing123\"\n}).then(data =>{\n  console.log(\"repo successfully deleted\");\n}).catch(e =>{\n  console.log(e);\n})*/\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/php.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/php.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/php.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/php.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "php.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copyFiles_And_CreateVirtualHost = copyFiles_And_CreateVirtualHost;\nexports.get_And_Execute_PhpCode = get_And_Execute_PhpCode;\n\nvar _Users = _interopRequireDefault(require(\"../models/Users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar rimraf = require(\"rimraf\");\n\nvar sudo = require('sudo-js');\n\nvar fs = require('fs-extra'); //const { exec } = require('child_process');\n//sudo.setPassword('Moncef18'); à changer !!\n\n\nfunction rights(command1, command2, command3) {\n  //var command3 = ['echo', newVirtualHost, '>' , '/etc/apache2/sites-available'];\n  sudo.exec(command1, function (err, pid, result) {\n    if (err) {\n      console.log(\"problem\");\n    }\n\n    console.log(\"rights of apache changed\");\n  });\n  sudo.exec(command2, function (err, pid, result) {\n    if (err) {\n      console.log(\"problem\");\n    } //create_DirectoryOrFile({\"type\":\"folder\",\"path\":\"/var/www/html/project1.ci\"},\"res\");\n\n\n    console.log(\"rights of var changed\");\n  });\n  sudo.exec(command3, function (err, pid, result) {\n    if (err) {\n      console.log(err);\n    }\n\n    console.log(\"rights of hosts changed\");\n  });\n}\n\nfunction copyFiles_And_CreateVirtualHost(projectName, newVirtualHost) {\n  var path = projectName;\n\n  try {\n    // fs.rmdir(`/var/www/html/${projectName}.ci`, { recursive: true },(err) => {\n    //   if (err) throw err;\n    //   console.log(\"folder successfully deleted\");\n    // });\n    rimraf(\"/var/www/html/\".concat(projectName, \".ci\"), function () {\n      console.log(\"done\");\n    }); // fs.remove(`/var/www/html/${projectName}.ci`, err => {\n    //   if (err) return console.error(err)\n    //     console.log('deleted!') // I just deleted my entire HOME directory.\n    // })\n\n    setTimeout(function () {\n      var directory = fs.mkdir(\"/var/www/html/\".concat(projectName, \".ci\"), {\n        recursive: true\n      }, function (err) {\n        if (err) throw err;\n      });\n      fs.copy(path, \"/var/www/html/\".concat(projectName, \".ci\")); //fs.copy(path+\"/src/index.php\", `/var/www/html/`)\n\n      console.log('files copied!');\n    }, 100);\n  } catch (err) {\n    console.error(err);\n  }\n\n  fs.writeFile(\"/etc/apache2/sites-available/\".concat(projectName, \".conf\"), newVirtualHost, function (err) {\n    if (err) throw err;\n    console.log('newVirtualHost created!');\n  });\n  fs.appendFile('/etc/hosts', \"127.0.0.1 \".concat(projectName, \".ci\"), function (err) {\n    if (err) throw err;\n    console.log('Saved!');\n  });\n}\n\nfunction a2ensite() {\n  sudo.exec(command4, function (err, pid, result) {\n    if (err) {\n      console.log(\"problem\");\n    }\n\n    console.log(\"a2ensite\");\n  });\n}\n\nfunction reloadApache2() {\n  sudo.exec(command5, function (err, pid, result) {\n    if (err) {\n      console.log(\"problem\");\n    }\n\n    console.log(\"apache2 reloaded\");\n  });\n}\n\nfunction get_And_Execute_PhpCode(_x, _x2) {\n  return _get_And_Execute_PhpCode.apply(this, arguments);\n}\n\nfunction _get_And_Execute_PhpCode() {\n  _get_And_Execute_PhpCode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var id, user, projectName, command1, command2, command3, command4, command5, newVirtualHost;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = req.body.id;\n            _context.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            user = _context.sent;\n\n            if (user.currentproject != null) {\n              projectName = user.currentproject.name;\n              command1 = ['chmod', '777', '/etc/apache2/sites-available'];\n              command2 = ['chmod', '777', '/var/www/html'];\n              command3 = ['chmod', '777', '/etc/hosts'];\n              command4 = ['a2ensite', \"\".concat(projectName, \".conf\")];\n              command5 = ['systemctl', 'reload', 'apache2'];\n              newVirtualHost = \"\\n      <VirtualHost *:80>\\n        ServerAdmin adminr@\".concat(projectName, \".ci\\n        ServerName \").concat(projectName, \".ci\\n        ServerAlias www.\").concat(projectName, \".ci\\n        DocumentRoot \\\"/var/www/html/\").concat(projectName, \".ci\\\"\\n        <Directory \\\"/var/www/html/\").concat(projectName, \".ci\\\">\\n          Options +FollowSymLinks\\n          AllowOverride all\\n          Require all granted\\n        </Directory>\\n        ErrorLog /var/log/apache2/error.\").concat(projectName, \".com.log\\n        CustomLog /var/log/apache2/access.\").concat(projectName, \".com.log combined\\n      </VirtualHost>\\n      \");\n              res.json({\n                \"message\": user.currentproject.name\n              });\n              rights(command1, command2, command3);\n              setTimeout(copyFiles_And_CreateVirtualHost(projectName, newVirtualHost), 1500);\n              setTimeout(a2ensite, 1600);\n              setTimeout(reloadApache2, 1700);\n            } else {\n              res.json({\n                \"message\": \"select a project\"\n              });\n            } //sudo chmod 777 /etc/hosts\n            //sudo chmod 777 /etc/apache2/sites-available\n            //127.0.0.1\ttestdeprojet.ci\n            //sudo systemctl reload apache2\n            //sudo a2ensite testdeprojet.conf\n            // const {code}= req.body;\n            // console.log(code);\n            // try{\n            // var phpEngine = uniter.createEngine('PHP');\n            // phpEngine.expose();\n            // var result1= phpEngine.getStdout().on('data', function (data) {\n            //     console.log(data);\n            //   });\n            //\n            // var result=  phpEngine.execute(code).fail(function (error) {\n            //     console.log(error.toString());\n            //   });\n            //   console.log(result);\n            //   if (result1.data!=\"\") {\n            //     res.json({\n            //       \"response\":result1.data\n            //     });\n            //   }else {\n            //     res.json({\n            //       \"response\":result.valueArgs[0].message\n            //     });\n            //   }\n            //\n            // }catch(error){\n            //   console.log(error);\n            //   res.status(500).json({\n            //     message: 'something went wrong',\n            //     data:{\n            //\n            //     }\n            //   });\n            // }\n\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _get_And_Execute_PhpCode.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "php.controller.js"
      ],
      "names": [
        "rimraf",
        "require",
        "sudo",
        "fs",
        "rights",
        "command1",
        "command2",
        "command3",
        "exec",
        "err",
        "pid",
        "result",
        "console",
        "log",
        "copyFiles_And_CreateVirtualHost",
        "projectName",
        "newVirtualHost",
        "path",
        "setTimeout",
        "directory",
        "mkdir",
        "recursive",
        "copy",
        "error",
        "writeFile",
        "appendFile",
        "a2ensite",
        "command4",
        "reloadApache2",
        "command5",
        "get_And_Execute_PhpCode",
        "req",
        "res",
        "id",
        "body",
        "Users",
        "findOne",
        "where",
        "user",
        "currentproject",
        "name",
        "json"
      ],
      "mappings": ";;;;;;;;AAGE;;;;;;;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAME,EAAE,GAAGF,OAAO,CAAC,UAAD,CAAlB,C,CACA;AACA;;;AAIE,SAASG,MAAT,CAAgBC,QAAhB,EAAyBC,QAAzB,EAAkCC,QAAlC,EAA2C;AACzC;AAEAL,EAAAA,IAAI,CAACM,IAAL,CAAUH,QAAV,EAAoB,UAASI,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AAC7C,QAAIF,GAAJ,EAAS;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,GALD;AAMAX,EAAAA,IAAI,CAACM,IAAL,CAAUF,QAAV,EAAoB,UAASG,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AAC7C,QAAIF,GAAJ,EAAS;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAH4C,CAI7C;;;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,GAND;AAQFX,EAAAA,IAAI,CAACM,IAAL,CAAUD,QAAV,EAAoB,UAASE,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AAC7C,QAAIF,GAAJ,EAAS;AACRG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACC,GALH;AAMD;;AACI,SAASC,+BAAT,CAAyCC,WAAzC,EAAqDC,cAArD,EAAoE;AAEzE,MAAIC,IAAI,GAACF,WAAT;;AAEA,MAAI;AACF;AACA;AACA;AACA;AACDf,IAAAA,MAAM,yBAAkBe,WAAlB,UAAoC,YAAY;AAAEH,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAsB,KAAxE,CAAN,CALG,CAOF;AACA;AACA;AACA;;AACAK,IAAAA,UAAU,CAAC,YAAY;AACrB,UAAIC,SAAS,GAAChB,EAAE,CAACiB,KAAH,yBAA0BL,WAA1B,UAA4C;AAAEM,QAAAA,SAAS,EAAE;AAAb,OAA5C,EAAiE,UAACZ,GAAD,EAAS;AACtF,YAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,OAFa,CAAd;AAGCN,MAAAA,EAAE,CAACmB,IAAH,CAAQL,IAAR,0BAA+BF,WAA/B,UAJoB,CAKpB;;AAEDH,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAED,KATS,EASP,GATO,CAAV;AAWD,GAtBD,CAsBE,OAAOJ,GAAP,EAAY;AACZG,IAAAA,OAAO,CAACW,KAAR,CAAcd,GAAd;AACD;;AACDN,EAAAA,EAAE,CAACqB,SAAH,wCAA6CT,WAA7C,YACEC,cADF,EAEE,UAAUP,GAAV,EAAe;AACf,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTG,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,GALD;AAMAV,EAAAA,EAAE,CAACsB,UAAH,CAAc,YAAd,sBAAyCV,WAAzC,UAA2D,UAAUN,GAAV,EAAe;AACxE,QAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAHD;AAID;;AAED,SAASa,QAAT,GAAmB;AAEjBxB,EAAAA,IAAI,CAACM,IAAL,CAAUmB,QAAV,EAAoB,UAASlB,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AAC3C,QAAIF,GAAJ,EAAS;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,GALH;AAOD;;AACD,SAASe,aAAT,GAAwB;AACtB1B,EAAAA,IAAI,CAACM,IAAL,CAAUqB,QAAV,EAAoB,UAASpB,GAAT,EAAcC,GAAd,EAAmBC,MAAnB,EAA2B;AAC3C,QAAIF,GAAJ,EAAS;AACPG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GALH;AAMD;;SAEuBiB,uB;;;;;qFAAf,iBAAuCC,GAAvC,EAA4CC,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEC,YAAAA,EAFF,GAEOF,GAAG,CAACG,IAFX,CAEED,EAFF;AAAA;AAAA,mBAGaE,kBAAMC,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJJ,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAHb;;AAAA;AAGCK,YAAAA,IAHD;;AAQL,gBAAIA,IAAI,CAACC,cAAL,IAAqB,IAAzB,EAA+B;AACzBxB,cAAAA,WADyB,GACbuB,IAAI,CAACC,cAAL,CAAoBC,IADP;AAEzBnC,cAAAA,QAFyB,GAEd,CAAC,OAAD,EAAU,KAAV,EAAiB,8BAAjB,CAFc;AAGzBC,cAAAA,QAHyB,GAGd,CAAC,OAAD,EAAU,KAAV,EAAiB,eAAjB,CAHc;AAIzBC,cAAAA,QAJyB,GAId,CAAC,OAAD,EAAU,KAAV,EAAiB,YAAjB,CAJc;AAKzBoB,cAAAA,QALyB,GAKd,CAAC,UAAD,YAAgBZ,WAAhB,WALc;AAMzBc,cAAAA,QANyB,GAMd,CAAC,WAAD,EAAc,QAAd,EAAwB,SAAxB,CANc;AAOzBb,cAAAA,cAPyB,oEASND,WATM,qCAUdA,WAVc,0CAWTA,WAXS,uDAYGA,WAZH,uDAaCA,WAbD,kLAkBOA,WAlBP,iEAmBSA,WAnBT;AAsB7BiB,cAAAA,GAAG,CAACS,IAAJ,CAAS;AACP,2BAAUH,IAAI,CAACC,cAAL,CAAoBC;AADvB,eAAT;AAGApC,cAAAA,MAAM,CAACC,QAAD,EAAUC,QAAV,EAAmBC,QAAnB,CAAN;AACAW,cAAAA,UAAU,CAACJ,+BAA+B,CAACC,WAAD,EAAaC,cAAb,CAAhC,EAA8D,IAA9D,CAAV;AACAE,cAAAA,UAAU,CAACQ,QAAD,EAAW,IAAX,CAAV;AACAR,cAAAA,UAAU,CAACU,aAAD,EAAgB,IAAhB,CAAV;AAGD,aA/BD,MA+BM;AACJI,cAAAA,GAAG,CAACS,IAAJ,CAAS;AACP,2BAAU;AADH,eAAT;AAGD,aA3CI,CA6CT;AACA;AAEA;AACE;AACD;AAKG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAtFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "  /*global phpCode, resultBody, uniter */\n  //var uniter = require('uniter');\n//  var fs = require('fs');\n  import Users from '../models/Users';\n  var rimraf = require(\"rimraf\");\n\n  var sudo = require('sudo-js');\n  const fs = require('fs-extra');\n  //const { exec } = require('child_process');\n  //sudo.setPassword('Moncef18'); à changer !!\n\n\n\n    function rights(command1,command2,command3){\n      //var command3 = ['echo', newVirtualHost, '>' , '/etc/apache2/sites-available'];\n\n      sudo.exec(command1, function(err, pid, result) {\n        if (err) {\n          console.log(\"problem\");\n        }\n        console.log(\"rights of apache changed\");\n      });\n      sudo.exec(command2, function(err, pid, result) {\n        if (err) {\n          console.log(\"problem\");\n        }\n        //create_DirectoryOrFile({\"type\":\"folder\",\"path\":\"/var/www/html/project1.ci\"},\"res\");\n        console.log(\"rights of var changed\");\n      });\n\n    sudo.exec(command3, function(err, pid, result) {\n      if (err) {\n       console.log(err);\n      }\n      console.log(\"rights of hosts changed\");\n      });\n  }\nexport function copyFiles_And_CreateVirtualHost(projectName,newVirtualHost){\n\n  var path=projectName;\n\n  try {\n    // fs.rmdir(`/var/www/html/${projectName}.ci`, { recursive: true },(err) => {\n    //   if (err) throw err;\n    //   console.log(\"folder successfully deleted\");\n    // });\n   rimraf(`/var/www/html/${projectName}.ci`, function () { console.log(\"done\"); });\n\n    // fs.remove(`/var/www/html/${projectName}.ci`, err => {\n    //   if (err) return console.error(err)\n    //     console.log('deleted!') // I just deleted my entire HOME directory.\n    // })\n    setTimeout(function () {\n      var directory=fs.mkdir(`/var/www/html/${projectName}.ci`, { recursive: true }, (err) => {\n        if (err) throw err;\n      });\n       fs.copy(path, `/var/www/html/${projectName}.ci`)\n       //fs.copy(path+\"/src/index.php\", `/var/www/html/`)\n\n      console.log('files copied!')\n\n    }, 100);\n\n  } catch (err) {\n    console.error(err)\n  }\n  fs.writeFile(`/etc/apache2/sites-available/${projectName}.conf`\n  , newVirtualHost\n  , function (err) {\n    if (err) throw err;\n    console.log('newVirtualHost created!');\n  });\n  fs.appendFile('/etc/hosts', `127.0.0.1 ${projectName}.ci`, function (err) {\n    if (err) throw err;\n    console.log('Saved!');\n  });\n}\n\nfunction a2ensite(){\n\n  sudo.exec(command4, function(err, pid, result) {\n      if (err) {\n        console.log(\"problem\");\n      }\n      console.log(\"a2ensite\");\n    });\n\n}\nfunction reloadApache2(){\n  sudo.exec(command5, function(err, pid, result) {\n      if (err) {\n        console.log(\"problem\");\n      }\n      console.log(\"apache2 reloaded\");\n    });\n}\n\n  export async function get_And_Execute_PhpCode(req, res){\n\n    const {id}= req.body;\n    const user= await Users.findOne({\n      where:{\n        id\n      }\n    });\n    if (user.currentproject!=null) {\n      var projectName=user.currentproject.name\n      var command1 = ['chmod', '777', '/etc/apache2/sites-available'];\n      var command2 = ['chmod', '777', '/var/www/html'];\n      var command3 = ['chmod', '777', '/etc/hosts'];\n      var command4 = ['a2ensite', `${projectName}.conf`];\n      var command5 = ['systemctl', 'reload', 'apache2'];\n      var newVirtualHost =`\n      <VirtualHost *:80>\n        ServerAdmin adminr@${projectName}.ci\n        ServerName ${projectName}.ci\n        ServerAlias www.${projectName}.ci\n        DocumentRoot \"/var/www/html/${projectName}.ci\"\n        <Directory \"/var/www/html/${projectName}.ci\">\n          Options +FollowSymLinks\n          AllowOverride all\n          Require all granted\n        </Directory>\n        ErrorLog /var/log/apache2/error.${projectName}.com.log\n        CustomLog /var/log/apache2/access.${projectName}.com.log combined\n      </VirtualHost>\n      `\n      res.json({\n        \"message\":user.currentproject.name\n      })\n      rights(command1,command2,command3)\n      setTimeout(copyFiles_And_CreateVirtualHost(projectName,newVirtualHost), 1500);\n      setTimeout(a2ensite, 1600);\n      setTimeout(reloadApache2, 1700);\n\n\n    }else {\n      res.json({\n        \"message\":\"select a project\"\n      })\n    }\n\n//sudo chmod 777 /etc/hosts\n//sudo chmod 777 /etc/apache2/sites-available\n\n//127.0.0.1\ttestdeprojet.ci\n  //sudo systemctl reload apache2\n //sudo a2ensite testdeprojet.conf\n\n\n\n\n    // const {code}= req.body;\n    // console.log(code);\n    // try{\n    // var phpEngine = uniter.createEngine('PHP');\n    // phpEngine.expose();\n    // var result1= phpEngine.getStdout().on('data', function (data) {\n    //     console.log(data);\n    //   });\n    //\n    // var result=  phpEngine.execute(code).fail(function (error) {\n    //     console.log(error.toString());\n    //   });\n    //   console.log(result);\n    //   if (result1.data!=\"\") {\n    //     res.json({\n    //       \"response\":result1.data\n    //     });\n    //   }else {\n    //     res.json({\n    //       \"response\":result.valueArgs[0].message\n    //     });\n    //   }\n    //\n    // }catch(error){\n    //   console.log(error);\n    //   res.status(500).json({\n    //     message: 'something went wrong',\n    //     data:{\n    //\n    //     }\n    //   });\n    // }\n  }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/projects.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/projects.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/projects.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/projects.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "projects.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _project = require(\"../controllers/project.controller\");\n\nvar router = (0, _express.Router)();\n// /api/projects/\nrouter.post('/', _project.createProject);\nrouter.get('/', _project.getProjects); // /api/projects/:projectId\n\nrouter.post('/id', _project.getProjectById);\nrouter.post('/name', _project.getProjectByName);\nrouter.post('/sendReq', _project.sendReq);\nrouter.post('/verifyRequest', _project.verifyRequest);\nrouter.post('/deleteAll', _project.deleteProjectFromAllTables);\nrouter.get('/users/:UserId', _project.getProjectByUserId);\nrouter[\"delete\"]('/:id', _project.deleteProject);\nrouter.put('/:id', _project.updateProject);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJjcmVhdGVQcm9qZWN0IiwiZ2V0IiwiZ2V0UHJvamVjdHMiLCJnZXRQcm9qZWN0QnlJZCIsImdldFByb2plY3RCeU5hbWUiLCJzZW5kUmVxIiwidmVyaWZ5UmVxdWVzdCIsImRlbGV0ZVByb2plY3RGcm9tQWxsVGFibGVzIiwiZ2V0UHJvamVjdEJ5VXNlcklkIiwiZGVsZXRlUHJvamVjdCIsInB1dCIsInVwZGF0ZVByb2plY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFJQTs7QUFGQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFJQTtBQUNBQSxNQUFNLENBQUNDLElBQVAsQ0FBWSxHQUFaLEVBQWdCQyxzQkFBaEI7QUFDQUYsTUFBTSxDQUFDRyxHQUFQLENBQVcsR0FBWCxFQUFnQkMsb0JBQWhCLEUsQ0FDQTs7QUFDQUosTUFBTSxDQUFDQyxJQUFQLENBQVksS0FBWixFQUFrQkksdUJBQWxCO0FBQ0FMLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLE9BQVosRUFBb0JLLHlCQUFwQjtBQUNBTixNQUFNLENBQUNDLElBQVAsQ0FBWSxVQUFaLEVBQXVCTSxnQkFBdkI7QUFDQVAsTUFBTSxDQUFDQyxJQUFQLENBQVksZ0JBQVosRUFBNkJPLHNCQUE3QjtBQUNBUixNQUFNLENBQUNDLElBQVAsQ0FBWSxZQUFaLEVBQXlCUSxtQ0FBekI7QUFFQVQsTUFBTSxDQUFDRyxHQUFQLENBQVcsZ0JBQVgsRUFBNEJPLDJCQUE1QjtBQUNBVixNQUFNLFVBQU4sQ0FBYyxNQUFkLEVBQXFCVyxzQkFBckI7QUFDQVgsTUFBTSxDQUFDWSxHQUFQLENBQVcsTUFBWCxFQUFrQkMsc0JBQWxCO2VBQ2ViLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcblxuaW1wb3J0IHsgY3JlYXRlUHJvamVjdCwgZ2V0UHJvamVjdHMsZ2V0UHJvamVjdEJ5SWQsZGVsZXRlUHJvamVjdCx1cGRhdGVQcm9qZWN0LGdldFByb2plY3RCeVVzZXJJZCxkZWxldGVQcm9qZWN0RnJvbUFsbFRhYmxlcyxnZXRQcm9qZWN0QnlOYW1lLHZlcmlmeVJlcXVlc3Qsc2VuZFJlcX0gZnJvbSAnLi4vY29udHJvbGxlcnMvcHJvamVjdC5jb250cm9sbGVyJztcblxuLy8gL2FwaS9wcm9qZWN0cy9cbnJvdXRlci5wb3N0KCcvJyxjcmVhdGVQcm9qZWN0KTtcbnJvdXRlci5nZXQoJy8nLCBnZXRQcm9qZWN0cyk7XG4vLyAvYXBpL3Byb2plY3RzLzpwcm9qZWN0SWRcbnJvdXRlci5wb3N0KCcvaWQnLGdldFByb2plY3RCeUlkKTtcbnJvdXRlci5wb3N0KCcvbmFtZScsZ2V0UHJvamVjdEJ5TmFtZSk7XG5yb3V0ZXIucG9zdCgnL3NlbmRSZXEnLHNlbmRSZXEpO1xucm91dGVyLnBvc3QoJy92ZXJpZnlSZXF1ZXN0Jyx2ZXJpZnlSZXF1ZXN0KTtcbnJvdXRlci5wb3N0KCcvZGVsZXRlQWxsJyxkZWxldGVQcm9qZWN0RnJvbUFsbFRhYmxlcyk7XG5cbnJvdXRlci5nZXQoJy91c2Vycy86VXNlcklkJyxnZXRQcm9qZWN0QnlVc2VySWQpO1xucm91dGVyLmRlbGV0ZSgnLzppZCcsZGVsZXRlUHJvamVjdCk7XG5yb3V0ZXIucHV0KCcvOmlkJyx1cGRhdGVQcm9qZWN0KTtcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "projects.js"
      ],
      "names": [
        "router",
        "post",
        "createProject",
        "get",
        "getProjects",
        "getProjectById",
        "getProjectByName",
        "sendReq",
        "verifyRequest",
        "deleteProjectFromAllTables",
        "getProjectByUserId",
        "deleteProject",
        "put",
        "updateProject"
      ],
      "mappings": ";;;;;;;AAAA;;AAIA;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIA;AACAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAgBC,sBAAhB;AACAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBC,oBAAhB,E,CACA;;AACAJ,MAAM,CAACC,IAAP,CAAY,KAAZ,EAAkBI,uBAAlB;AACAL,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoBK,yBAApB;AACAN,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAuBM,gBAAvB;AACAP,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6BO,sBAA7B;AACAR,MAAM,CAACC,IAAP,CAAY,YAAZ,EAAyBQ,mCAAzB;AAEAT,MAAM,CAACG,GAAP,CAAW,gBAAX,EAA4BO,2BAA5B;AACAV,MAAM,UAAN,CAAc,MAAd,EAAqBW,sBAArB;AACAX,MAAM,CAACY,GAAP,CAAW,MAAX,EAAkBC,sBAAlB;eACeb,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\n\nimport { createProject, getProjects,getProjectById,deleteProject,updateProject,getProjectByUserId,deleteProjectFromAllTables,getProjectByName,verifyRequest,sendReq} from '../controllers/project.controller';\n\n// /api/projects/\nrouter.post('/',createProject);\nrouter.get('/', getProjects);\n// /api/projects/:projectId\nrouter.post('/id',getProjectById);\nrouter.post('/name',getProjectByName);\nrouter.post('/sendReq',sendReq);\nrouter.post('/verifyRequest',verifyRequest);\nrouter.post('/deleteAll',deleteProjectFromAllTables);\n\nrouter.get('/users/:UserId',getProjectByUserId);\nrouter.delete('/:id',deleteProject);\nrouter.put('/:id',updateProject);\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/project.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/project.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/project.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/project.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "project.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createProject = createProject;\nexports.getProjects = getProjects;\nexports.getProjectByName = getProjectByName;\nexports.verifyRequest = verifyRequest;\nexports.sendReq = sendReq;\nexports.getProjectById = getProjectById;\nexports.getProjectByUserId = getProjectByUserId;\nexports.deleteProjectFromAllTables = deleteProjectFromAllTables;\nexports.deleteProject = deleteProject;\nexports.updateProject = updateProject;\n\nvar _Project = _interopRequireDefault(require(\"../models/Project\"));\n\nvar _Users = _interopRequireDefault(require(\"../models/Users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar _require = require(\"sequelize\"),\n    Op = _require.Op;\n\nvar newRequests = [];\n\nvar fs = require('fs');\n\nvar rimraf = require(\"rimraf\");\n\nfunction createProject(_x, _x2) {\n  return _createProject.apply(this, arguments);\n}\n\nfunction _createProject() {\n  _createProject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, name, priority, description, deliverydate, newProject;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, name = _req$body.name, priority = _req$body.priority, description = _req$body.description, deliverydate = _req$body.deliverydate;\n            _context.prev = 1;\n            _context.next = 4;\n            return _Project[\"default\"].create({\n              name: name,\n              priority: priority,\n              description: description,\n              deliverydate: deliverydate\n            }, {\n              fields: ['name', 'priority', 'description', 'deliverydate']\n            });\n\n          case 4:\n            newProject = _context.sent;\n\n            if (!newProject) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", res.json({\n              message: 'Project created successfully',\n              data: newProject\n            }));\n\n          case 7:\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            res.status(500).json({\n              message: 'something went wrong',\n              data: {}\n            });\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n  return _createProject.apply(this, arguments);\n}\n\nfunction getProjects(_x3, _x4) {\n  return _getProjects.apply(this, arguments);\n}\n\nfunction _getProjects() {\n  _getProjects = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var projects;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _Project[\"default\"].findAll();\n\n          case 3:\n            projects = _context2.sent;\n            res.json({\n              data: projects\n            });\n            _context2.next = 10;\n            break;\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getProjects.apply(this, arguments);\n}\n\nfunction getProjectByName(_x5, _x6) {\n  return _getProjectByName.apply(this, arguments);\n}\n\nfunction _getProjectByName() {\n  _getProjectByName = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var name, project;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            name = req.body.name;\n            console.log(name);\n            _context3.next = 4;\n            return _Project[\"default\"].findOne({\n              where: {\n                name: name\n              }\n            });\n\n          case 4:\n            project = _context3.sent;\n\n            if (!(project != null)) {\n              _context3.next = 9;\n              break;\n            }\n\n            res.json(project);\n            _context3.next = 10;\n            break;\n\n          case 9:\n            return _context3.abrupt(\"return\", res.json({\n              message: ' this project does not exist '\n            }));\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getProjectByName.apply(this, arguments);\n}\n\nfunction verifyRequest(_x7, _x8) {\n  return _verifyRequest.apply(this, arguments);\n}\n\nfunction _verifyRequest() {\n  _verifyRequest = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body2, projectName, myID, profileID, id, test, status, user, i;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body2 = req.body, projectName = _req$body2.projectName, myID = _req$body2.myID, profileID = _req$body2.profileID;\n            id = BigInt(profileID);\n            test = false;\n            status = \"\";\n            _context4.next = 6;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 6:\n            user = _context4.sent;\n\n            if (!(user.requests != null)) {\n              _context4.next = 18;\n              break;\n            }\n\n            i = 0;\n            console.log(user.requests);\n\n            for (i = 0; i < user.requests.length; i++) {\n              if (user.requests[i].senderID == myID && user.requests[i].projectName == projectName) {\n                test = true;\n                status = user.requests[i].status;\n              }\n            }\n\n            if (!(test == false)) {\n              _context4.next = 15;\n              break;\n            }\n\n            return _context4.abrupt(\"return\", res.json({\n              \"verification\": \"no\"\n            }));\n\n          case 15:\n            return _context4.abrupt(\"return\", res.json({\n              \"verification\": \"yes\",\n              \"status\": status\n            }));\n\n          case 16:\n            _context4.next = 19;\n            break;\n\n          case 18:\n            return _context4.abrupt(\"return\", res.json({\n              \"verification\": \"no\"\n            }));\n\n          case 19:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _verifyRequest.apply(this, arguments);\n}\n\nfunction sendReq(_x9, _x10) {\n  return _sendReq.apply(this, arguments);\n}\n\nfunction _sendReq() {\n  _sendReq = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var _req$body3, projectName, myID, profileID, id, user, alreadysent, i;\n\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            console.log(req.body);\n            _req$body3 = req.body, projectName = _req$body3.projectName, myID = _req$body3.myID, profileID = _req$body3.profileID;\n            id = BigInt(profileID);\n            console.log(id);\n            _context5.next = 6;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 6:\n            user = _context5.sent;\n\n            if (!(user != null)) {\n              _context5.next = 14;\n              break;\n            }\n\n            console.log(user.requests);\n            newRequests = user.requests;\n            alreadysent = false;\n\n            if (newRequests != null) {\n              for (i = 0; i < newRequests.length; i++) {\n                if (newRequests[i].senderID == myID && projectName == newRequests[i].projectName) {\n                  console.log(\"true\");\n                  alreadysent = true;\n                }\n              }\n\n              if (alreadysent == false) {\n                newRequests.push({\n                  \"projectName\": projectName,\n                  \"senderID\": myID,\n                  \"status\": \"waitForResponse\"\n                });\n                user.update({\n                  requests: newRequests\n                });\n              }\n            } else {\n              console.log(\"firsttime\");\n              user.update({\n                requests: [{\n                  \"projectName\": projectName,\n                  \"senderID\": myID,\n                  \"status\": \"waitForResponse\"\n                }]\n              });\n            }\n\n            _context5.next = 15;\n            break;\n\n          case 14:\n            return _context5.abrupt(\"return\", res.json({\n              message: ' this user does not exist '\n            }));\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _sendReq.apply(this, arguments);\n}\n\nfunction getProjectById(_x11, _x12) {\n  return _getProjectById.apply(this, arguments);\n}\n\nfunction _getProjectById() {\n  _getProjectById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var id, project;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            id = req.body.id;\n            console.log(req.body);\n            _context6.next = 4;\n            return _Project[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 4:\n            project = _context6.sent;\n\n            if (!(project != null)) {\n              _context6.next = 10;\n              break;\n            }\n\n            console.log(project.name);\n            res.json(project);\n            _context6.next = 11;\n            break;\n\n          case 10:\n            return _context6.abrupt(\"return\", res.json({\n              message: ' this project does not exist '\n            }));\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getProjectById.apply(this, arguments);\n}\n\nfunction getProjectByUserId(_x13, _x14) {\n  return _getProjectByUserId.apply(this, arguments);\n}\n\nfunction _getProjectByUserId() {\n  _getProjectByUserId = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var UserId, user, projects;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            UserId = req.params.UserId;\n            _context7.next = 3;\n            return _Users[\"default\"].findOne({\n              attributes: ['id', 'name', 'profession', 'projectId'],\n              where: {\n                id: UserId\n              }\n            });\n\n          case 3:\n            user = _context7.sent;\n\n            if (!(user == null)) {\n              _context7.next = 8;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", res.json({\n              message: 'User does not exist'\n            }));\n\n          case 8:\n            _context7.next = 10;\n            return _Project[\"default\"].findAll({\n              attributes: ['name', 'description'],\n              where: {\n                id: user.projectId\n              }\n            });\n\n          case 10:\n            projects = _context7.sent;\n\n            if (!(projects.length > 0)) {\n              _context7.next = 15;\n              break;\n            }\n\n            return _context7.abrupt(\"return\", res.json(projects));\n\n          case 15:\n            return _context7.abrupt(\"return\", res.json({\n              message: ' that user is not working on any project '\n            }));\n\n          case 16:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getProjectByUserId.apply(this, arguments);\n}\n\nfunction deleteProjectFromAllTables(_x15, _x16) {\n  return _deleteProjectFromAllTables.apply(this, arguments);\n}\n\nfunction _deleteProjectFromAllTables() {\n  _deleteProjectFromAllTables = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var _req$body4, idofProject, idOfUser, proj, user, deleteRowCount, projects, newProjectid, i;\n\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _req$body4 = req.body, idofProject = _req$body4.idofProject, idOfUser = _req$body4.idOfUser;\n            console.log(req.body);\n            _context8.next = 4;\n            return _Project[\"default\"].findOne({\n              where: {\n                id: idofProject\n              }\n            });\n\n          case 4:\n            proj = _context8.sent;\n            rimraf(\"\".concat(proj.name), function () {\n              console.log(\"done\");\n            });\n            rimraf(\"fictiveProjects/\".concat(proj.name), function () {\n              console.log(\"done\");\n            });\n            _context8.next = 9;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: idOfUser\n              }\n            });\n\n          case 9:\n            user = _context8.sent;\n\n            if (user.currentproject.name == proj.name) {\n              user.update({\n                currentproject: null\n              });\n            }\n\n            _context8.next = 13;\n            return _Project[\"default\"].destroy({\n              where: {\n                id: idofProject\n              }\n            });\n\n          case 13:\n            deleteRowCount = _context8.sent;\n            projects = user.projectid;\n            newProjectid = [];\n\n            for (i = 0; i < projects.length; i++) {\n              if (idofProject != projects[i]) {\n                newProjectid.push(projects[i]);\n              }\n            }\n\n            if (newProjectid.length == 0) {\n              newProjectid = null;\n            }\n\n            console.log(newProjectid);\n            user.update({\n              projectid: newProjectid\n            });\n            res.json({\n              message: 'Project deleted successfully'\n            });\n\n          case 21:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _deleteProjectFromAllTables.apply(this, arguments);\n}\n\nfunction deleteProject(_x17, _x18) {\n  return _deleteProject.apply(this, arguments);\n}\n\nfunction _deleteProject() {\n  _deleteProject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var id, deleteRowCount;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            id = req.params.id;\n            _context9.next = 3;\n            return _Project[\"default\"].destroy({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            deleteRowCount = _context9.sent;\n            res.json({\n              message: 'Project deleted successfully',\n              count: deleteRowCount\n            });\n\n          case 5:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _deleteProject.apply(this, arguments);\n}\n\nfunction updateProject(_x19, _x20) {\n  return _updateProject.apply(this, arguments);\n}\n\nfunction _updateProject() {\n  _updateProject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var id, _req$body5, name, priority, description, deliverydate, projects;\n\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            id = req.params.id;\n            _req$body5 = req.body, name = _req$body5.name, priority = _req$body5.priority, description = _req$body5.description, deliverydate = _req$body5.deliverydate;\n            _context11.next = 4;\n            return _Project[\"default\"].findAll({\n              attributes: ['id', 'name', 'priority', 'description', 'deliverydate'],\n              where: {\n                id: id\n              }\n            });\n\n          case 4:\n            projects = _context11.sent;\n\n            if (projects.length > 0) {\n              projects.forEach( /*#__PURE__*/function () {\n                var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(project) {\n                  return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return project.update({\n                            name: name,\n                            priority: priority,\n                            description: description,\n                            deliverydate: deliverydate\n                          });\n\n                        case 2:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                }));\n\n                return function (_x21) {\n                  return _ref.apply(this, arguments);\n                };\n              }());\n            }\n\n            return _context11.abrupt(\"return\", res.json({\n              message: 'Project Updated successfully',\n              data: projects\n            }));\n\n          case 7:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _updateProject.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "project.controller.js"
      ],
      "names": [
        "require",
        "Op",
        "newRequests",
        "fs",
        "rimraf",
        "createProject",
        "req",
        "res",
        "body",
        "name",
        "priority",
        "description",
        "deliverydate",
        "Project",
        "create",
        "fields",
        "newProject",
        "json",
        "message",
        "data",
        "console",
        "log",
        "status",
        "getProjects",
        "findAll",
        "projects",
        "getProjectByName",
        "findOne",
        "where",
        "project",
        "verifyRequest",
        "projectName",
        "myID",
        "profileID",
        "id",
        "BigInt",
        "test",
        "Users",
        "user",
        "requests",
        "i",
        "length",
        "senderID",
        "sendReq",
        "alreadysent",
        "push",
        "update",
        "getProjectById",
        "getProjectByUserId",
        "UserId",
        "params",
        "attributes",
        "projectId",
        "deleteProjectFromAllTables",
        "idofProject",
        "idOfUser",
        "proj",
        "currentproject",
        "destroy",
        "deleteRowCount",
        "projectid",
        "newProjectid",
        "deleteProject",
        "count",
        "updateProject",
        "forEach"
      ],
      "mappings": ";;;;;;;;;;;;;;;;AACA;;AACA;;;;;;;;eACeA,OAAO,CAAC,WAAD,C;IAAdC,E,YAAAA,E;;AACR,IAAIC,WAAW,GAAC,EAAhB;;AACA,IAAIC,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAII,MAAM,GAAGJ,OAAO,CAAC,QAAD,CAApB;;SAEsBK,a;;;;;2EAAf,iBAA6BC,GAA7B,EAAkCC,GAAlC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBAC4CD,GAAG,CAACE,IADhD,EACGC,IADH,aACGA,IADH,EACQC,QADR,aACQA,QADR,EACiBC,WADjB,aACiBA,WADjB,EAC6BC,YAD7B,aAC6BA,YAD7B;AAAA;AAAA;AAAA,mBAGmBC,oBAAQC,MAAR,CAAe;AACnCL,cAAAA,IAAI,EAAJA,IADmC;AAEnCC,cAAAA,QAAQ,EAARA,QAFmC;AAGnCC,cAAAA,WAAW,EAAXA,WAHmC;AAInCC,cAAAA,YAAY,EAAZA;AAJmC,aAAf,EAKpB;AACAG,cAAAA,MAAM,EAAC,CAAC,MAAD,EAAQ,UAAR,EAAmB,aAAnB,EAAiC,cAAjC;AADP,aALoB,CAHnB;;AAAA;AAGCC,YAAAA,UAHD;;AAAA,iBAWAA,UAXA;AAAA;AAAA;AAAA;;AAAA,6CAYMT,GAAG,CAACU,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC,8BADM;AAEdC,cAAAA,IAAI,EAACH;AAFS,aAAT,CAZN;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBHI,YAAAA,OAAO,CAACC,GAAR;AACAd,YAAAA,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBL,IAAhB,CAAqB;AACnBC,cAAAA,OAAO,EAAE,sBADU;AAEnBC,cAAAA,IAAI,EAAC;AAFc,aAArB;;AAnBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA8BeI,W;;;;;yEAAf,kBAA2BjB,GAA3B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBM,oBAAQW,OAAR,EAFjB;;AAAA;AAECC,YAAAA,QAFD;AAGLlB,YAAAA,GAAG,CAACU,IAAJ,CAAS;AACPE,cAAAA,IAAI,EAACM;AADE,aAAT;AAHK;AAAA;;AAAA;AAAA;AAAA;AAOLL,YAAAA,OAAO,CAACC,GAAR;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAUeK,gB;;;;;8EAAf,kBAAgCpB,GAAhC,EAAoCC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AACGE,YAAAA,IADH,GACUH,GAAG,CAACE,IADd,CACGC,IADH;AAEPW,YAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AAFO;AAAA,mBAGgBI,oBAAQc,OAAR,CAAgB;AACnCC,cAAAA,KAAK,EAAC;AACJnB,gBAAAA,IAAI,EAAJA;AADI;AAD6B,aAAhB,CAHhB;;AAAA;AAGCoB,YAAAA,OAHD;;AAAA,kBAQDA,OAAO,IAAE,IARR;AAAA;AAAA;AAAA;;AASDtB,YAAAA,GAAG,CAACU,IAAJ,CAASY,OAAT;AATC;AAAA;;AAAA;AAAA,8CAWItB,GAAG,CAACU,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CAXJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkBeY,a;;;;;2EAAf,kBAA6BxB,GAA7B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAC8BD,GAAG,CAACE,IADlC,EACCuB,WADD,cACCA,WADD,EACaC,IADb,cACaA,IADb,EACkBC,SADlB,cACkBA,SADlB;AAEDC,YAAAA,EAFC,GAEEC,MAAM,CAACF,SAAD,CAFR;AAGDG,YAAAA,IAHC,GAGI,KAHJ;AAIDd,YAAAA,MAJC,GAIM,EAJN;AAAA;AAAA,mBAKae,kBAAMV,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CALb;;AAAA;AAKCI,YAAAA,IALD;;AAAA,kBAUDA,IAAI,CAACC,QAAL,IAAe,IAVd;AAAA;AAAA;AAAA;;AAWCC,YAAAA,CAXD,GAWG,CAXH;AAYHpB,YAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAI,CAACC,QAAjB;;AACA,iBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACC,QAAL,CAAcE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,kBAAIF,IAAI,CAACC,QAAL,CAAcC,CAAd,EAAiBE,QAAjB,IAA2BV,IAA3B,IAAmCM,IAAI,CAACC,QAAL,CAAcC,CAAd,EAAiBT,WAAjB,IAA8BA,WAArE,EAAkF;AAChFK,gBAAAA,IAAI,GAAC,IAAL;AACAd,gBAAAA,MAAM,GAACgB,IAAI,CAACC,QAAL,CAAcC,CAAd,EAAiBlB,MAAxB;AACD;AACF;;AAlBE,kBAmBCc,IAAI,IAAE,KAnBP;AAAA;AAAA;AAAA;;AAAA,8CAoBM7B,GAAG,CAACU,IAAJ,CAAS;AACd,8BAAe;AADD,aAAT,CApBN;;AAAA;AAAA,8CAwBMV,GAAG,CAACU,IAAJ,CAAS;AACd,8BAAe,KADD;AAEd,wBAASK;AAFK,aAAT,CAxBN;;AAAA;AAAA;AAAA;;AAAA;AAAA,8CAgCEf,GAAG,CAACU,IAAJ,CAAS;AACd,8BAAe;AADD,aAAT,CAhCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAsCe0B,O;;;;;qEAAf,kBAAuBrC,GAAvB,EAA2BC,GAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLa,YAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACE,IAAhB;AADK,yBAE8BF,GAAG,CAACE,IAFlC,EAECuB,WAFD,cAECA,WAFD,EAEaC,IAFb,cAEaA,IAFb,EAEkBC,SAFlB,cAEkBA,SAFlB;AAGDC,YAAAA,EAHC,GAGEC,MAAM,CAACF,SAAD,CAHR;AAILb,YAAAA,OAAO,CAACC,GAAR,CAAYa,EAAZ;AAJK;AAAA,mBAKaG,kBAAMV,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CALb;;AAAA;AAKCI,YAAAA,IALD;;AAAA,kBAUDA,IAAI,IAAE,IAVL;AAAA;AAAA;AAAA;;AAWHlB,YAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAI,CAACC,QAAjB;AAEArC,YAAAA,WAAW,GAACoC,IAAI,CAACC,QAAjB;AACIK,YAAAA,WAdD,GAca,KAdb;;AAeH,gBAAI1C,WAAW,IAAE,IAAjB,EAAuB;AACrB,mBAASsC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGtC,WAAW,CAACuC,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAE3C,oBAAItC,WAAW,CAACsC,CAAD,CAAX,CAAeE,QAAf,IAAyBV,IAAzB,IAAiCD,WAAW,IAAE7B,WAAW,CAACsC,CAAD,CAAX,CAAeT,WAAjE,EAA8E;AAC5EX,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACCuB,kBAAAA,WAAW,GAAE,IAAb;AACF;AACF;;AACD,kBAAIA,WAAW,IAAE,KAAjB,EAAwB;AAGtB1C,gBAAAA,WAAW,CAAC2C,IAAZ,CACE;AACE,iCAAcd,WADhB;AAEE,8BAAWC,IAFb;AAGE,4BAAU;AAHZ,iBADF;AAQAM,gBAAAA,IAAI,CAACQ,MAAL,CAAY;AAERP,kBAAAA,QAAQ,EAAErC;AAFF,iBAAZ;AAKD;AAGF,aA3BD,MA2BM;AACJkB,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAiB,cAAAA,IAAI,CAACQ,MAAL,CAAY;AAERP,gBAAAA,QAAQ,EAAI,CAAC;AACT,iCAAcR,WADL;AAET,8BAAWC,IAFF;AAGT,4BAAU;AAHD,iBAAD;AAFJ,eAAZ;AAWD;;AAvDE;AAAA;;AAAA;AAAA,8CA+DIzB,GAAG,CAACU,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CA/DJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuEe6B,c;;;;;4EAAf,kBAA8BzC,GAA9B,EAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACG2B,YAAAA,EADH,GACQ5B,GAAG,CAACE,IADZ,CACG0B,EADH;AAELd,YAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACE,IAAhB;AAFK;AAAA,mBAGgBK,oBAAQc,OAAR,CAAgB;AACnCC,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAAFA;AADI;AAD6B,aAAhB,CAHhB;;AAAA;AAGCL,YAAAA,OAHD;;AAAA,kBASDA,OAAO,IAAE,IATR;AAAA;AAAA;AAAA;;AAUDT,YAAAA,OAAO,CAACC,GAAR,CAAYQ,OAAO,CAACpB,IAApB;AACAF,YAAAA,GAAG,CAACU,IAAJ,CAASY,OAAT;AAXC;AAAA;;AAAA;AAAA,8CAaItB,GAAG,CAACU,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CAbJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAqBe8B,kB;;;;;gFAAf,kBAAkC1C,GAAlC,EAAsCC,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACG0C,YAAAA,MADH,GACc3C,GAAG,CAAC4C,MADlB,CACGD,MADH;AAAA;AAAA,mBAEaZ,kBAAMV,OAAN,CAAc;AAC9BwB,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,MAAP,EAAe,YAAf,EAA6B,WAA7B,CADkB;AAE9BvB,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAACe;AADC;AAFwB,aAAd,CAFb;;AAAA;AAECX,YAAAA,IAFD;;AAAA,kBAQDA,IAAI,IAAE,IARL;AAAA;AAAA;AAAA;;AAAA,8CASI/B,GAAG,CAACU,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CATJ;;AAAA;AAAA;AAAA,mBAcoBL,oBAAQW,OAAR,CAAgB;AACrC2B,cAAAA,UAAU,EAAE,CAAC,MAAD,EAAS,aAAT,CADyB;AAErCvB,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAACI,IAAI,CAACc;AADJ;AAF+B,aAAhB,CAdpB;;AAAA;AAcG3B,YAAAA,QAdH;;AAAA,kBAoBCA,QAAQ,CAACgB,MAAT,GAAgB,CApBjB;AAAA;AAAA;AAAA;;AAAA,8CAqBMlC,GAAG,CAACU,IAAJ,CAASQ,QAAT,CArBN;;AAAA;AAAA,8CAuBMlB,GAAG,CAACU,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC;AADM,aAAT,CAvBN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA6BemC,0B;;;;;wFAAf,kBAA0C/C,GAA1C,EAA8CC,GAA9C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBAC0BD,GAAG,CAACE,IAD9B,EACC8C,WADD,cACCA,WADD,EACcC,QADd,cACcA,QADd;AAELnC,YAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACE,IAAhB;AAFK;AAAA,mBAGcK,oBAAQc,OAAR,CAAgB;AACjCC,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAACoB;AADC;AAD2B,aAAhB,CAHd;;AAAA;AAGCE,YAAAA,IAHD;AASLpD,YAAAA,MAAM,WAAIoD,IAAI,CAAC/C,IAAT,GAAiB,YAAY;AAAEW,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAsB,aAArD,CAAN;AACAjB,YAAAA,MAAM,2BAAoBoD,IAAI,CAAC/C,IAAzB,GAAiC,YAAY;AAAEW,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAsB,aAArE,CAAN;AAVK;AAAA,mBAYagB,kBAAMV,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAACqB;AADC;AADwB,aAAd,CAZb;;AAAA;AAYCjB,YAAAA,IAZD;;AAiBL,gBAAIA,IAAI,CAACmB,cAAL,CAAoBhD,IAApB,IAA0B+C,IAAI,CAAC/C,IAAnC,EAAyC;AACvC6B,cAAAA,IAAI,CAACQ,MAAL,CAAY;AACVW,gBAAAA,cAAc,EAAC;AADL,eAAZ;AAGD;;AArBI;AAAA,mBAsBwB5C,oBAAQ6C,OAAR,CAAgB;AAC3C9B,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAACoB;AADC;AADqC,aAAhB,CAtBxB;;AAAA;AAsBCK,YAAAA,cAtBD;AA2BDlC,YAAAA,QA3BC,GA2BQa,IAAI,CAACsB,SA3Bb;AA4BDC,YAAAA,YA5BC,GA4BY,EA5BZ;;AA+BL,iBAASrB,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGf,QAAQ,CAACgB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,kBAAIc,WAAW,IAAE7B,QAAQ,CAACe,CAAD,CAAzB,EAA8B;AAC5BqB,gBAAAA,YAAY,CAAChB,IAAb,CAAkBpB,QAAQ,CAACe,CAAD,CAA1B;AACD;AACD;;AACD,gBAAIqB,YAAY,CAACpB,MAAb,IAAqB,CAAzB,EAA4B;AAC1BoB,cAAAA,YAAY,GAAC,IAAb;AACD;;AACDzC,YAAAA,OAAO,CAACC,GAAR,CAAYwC,YAAZ;AACAvB,YAAAA,IAAI,CAACQ,MAAL,CAAY;AACVc,cAAAA,SAAS,EAACC;AADA,aAAZ;AAGAtD,YAAAA,GAAG,CAACU,IAAJ,CAAS;AACPC,cAAAA,OAAO,EAAC;AADD,aAAT;;AA3CK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA+Ce4C,a;;;;;2EAAf,kBAA6BxD,GAA7B,EAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACG2B,YAAAA,EADH,GACQ5B,GAAG,CAAC4C,MADZ,CACGhB,EADH;AAAA;AAAA,mBAEwBrB,oBAAQ6C,OAAR,CAAgB;AAC3C9B,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAAFA;AADI;AADqC,aAAhB,CAFxB;;AAAA;AAECyB,YAAAA,cAFD;AAOLpD,YAAAA,GAAG,CAACU,IAAJ,CAAS;AACPC,cAAAA,OAAO,EAAC,8BADD;AAEP6C,cAAAA,KAAK,EAAEJ;AAFA,aAAT;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAceK,a;;;;;2EAAf,mBAA6B1D,GAA7B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACG2B,YAAAA,EADH,GACU5B,GAAG,CAAC4C,MADd,CACGhB,EADH;AAAA,yBAEgD5B,GAAG,CAACE,IAFpD,EAEEC,IAFF,cAEEA,IAFF,EAEQC,QAFR,cAEQA,QAFR,EAEkBC,WAFlB,cAEkBA,WAFlB,EAEgCC,YAFhC,cAEgCA,YAFhC;AAAA;AAAA,mBAIkBC,oBAAQW,OAAR,CAAgB;AACrC2B,cAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,MAAP,EAAe,UAAf,EAA2B,aAA3B,EAA0C,cAA1C,CADyB;AAErCvB,cAAAA,KAAK,EAAC;AACJM,gBAAAA,EAAE,EAAFA;AADI;AAF+B,aAAhB,CAJlB;;AAAA;AAICT,YAAAA,QAJD;;AAUL,gBAAIA,QAAQ,CAACgB,MAAT,GAAgB,CAApB,EAAuB;AACrBhB,cAAAA,QAAQ,CAACwC,OAAT;AAAA,mFAAiB,mBAAMpC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACTA,OAAO,CAACiB,MAAR,CAAe;AACnBrC,4BAAAA,IAAI,EAAJA,IADmB;AAEnBC,4BAAAA,QAAQ,EAARA,QAFmB;AAGnBC,4BAAAA,WAAW,EAAXA,WAHmB;AAInBC,4BAAAA,YAAY,EAAZA;AAJmB,2BAAf,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB;;AAAA;AAAA;AAAA;AAAA;AASD;;AApBI,+CAqBEL,GAAG,CAACU,IAAJ,CAAS;AACdC,cAAAA,OAAO,EAAC,8BADM;AAEdC,cAAAA,IAAI,EAACM;AAFS,aAAT,CArBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "\nimport Project from '../models/Project';\nimport Users from '../models/Users';\nconst { Op } = require(\"sequelize\");\nvar newRequests=[]\nvar fs = require('fs');\nvar rimraf = require(\"rimraf\");\n\nexport async function createProject(req, res){\n  const { name,priority,description,deliverydate}= req.body;\n  try{\n    let newProject= await Project.create({\n      name,\n      priority,\n      description,\n      deliverydate\n    },{\n      fields:['name','priority','description','deliverydate']\n    });\n    if(newProject){\n      return res.json({\n        message:'Project created successfully',\n        data:newProject\n      });\n    }\n  }catch(error){\n    console.log(error);\n    res.status(500).json({\n      message: 'something went wrong',\n      data:{}\n    });\n  }\n\n\n\n  //console.log(req,body);\n}\n\nexport async function getProjects(req,res){\n try{\n  const projects= await Project.findAll();\n  res.json({\n    data:projects\n  });\n }catch(e){\n  console.log(e)\n }\n}\nexport async function getProjectByName(req,res){\n  const { name }=req.body;\nconsole.log(name);\n  const project= await Project.findOne({\n    where:{\n      name\n    }\n  });\n  if (project!=null) {\n      res.json(project);\n  }else {\n    return res.json({\n      message:' this project does not exist '\n    });\n  }\n\n\n}\nexport async function verifyRequest(req,res){\n  var { projectName,myID,profileID }=req.body;\n  var id=BigInt(profileID)\n  var test=false\n  var status=\"\"\n  const user= await Users.findOne({\n    where:{\n      id\n    }\n  });\n  if (user.requests!=null) {\n    var i=0;\n    console.log(user.requests);\n    for (var i = 0; i < user.requests.length; i++) {\n      if (user.requests[i].senderID==myID && user.requests[i].projectName==projectName) {\n        test=true\n        status=user.requests[i].status\n      }\n    }\n    if (test==false) {\n      return res.json({\n        \"verification\":\"no\",\n      });\n    }else {\n      return res.json({\n        \"verification\":\"yes\",\n        \"status\":status\n      });\n    }\n\n\n}else {\n  return res.json({\n    \"verification\":\"no\",\n  });\n}\n}\n\nexport async function sendReq(req,res){\n  console.log(req.body);\n  var { projectName,myID,profileID }=req.body;\n  var id=BigInt(profileID)\n  console.log(id);\n  const user= await Users.findOne({\n    where:{\n      id\n    }\n  });\n  if (user!=null) {\n    console.log(user.requests);\n\n    newRequests=user.requests\n    let alreadysent=false\n    if (newRequests!=null) {\n      for (var i = 0; i < newRequests.length; i++) {\n\n        if (newRequests[i].senderID==myID && projectName==newRequests[i].projectName) {\n          console.log(\"true\");\n           alreadysent =true\n        }\n      }\n      if (alreadysent==false) {\n\n\n        newRequests.push(\n          {\n            \"projectName\":projectName,\n            \"senderID\":myID,\n            \"status\": \"waitForResponse\"\n\n          }\n        )\n        user.update({\n\n            requests: newRequests\n\n        })\n      }\n\n\n    }else {\n      console.log(\"firsttime\");\n      user.update({\n\n          requests:   [{\n              \"projectName\":projectName,\n              \"senderID\":myID,\n              \"status\": \"waitForResponse\"\n\n            }]\n\n      })\n\n    }\n\n\n\n\n\n  }else {\n\n    return res.json({\n      message:' this user does not exist '\n    });\n  }\n\n\n}\n\nexport async function getProjectById(req,res){\n  const { id }=req.body;\n  console.log(req.body);\n  const project= await Project.findOne({\n    where:{\n      id\n\n  }\n  });\n  if (project!=null) {\n      console.log(project.name);\n      res.json(project);\n  }else {\n    return res.json({\n      message:' this project does not exist '\n    });\n  }\n\n\n}\n\nexport async function getProjectByUserId(req,res){\n  const { UserId } = req.params;\n  const user= await Users.findOne({\n    attributes: ['id', 'name', 'profession', 'projectId'],\n    where:{\n      id:UserId\n    }\n  });\n  if (user==null) {\n    return res.json({\n      message:'User does not exist'\n    });\n  }\n  else{\n    const projects = await Project.findAll({\n      attributes: ['name', 'description'],\n      where:{\n        id:user.projectId\n      }\n    });\n    if (projects.length>0) {\n      return res.json(projects);\n    }else {\n      return res.json({\n        message:' that user is not working on any project '\n      });\n    }\n  }\n}\nexport async function deleteProjectFromAllTables(req,res){\n  var { idofProject, idOfUser} = req.body\n  console.log(req.body);\n  const proj = await Project.findOne({\n    where:{\n      id:idofProject\n    }\n  });\n\n  rimraf(`${proj.name}`, function () { console.log(\"done\"); });\n  rimraf(`fictiveProjects/${proj.name}`, function () { console.log(\"done\"); });\n\n  const user= await Users.findOne({\n    where:{\n      id:idOfUser\n    }\n  });\n  if (user.currentproject.name==proj.name) {\n    user.update({\n      currentproject:null\n    })\n  }\n  const deleteRowCount = await Project.destroy({\n    where:{\n      id:idofProject\n    }\n  });\n  let projects=user.projectid;\n  let newProjectid=[]\n\n\n  for (var i = 0; i < projects.length; i++) {\n   if (idofProject!=projects[i]) {\n     newProjectid.push(projects[i])\n   }\n  }\n  if (newProjectid.length==0) {\n    newProjectid=null\n  }\n  console.log(newProjectid);\n  user.update({\n    projectid:newProjectid\n  })\n  res.json({\n    message:'Project deleted successfully',\n  });\n}\nexport async function deleteProject(req,res){\n  const { id }=req.params;\n  const deleteRowCount = await Project.destroy({\n    where:{\n      id\n    }\n  });\n  res.json({\n    message:'Project deleted successfully',\n    count: deleteRowCount\n  });\n\n}\n\nexport async function updateProject(req,res){\n  const { id } = req.params;\n  const{ name, priority, description , deliverydate} = req.body;\n\n  const projects = await Project.findAll({\n    attributes: ['id', 'name', 'priority', 'description', 'deliverydate'],\n    where:{\n      id\n    }\n  });\n  if (projects.length>0) {\n    projects.forEach(async project => {\n      await project.update({\n        name,\n        priority,\n        description,\n        deliverydate\n      });\n    })\n\n  }\n  return res.json({\n    message:'Project Updated successfully',\n    data:projects\n  })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/users.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/users.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/users.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _user = require(\"../controllers/user.controller\");\n\nvar router = (0, _express.Router)();\n// /api/users/\nrouter.post('/', _user.createUser);\nrouter.get('/', _user.getUsers); // /api/users/:userID\n\nrouter.post('/changeCurrent', _user.changeCurrent);\nrouter.post('/id', _user.getUserById);\nrouter.post('/session', _user.getSession);\nrouter.post('/logout', _user.logout);\nrouter.post('/login', _user.searchUserByLogin);\nrouter.post('/search', _user.getUserByLoginAndPassword);\nrouter.post('/follow', _user.newFollower);\nrouter.post('/checkFollower', _user.checkFollower);\nrouter.post('/verifyCommit', _user.verifyCommit);\nrouter.post('/unfollow', _user.unFollow);\nrouter.post('/picture', _user.updatePicture);\nrouter.post('/name', _user.getUserByName);\nrouter.post('/acceptRequest', _user.acceptRequest);\nrouter.get('/projects/:projectId', _user.getUsersByProject);\nrouter[\"delete\"]('/:id', _user.deleteUser);\nrouter.put('/:id', _user.updateUser);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXJzLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJjcmVhdGVVc2VyIiwiZ2V0IiwiZ2V0VXNlcnMiLCJjaGFuZ2VDdXJyZW50IiwiZ2V0VXNlckJ5SWQiLCJnZXRTZXNzaW9uIiwibG9nb3V0Iiwic2VhcmNoVXNlckJ5TG9naW4iLCJnZXRVc2VyQnlMb2dpbkFuZFBhc3N3b3JkIiwibmV3Rm9sbG93ZXIiLCJjaGVja0ZvbGxvd2VyIiwidmVyaWZ5Q29tbWl0IiwidW5Gb2xsb3ciLCJ1cGRhdGVQaWN0dXJlIiwiZ2V0VXNlckJ5TmFtZSIsImFjY2VwdFJlcXVlc3QiLCJnZXRVc2Vyc0J5UHJvamVjdCIsImRlbGV0ZVVzZXIiLCJwdXQiLCJ1cGRhdGVVc2VyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBSUE7O0FBRkEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUE7QUFDQUEsTUFBTSxDQUFDQyxJQUFQLENBQVksR0FBWixFQUFnQkMsZ0JBQWhCO0FBQ0FGLE1BQU0sQ0FBQ0csR0FBUCxDQUFXLEdBQVgsRUFBZ0JDLGNBQWhCLEUsQ0FDQTs7QUFDQUosTUFBTSxDQUFDQyxJQUFQLENBQVksZ0JBQVosRUFBNkJJLG1CQUE3QjtBQUNBTCxNQUFNLENBQUNDLElBQVAsQ0FBWSxLQUFaLEVBQWtCSyxpQkFBbEI7QUFDQU4sTUFBTSxDQUFDQyxJQUFQLENBQVksVUFBWixFQUF1Qk0sZ0JBQXZCO0FBQ0FQLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLFNBQVosRUFBc0JPLFlBQXRCO0FBQ0FSLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLFFBQVosRUFBcUJRLHVCQUFyQjtBQUNBVCxNQUFNLENBQUNDLElBQVAsQ0FBWSxTQUFaLEVBQXNCUywrQkFBdEI7QUFDQVYsTUFBTSxDQUFDQyxJQUFQLENBQVksU0FBWixFQUFzQlUsaUJBQXRCO0FBQ0FYLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLGdCQUFaLEVBQTZCVyxtQkFBN0I7QUFDQVosTUFBTSxDQUFDQyxJQUFQLENBQVksZUFBWixFQUE0Qlksa0JBQTVCO0FBRUFiLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLFdBQVosRUFBd0JhLGNBQXhCO0FBQ0FkLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLFVBQVosRUFBdUJjLG1CQUF2QjtBQUNBZixNQUFNLENBQUNDLElBQVAsQ0FBWSxPQUFaLEVBQW9CZSxtQkFBcEI7QUFDQWhCLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLGdCQUFaLEVBQTZCZ0IsbUJBQTdCO0FBRUFqQixNQUFNLENBQUNHLEdBQVAsQ0FBVyxzQkFBWCxFQUFrQ2UsdUJBQWxDO0FBQ0FsQixNQUFNLFVBQU4sQ0FBYyxNQUFkLEVBQXFCbUIsZ0JBQXJCO0FBQ0FuQixNQUFNLENBQUNvQixHQUFQLENBQVcsTUFBWCxFQUFrQkMsZ0JBQWxCO2VBRWVyQixNIiwic291cmNlUm9vdCI6Ii9ob21lL2VsaXNhYmV0aC9FbWVyZ2lub3YtSUkvc3JjL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5cbmltcG9ydCB7IGNyZWF0ZVVzZXIsZ2V0VXNlcnMsZ2V0VXNlckJ5SWQsZGVsZXRlVXNlcix1cGRhdGVVc2VyLGdldFVzZXJzQnlQcm9qZWN0LGNoZWNrRm9sbG93ZXIsc2VhcmNoVXNlckJ5TG9naW4sYWNjZXB0UmVxdWVzdCxnZXRVc2VyQnlOYW1lLHZlcmlmeUNvbW1pdCxuZXdGb2xsb3dlcix1bkZvbGxvdyx1cGRhdGVQaWN0dXJlLGdldFVzZXJCeUxvZ2luQW5kUGFzc3dvcmQsZ2V0U2Vzc2lvbixsb2dvdXQsY2hhbmdlQ3VycmVudH0gZnJvbSAnLi4vY29udHJvbGxlcnMvdXNlci5jb250cm9sbGVyJztcblxuLy8gL2FwaS91c2Vycy9cbnJvdXRlci5wb3N0KCcvJyxjcmVhdGVVc2VyKTtcbnJvdXRlci5nZXQoJy8nLCBnZXRVc2Vycyk7XG4vLyAvYXBpL3VzZXJzLzp1c2VySURcbnJvdXRlci5wb3N0KCcvY2hhbmdlQ3VycmVudCcsY2hhbmdlQ3VycmVudCk7XG5yb3V0ZXIucG9zdCgnL2lkJyxnZXRVc2VyQnlJZCk7XG5yb3V0ZXIucG9zdCgnL3Nlc3Npb24nLGdldFNlc3Npb24pO1xucm91dGVyLnBvc3QoJy9sb2dvdXQnLGxvZ291dCk7XG5yb3V0ZXIucG9zdCgnL2xvZ2luJyxzZWFyY2hVc2VyQnlMb2dpbik7XG5yb3V0ZXIucG9zdCgnL3NlYXJjaCcsZ2V0VXNlckJ5TG9naW5BbmRQYXNzd29yZCk7XG5yb3V0ZXIucG9zdCgnL2ZvbGxvdycsbmV3Rm9sbG93ZXIpO1xucm91dGVyLnBvc3QoJy9jaGVja0ZvbGxvd2VyJyxjaGVja0ZvbGxvd2VyKTtcbnJvdXRlci5wb3N0KCcvdmVyaWZ5Q29tbWl0Jyx2ZXJpZnlDb21taXQpO1xuXG5yb3V0ZXIucG9zdCgnL3VuZm9sbG93Jyx1bkZvbGxvdyk7XG5yb3V0ZXIucG9zdCgnL3BpY3R1cmUnLHVwZGF0ZVBpY3R1cmUpO1xucm91dGVyLnBvc3QoJy9uYW1lJyxnZXRVc2VyQnlOYW1lKTtcbnJvdXRlci5wb3N0KCcvYWNjZXB0UmVxdWVzdCcsYWNjZXB0UmVxdWVzdCk7XG5cbnJvdXRlci5nZXQoJy9wcm9qZWN0cy86cHJvamVjdElkJyxnZXRVc2Vyc0J5UHJvamVjdCk7XG5yb3V0ZXIuZGVsZXRlKCcvOmlkJyxkZWxldGVVc2VyKTtcbnJvdXRlci5wdXQoJy86aWQnLHVwZGF0ZVVzZXIpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "router",
        "post",
        "createUser",
        "get",
        "getUsers",
        "changeCurrent",
        "getUserById",
        "getSession",
        "logout",
        "searchUserByLogin",
        "getUserByLoginAndPassword",
        "newFollower",
        "checkFollower",
        "verifyCommit",
        "unFollow",
        "updatePicture",
        "getUserByName",
        "acceptRequest",
        "getUsersByProject",
        "deleteUser",
        "put",
        "updateUser"
      ],
      "mappings": ";;;;;;;AAAA;;AAIA;;AAFA,IAAMA,MAAM,GAAG,sBAAf;AAIA;AACAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAgBC,gBAAhB;AACAF,MAAM,CAACG,GAAP,CAAW,GAAX,EAAgBC,cAAhB,E,CACA;;AACAJ,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6BI,mBAA7B;AACAL,MAAM,CAACC,IAAP,CAAY,KAAZ,EAAkBK,iBAAlB;AACAN,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAuBM,gBAAvB;AACAP,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAsBO,YAAtB;AACAR,MAAM,CAACC,IAAP,CAAY,QAAZ,EAAqBQ,uBAArB;AACAT,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAsBS,+BAAtB;AACAV,MAAM,CAACC,IAAP,CAAY,SAAZ,EAAsBU,iBAAtB;AACAX,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6BW,mBAA7B;AACAZ,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4BY,kBAA5B;AAEAb,MAAM,CAACC,IAAP,CAAY,WAAZ,EAAwBa,cAAxB;AACAd,MAAM,CAACC,IAAP,CAAY,UAAZ,EAAuBc,mBAAvB;AACAf,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAoBe,mBAApB;AACAhB,MAAM,CAACC,IAAP,CAAY,gBAAZ,EAA6BgB,mBAA7B;AAEAjB,MAAM,CAACG,GAAP,CAAW,sBAAX,EAAkCe,uBAAlC;AACAlB,MAAM,UAAN,CAAc,MAAd,EAAqBmB,gBAArB;AACAnB,MAAM,CAACoB,GAAP,CAAW,MAAX,EAAkBC,gBAAlB;eAEerB,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\n\nimport { createUser,getUsers,getUserById,deleteUser,updateUser,getUsersByProject,checkFollower,searchUserByLogin,acceptRequest,getUserByName,verifyCommit,newFollower,unFollow,updatePicture,getUserByLoginAndPassword,getSession,logout,changeCurrent} from '../controllers/user.controller';\n\n// /api/users/\nrouter.post('/',createUser);\nrouter.get('/', getUsers);\n// /api/users/:userID\nrouter.post('/changeCurrent',changeCurrent);\nrouter.post('/id',getUserById);\nrouter.post('/session',getSession);\nrouter.post('/logout',logout);\nrouter.post('/login',searchUserByLogin);\nrouter.post('/search',getUserByLoginAndPassword);\nrouter.post('/follow',newFollower);\nrouter.post('/checkFollower',checkFollower);\nrouter.post('/verifyCommit',verifyCommit);\n\nrouter.post('/unfollow',unFollow);\nrouter.post('/picture',updatePicture);\nrouter.post('/name',getUserByName);\nrouter.post('/acceptRequest',acceptRequest);\n\nrouter.get('/projects/:projectId',getUsersByProject);\nrouter.delete('/:id',deleteUser);\nrouter.put('/:id',updateUser);\n\nexport default router\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/home.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/home.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/home.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/home.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "home.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _file = require(\"../controllers/file.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/editor', _file.getFile);\nrouter.post('/project', _file.create_DirectoryOrFile);\nrouter.put('/project', _file.update_DirectoryOrFile);\nrouter[\"delete\"]('/project', _file.delete_DirectoryOrFile);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuanMiXSwibmFtZXMiOlsicm91dGVyIiwicG9zdCIsImdldEZpbGUiLCJjcmVhdGVfRGlyZWN0b3J5T3JGaWxlIiwicHV0IiwidXBkYXRlX0RpcmVjdG9yeU9yRmlsZSIsImRlbGV0ZV9EaXJlY3RvcnlPckZpbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7QUFEQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFJQUEsTUFBTSxDQUFDQyxJQUFQLENBQWdCLFNBQWhCLEVBQTRCQyxhQUE1QjtBQUNBRixNQUFNLENBQUNDLElBQVAsQ0FBZ0IsVUFBaEIsRUFBNEJFLDRCQUE1QjtBQUNBSCxNQUFNLENBQUNJLEdBQVAsQ0FBZSxVQUFmLEVBQTJCQyw0QkFBM0I7QUFDQUwsTUFBTSxVQUFOLENBQWUsVUFBZixFQUEyQk0sNEJBQTNCO2VBRWVOLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbmltcG9ydCB7Z2V0RmlsZSxjcmVhdGVfRGlyZWN0b3J5T3JGaWxlLHVwZGF0ZV9EaXJlY3RvcnlPckZpbGUsZGVsZXRlX0RpcmVjdG9yeU9yRmlsZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvZmlsZS5jb250cm9sbGVyJztcblxuXG5yb3V0ZXIucG9zdCAgICggJy9lZGl0b3InICwgZ2V0RmlsZSk7XG5yb3V0ZXIucG9zdCAgICggJy9wcm9qZWN0JywgY3JlYXRlX0RpcmVjdG9yeU9yRmlsZSk7XG5yb3V0ZXIucHV0ICAgKCAnL3Byb2plY3QnLCB1cGRhdGVfRGlyZWN0b3J5T3JGaWxlKTtcbnJvdXRlci5kZWxldGUoICcvcHJvamVjdCcsIGRlbGV0ZV9EaXJlY3RvcnlPckZpbGUpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "home.js"
      ],
      "names": [
        "router",
        "post",
        "getFile",
        "create_DirectoryOrFile",
        "put",
        "update_DirectoryOrFile",
        "delete_DirectoryOrFile"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAgB,SAAhB,EAA4BC,aAA5B;AACAF,MAAM,CAACC,IAAP,CAAgB,UAAhB,EAA4BE,4BAA5B;AACAH,MAAM,CAACI,GAAP,CAAe,UAAf,EAA2BC,4BAA3B;AACAL,MAAM,UAAN,CAAe,UAAf,EAA2BM,4BAA3B;eAEeN,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {getFile,create_DirectoryOrFile,update_DirectoryOrFile,delete_DirectoryOrFile} from '../controllers/file.controller';\n\n\nrouter.post   ( '/editor' , getFile);\nrouter.post   ( '/project', create_DirectoryOrFile);\nrouter.put   ( '/project', update_DirectoryOrFile);\nrouter.delete( '/project', delete_DirectoryOrFile);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/file.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/file.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/file.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/file.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "file.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFile = getFile;\nexports.create_DirectoryOrFile = create_DirectoryOrFile;\nexports.update_DirectoryOrFile = update_DirectoryOrFile;\nexports.delete_DirectoryOrFile = delete_DirectoryOrFile;\n\nvar _Users = _interopRequireDefault(require(\"../models/Users\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar dirTree = require(\"directory-tree\");\n\nvar fs = require('fs');\n\nvar fs1 = require('fs-extra');\n\nvar rimraf = require(\"rimraf\");\n\nvar simpleGitPromise = require('simple-git')();\n\nfunction getFile(_x, _x2) {\n  return _getFile.apply(this, arguments);\n}\n\nfunction _getFile() {\n  _getFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var id, user, url, tree;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = req.body.id;\n            _context.next = 3;\n            return _Users[\"default\"].findOne({\n              where: {\n                id: id\n              }\n            });\n\n          case 3:\n            user = _context.sent;\n\n            if (user.currentproject != null) {\n              //      if (!fs.existsSync(`${user.currentproject.name}/src`)){\n              if (fs.existsSync(user.currentproject.name)) {\n                console.log(user.currentproject.name);\n                fs1.copy(user.currentproject.name, \"fictiveProjects/\".concat(user.currentproject.name, \"/\"));\n              } else {\n                fs.mkdirSync(user.currentproject.name);\n                url = \"https://github.com/\".concat(user.gitusername, \"/\").concat(user.currentproject.name, \".git\");\n                simpleGitPromise.clone(url, user.currentproject.name).then(function (addSuccess) {\n                  console.log(\"clonage réussi\", addSuccess);\n\n                  if (!fs.existsSync(\"\".concat(user.currentproject.name, \"/src\"))) {\n                    setTimeout(function () {\n                      fs.mkdirSync(\"\".concat(user.currentproject.name, \"/src\"));\n                      var file = fs.open(\"\".concat(user.currentproject.name, \"/src/index.php\"), 'w', function (err) {\n                        if (err) throw err;\n                      });\n                    }, 200);\n                  }\n                });\n                fs1.copy(user.currentproject.name, \"fictiveProjects/\".concat(user.currentproject.name, \"/\"));\n              }\n\n              tree = dirTree(user.currentproject.name);\n              tree = JSON.parse(JSON.stringify(tree).replace(/\"name\":/g, \"\\\"text\\\":\"));\n\n              try {\n                res.json(tree);\n              } catch (e) {\n                console.log(e);\n              }\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getFile.apply(this, arguments);\n}\n\nfunction create_DirectoryOrFile(_x3, _x4) {\n  return _create_DirectoryOrFile.apply(this, arguments);\n}\n\nfunction _create_DirectoryOrFile() {\n  _create_DirectoryOrFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body, path, type, directory, fictiveDirectory, file, fictiveFile;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body = req.body, path = _req$body.path, type = _req$body.type;\n\n            if (type == \"folder\") {\n              directory = fs.mkdir(\"fictiveProjects/\" + path, {\n                recursive: true\n              }, function (err) {\n                if (err) throw err;\n              });\n              fictiveDirectory = fs.mkdir(path, {\n                recursive: true\n              }, function (err) {\n                if (err) throw err;\n              });\n            } else {\n              file = fs.open(path, 'w', function (err) {\n                if (err) throw err;\n              });\n              fictiveFile = fs.open(\"fictiveProjects/\" + path, 'w', function (err) {\n                if (err) throw err;\n              });\n            } //var data=fs.readFileSync('./public/home.html','utf-8');\n\n\n            res.json({\n              message: 'done'\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _create_DirectoryOrFile.apply(this, arguments);\n}\n\nfunction update_DirectoryOrFile(_x5, _x6) {\n  return _update_DirectoryOrFile.apply(this, arguments);\n}\n\nfunction _update_DirectoryOrFile() {\n  _update_DirectoryOrFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var _req$body2, old_path, new_path, directoryOrFile, fictiveDirectoryOrFile;\n\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _req$body2 = req.body, old_path = _req$body2.old_path, new_path = _req$body2.new_path;\n            console.log(\"renaming\");\n            directoryOrFile = fs.rename(old_path, new_path, function (err) {\n              if (err) throw err;\n              console.log('Rename complete!');\n            });\n            fictiveDirectoryOrFile = fs.rename(\"fictiveProjects/\" + old_path, \"fictiveProjects/\" + new_path, function (err) {\n              if (err) throw err;\n              console.log('Rename complete!');\n            }); //var data=fs.readFileSync('./public/home.html','utf-8');\n\n            res.json({\n              message: 'done'\n            });\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _update_DirectoryOrFile.apply(this, arguments);\n}\n\nfunction delete_DirectoryOrFile(_x7, _x8) {\n  return _delete_DirectoryOrFile.apply(this, arguments);\n}\n\nfunction _delete_DirectoryOrFile() {\n  _delete_DirectoryOrFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var _req$body3, type, path;\n\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _req$body3 = req.body, type = _req$body3.type, path = _req$body3.path;\n\n            if (type == \"folder\") {\n              console.log(path);\n              rimraf(path, function () {\n                console.log(\"delete done\");\n              }); // fs.rmdir(path, { recursive: true },(err) => {\n              //   if (err) throw err;\n              //   console.log(\"folder successfully deleted\");\n              // });\n\n              rimraf(\"fictiveProjects/\" + path, function () {\n                console.log(\"delete done\");\n              }); // fs.rmdir(\"fictiveProjects/\"+path, { recursive: true },(err) => {\n              //   if (err) throw err;\n              //   console.log(\"folder successfully deleted\");\n              // });\n            } else {\n              fs.unlink(path, function (err) {\n                if (err) throw err;\n                console.log(\"file successfully deleted\");\n              });\n              fs.unlink(\"fictiveProjects/\" + path, function (err) {\n                if (err) throw err;\n                console.log(\"file successfully deleted\");\n              });\n            } //var data=fs.readFileSync('./public/home.html','utf-8');\n\n\n            res.json({\n              message: 'done'\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _delete_DirectoryOrFile.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "file.controller.js"
      ],
      "names": [
        "dirTree",
        "require",
        "fs",
        "fs1",
        "rimraf",
        "simpleGitPromise",
        "getFile",
        "req",
        "res",
        "id",
        "body",
        "Users",
        "findOne",
        "where",
        "user",
        "currentproject",
        "existsSync",
        "name",
        "console",
        "log",
        "copy",
        "mkdirSync",
        "url",
        "gitusername",
        "clone",
        "then",
        "addSuccess",
        "setTimeout",
        "file",
        "open",
        "err",
        "tree",
        "JSON",
        "parse",
        "stringify",
        "replace",
        "json",
        "e",
        "create_DirectoryOrFile",
        "path",
        "type",
        "directory",
        "mkdir",
        "recursive",
        "fictiveDirectory",
        "fictiveFile",
        "message",
        "update_DirectoryOrFile",
        "old_path",
        "new_path",
        "directoryOrFile",
        "rename",
        "fictiveDirectoryOrFile",
        "delete_DirectoryOrFile",
        "unlink"
      ],
      "mappings": ";;;;;;;;;;AAKA;;;;;;;;AALA,IAAMA,OAAO,GAAGC,OAAO,CAAC,gBAAD,CAAvB;;AACA,IAAIC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,UAAD,CAAjB;;AACA,IAAIG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAApB;;AAGA,IAAMI,gBAAgB,GAAGJ,OAAO,CAAC,YAAD,CAAP,EAAzB;;SAGsBK,O;;;;;qEAAf,iBAAuBC,GAAvB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEC,YAAAA,EAFF,GAEMF,GAAG,CAACG,IAFV,CAEED,EAFF;AAAA;AAAA,mBAIaE,kBAAMC,OAAN,CAAc;AAC9BC,cAAAA,KAAK,EAAC;AACJJ,gBAAAA,EAAE,EAAFA;AADI;AADwB,aAAd,CAJb;;AAAA;AAICK,YAAAA,IAJD;;AASL,gBAAIA,IAAI,CAACC,cAAL,IAAqB,IAAzB,EAA+B;AAC7B;AAEA,kBAAIb,EAAE,CAACc,UAAH,CAAcF,IAAI,CAACC,cAAL,CAAoBE,IAAlC,CAAJ,EAA4C;AAC1CC,gBAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACC,cAAL,CAAoBE,IAAhC;AACId,gBAAAA,GAAG,CAACiB,IAAJ,CAASN,IAAI,CAACC,cAAL,CAAoBE,IAA7B,4BAAqDH,IAAI,CAACC,cAAL,CAAoBE,IAAzE;AACL,eAHD,MAGK;AACHf,gBAAAA,EAAE,CAACmB,SAAH,CAAaP,IAAI,CAACC,cAAL,CAAoBE,IAAjC;AACIK,gBAAAA,GAFD,gCAE2BR,IAAI,CAACS,WAFhC,cAE+CT,IAAI,CAACC,cAAL,CAAoBE,IAFnE;AAGHZ,gBAAAA,gBAAgB,CAACmB,KAAjB,CAAuBF,GAAvB,EAA4BR,IAAI,CAACC,cAAL,CAAoBE,IAAhD,EAAsDQ,IAAtD,CACE,UAACC,UAAD,EAAgB;AACXR,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA6BO,UAA7B;;AACA,sBAAI,CAACxB,EAAE,CAACc,UAAH,WAAiBF,IAAI,CAACC,cAAL,CAAoBE,IAArC,UAAL,EAAuD;AACrDU,oBAAAA,UAAU,CAAC,YAAU;AACnBzB,sBAAAA,EAAE,CAACmB,SAAH,WAAgBP,IAAI,CAACC,cAAL,CAAoBE,IAApC;AACA,0BAAIW,IAAI,GAAC1B,EAAE,CAAC2B,IAAH,WAAWf,IAAI,CAACC,cAAL,CAAoBE,IAA/B,qBAAoD,GAApD,EAAyD,UAACa,GAAD,EAAS;AACrE,4BAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,uBAFI,CAAT;AAIH,qBANW,EAMV,GANU,CAAV;AAQD;AACP,iBAbD;AAeA3B,gBAAAA,GAAG,CAACiB,IAAJ,CAASN,IAAI,CAACC,cAAL,CAAoBE,IAA7B,4BAAqDH,IAAI,CAACC,cAAL,CAAoBE,IAAzE;AAED;;AAEGc,cAAAA,IA5ByB,GA4BlB/B,OAAO,CAACc,IAAI,CAACC,cAAL,CAAoBE,IAArB,CA5BW;AA6B7Bc,cAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,EAAqBI,OAArB,CAA6B,UAA7B,EAAyC,WAAzC,CAAX,CAAP;;AACI,kBAAG;AACF3B,gBAAAA,GAAG,CAAC4B,IAAJ,CAASL,IAAT;AACA,eAFD,CAEC,OAAMM,CAAN,EAAQ;AACRnB,gBAAAA,OAAO,CAACC,GAAR,CAAYkB,CAAZ;AACA;AAEN;;AA7CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkDeC,sB;;;;;oFAAf,kBAAsC/B,GAAtC,EAA0CC,GAA1C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACcD,GAAG,CAACG,IADlB,EACE6B,IADF,aACEA,IADF,EACOC,IADP,aACOA,IADP;;AAEL,gBAAIA,IAAI,IAAE,QAAV,EAAoB;AACdC,cAAAA,SADc,GACJvC,EAAE,CAACwC,KAAH,CAAS,qBAAmBH,IAA5B,EAAkC;AAAEI,gBAAAA,SAAS,EAAE;AAAb,eAAlC,EAAuD,UAACb,GAAD,EAAS;AAC5E,oBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,eAFa,CADI;AAIdc,cAAAA,gBAJc,GAIG1C,EAAE,CAACwC,KAAH,CAASH,IAAT,EAAe;AAAEI,gBAAAA,SAAS,EAAE;AAAb,eAAf,EAAoC,UAACb,GAAD,EAAS;AAChE,oBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,eAFoB,CAJH;AAQnB,aARD,MAQM;AACAF,cAAAA,IADA,GACK1B,EAAE,CAAC2B,IAAH,CAAQU,IAAR,EAAa,GAAb,EAAkB,UAACT,GAAD,EAAS;AAClC,oBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,eAFQ,CADL;AAIAe,cAAAA,WAJA,GAIY3C,EAAE,CAAC2B,IAAH,CAAQ,qBAAmBU,IAA3B,EAAgC,GAAhC,EAAqC,UAACT,GAAD,EAAS;AAC5D,oBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACV,eAFe,CAJZ;AAOL,aAjBI,CAkBL;;;AACAtB,YAAAA,GAAG,CAAC4B,IAAJ,CAAS;AACPU,cAAAA,OAAO,EAAC;AADD,aAAT;;AAnBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyBeC,sB;;;;;oFAAf,kBAAsCxC,GAAtC,EAA0CC,GAA1C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACwBD,GAAG,CAACG,IAD5B,EACIsC,QADJ,cACIA,QADJ,EACaC,QADb,cACaA,QADb;AAEH/B,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACI+B,YAAAA,eAHD,GAGiBhD,EAAE,CAACiD,MAAH,CAAUH,QAAV,EAAoBC,QAApB,EAA8B,UAACnB,GAAD,EAAS;AACvD,kBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTZ,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAHgB,CAHjB;AAOCiC,YAAAA,sBAPD,GAOwBlD,EAAE,CAACiD,MAAH,CAAU,qBAAmBH,QAA7B,EAAuC,qBAAmBC,QAA1D,EAAoE,UAACnB,GAAD,EAAS;AACjG,kBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTZ,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,aAHoB,CAPxB,EAYL;;AACAX,YAAAA,GAAG,CAAC4B,IAAJ,CAAS;AACPU,cAAAA,OAAO,EAAC;AADD,aAAT;;AAbK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAmBeO,sB;;;;;oFAAf,kBAAsC9C,GAAtC,EAA0CC,GAA1C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACcD,GAAG,CAACG,IADlB,EACE8B,IADF,cACEA,IADF,EACOD,IADP,cACOA,IADP;;AAEL,gBAAIC,IAAI,IAAE,QAAV,EAAoB;AAClBtB,cAAAA,OAAO,CAACC,GAAR,CAAYoB,IAAZ;AACAnC,cAAAA,MAAM,CAACmC,IAAD,EAAO,YAAY;AAAErB,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA6B,eAAlD,CAAN,CAFkB,CAGlB;AACA;AACA;AACA;;AACAf,cAAAA,MAAM,CAAC,qBAAmBmC,IAApB,EAA0B,YAAY;AAAErB,gBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAA6B,eAArE,CAAN,CAPkB,CASlB;AACA;AACA;AACA;AACD,aAbD,MAaK;AACHjB,cAAAA,EAAE,CAACoD,MAAH,CAAUf,IAAV,EAAgB,UAACT,GAAD,EAAS;AACvB,oBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTZ,gBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEH,eAJC;AAKFjB,cAAAA,EAAE,CAACoD,MAAH,CAAU,qBAAmBf,IAA7B,EAAmC,UAACT,GAAD,EAAS;AAC1C,oBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTZ,gBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAEH,eAJC;AAKC,aA1BI,CA2BL;;;AACAX,YAAAA,GAAG,CAAC4B,IAAJ,CAAS;AACPU,cAAAA,OAAO,EAAC;AADD,aAAT;;AA5BK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "const dirTree = require(\"directory-tree\");\nvar fs = require('fs');\nvar fs1 = require('fs-extra');\nvar rimraf = require(\"rimraf\");\n\nimport Users from '../models/Users';\nconst simpleGitPromise = require('simple-git')();\n\n\nexport async function getFile(req, res){\n\n  const {id}=req.body\n\n  const user= await Users.findOne({\n    where:{\n      id\n    }\n  });\n  if (user.currentproject!=null) {\n    //      if (!fs.existsSync(`${user.currentproject.name}/src`)){\n\n    if (fs.existsSync(user.currentproject.name)){\n      console.log(user.currentproject.name);\n          fs1.copy(user.currentproject.name,`fictiveProjects/${user.currentproject.name}/`)\n    }else{\n      fs.mkdirSync(user.currentproject.name)\n      var url=`https://github.com/${user.gitusername}/${user.currentproject.name}.git`\n      simpleGitPromise.clone(url, user.currentproject.name).then(\n        (addSuccess) => {\n             console.log(\"clonage réussi\",addSuccess);\n             if (!fs.existsSync(`${user.currentproject.name}/src`)) {\n               setTimeout(function(){\n                 fs.mkdirSync(`${user.currentproject.name}/src`)\n                 var file=fs.open(`${user.currentproject.name}/src/index.php`,'w', (err) => {\n                       if (err) throw err;\n                     });\n\n             },200)\n\n             }\n      })\n\n      fs1.copy(user.currentproject.name,`fictiveProjects/${user.currentproject.name}/`)\n\n    }\n\n    var tree = dirTree(user.currentproject.name);\n    tree = JSON.parse(JSON.stringify(tree).replace(/\"name\":/g, \"\\\"text\\\":\"));\n        try{\n         res.json(tree);\n        }catch(e){\n         console.log(e)\n        }\n\n  }\n\n}\n\n\nexport async function create_DirectoryOrFile(req,res){\n  const {path,type}= req.body;\n  if (type==\"folder\") {\n    var directory=fs.mkdir(\"fictiveProjects/\"+path, { recursive: true }, (err) => {\n      if (err) throw err;\n    });\n    var fictiveDirectory=fs.mkdir(path, { recursive: true }, (err) => {\n      if (err) throw err;\n    });\n\n  }else {\n    var file=fs.open(path,'w', (err) => {\n      if (err) throw err;\n    });\n    var fictiveFile=fs.open(\"fictiveProjects/\"+path,'w', (err) => {\n      if (err) throw err;\n    });\n  }\n  //var data=fs.readFileSync('./public/home.html','utf-8');\n  res.json({\n    message:'done'\n  });\n\n}\n\nexport async function update_DirectoryOrFile(req,res){\n    const {old_path,new_path}= req.body;\n    console.log(\"renaming\");\n    var directoryOrFile=fs.rename(old_path, new_path, (err) => {\n        if (err) throw err;\n        console.log('Rename complete!');\n       });\n    var fictiveDirectoryOrFile=fs.rename(\"fictiveProjects/\"+old_path, \"fictiveProjects/\"+new_path, (err) => {\n           if (err) throw err;\n           console.log('Rename complete!');\n          });\n\n  //var data=fs.readFileSync('./public/home.html','utf-8');\n  res.json({\n    message:'done'\n  });\n\n}\n\nexport async function delete_DirectoryOrFile(req,res){\n  const {type,path}= req.body;\n  if (type==\"folder\") {\n    console.log(path);\n    rimraf(path, function () { console.log(\"delete done\"); });\n    // fs.rmdir(path, { recursive: true },(err) => {\n    //   if (err) throw err;\n    //   console.log(\"folder successfully deleted\");\n    // });\n    rimraf(\"fictiveProjects/\"+path, function () { console.log(\"delete done\"); });\n\n    // fs.rmdir(\"fictiveProjects/\"+path, { recursive: true },(err) => {\n    //   if (err) throw err;\n    //   console.log(\"folder successfully deleted\");\n    // });\n  }else{\n    fs.unlink(path, (err) => {\n      if (err) throw err;\n      console.log(\"file successfully deleted\");\n\n  });\n  fs.unlink(\"fictiveProjects/\"+path, (err) => {\n    if (err) throw err;\n    console.log(\"file successfully deleted\");\n\n});\n  }\n  //var data=fs.readFileSync('./public/home.html','utf-8');\n  res.json({\n    message:'done'\n  });\n\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/php.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/php.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/php.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/php.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "php.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _php = require(\"../controllers/php.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/', _php.get_And_Execute_PhpCode);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBocC5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJwb3N0IiwiZ2V0X0FuZF9FeGVjdXRlX1BocENvZGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7QUFEQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFHQUEsTUFBTSxDQUFDQyxJQUFQLENBQWEsR0FBYixFQUFrQkMsNEJBQWxCO2VBSWVGLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbmltcG9ydCB7Z2V0X0FuZF9FeGVjdXRlX1BocENvZGV9IGZyb20gJy4uL2NvbnRyb2xsZXJzL3BocC5jb250cm9sbGVyJztcblxucm91dGVyLnBvc3QoICcvJywgZ2V0X0FuZF9FeGVjdXRlX1BocENvZGUpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "php.js"
      ],
      "names": [
        "router",
        "post",
        "get_And_Execute_PhpCode"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAGAA,MAAM,CAACC,IAAP,CAAa,GAAb,EAAkBC,4BAAlB;eAIeF,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {get_And_Execute_PhpCode} from '../controllers/php.controller';\n\nrouter.post( '/', get_And_Execute_PhpCode);\n\n\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/save.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/save.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/save.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/save.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "save.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _save = require(\"../controllers/save.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/', _save.get_And_Save_Code);\nrouter.post('/show', _save.show_Code);\nrouter.post('/fictiveSave', _save.fictive_Save);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhdmUuanMiXSwibmFtZXMiOlsicm91dGVyIiwicG9zdCIsImdldF9BbmRfU2F2ZV9Db2RlIiwic2hvd19Db2RlIiwiZmljdGl2ZV9TYXZlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBR0E7O0FBREEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFhLEdBQWIsRUFBa0JDLHVCQUFsQjtBQUNBRixNQUFNLENBQUNDLElBQVAsQ0FBYSxPQUFiLEVBQXNCRSxlQUF0QjtBQUVBSCxNQUFNLENBQUNDLElBQVAsQ0FBYSxjQUFiLEVBQTZCRyxrQkFBN0I7ZUFFZUosTSIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlzYWJldGgvRW1lcmdpbm92LUlJL3NyYy9yb3V0ZXMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVyIH0gZnJvbSAnZXhwcmVzcyc7XG5cbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xuaW1wb3J0IHtnZXRfQW5kX1NhdmVfQ29kZSxzaG93X0NvZGUsZmljdGl2ZV9TYXZlfSBmcm9tICcuLi9jb250cm9sbGVycy9zYXZlLmNvbnRyb2xsZXInO1xuXG5cbnJvdXRlci5wb3N0KCAnLycsIGdldF9BbmRfU2F2ZV9Db2RlKTtcbnJvdXRlci5wb3N0KCAnL3Nob3cnLCBzaG93X0NvZGUpO1xuXG5yb3V0ZXIucG9zdCggJy9maWN0aXZlU2F2ZScsIGZpY3RpdmVfU2F2ZSk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "save.js"
      ],
      "names": [
        "router",
        "post",
        "get_And_Save_Code",
        "show_Code",
        "fictive_Save"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAa,GAAb,EAAkBC,uBAAlB;AACAF,MAAM,CAACC,IAAP,CAAa,OAAb,EAAsBE,eAAtB;AAEAH,MAAM,CAACC,IAAP,CAAa,cAAb,EAA6BG,kBAA7B;eAEeJ,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {get_And_Save_Code,show_Code,fictive_Save} from '../controllers/save.controller';\n\n\nrouter.post( '/', get_And_Save_Code);\nrouter.post( '/show', show_Code);\n\nrouter.post( '/fictiveSave', fictive_Save);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/save.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/save.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/save.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/save.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "save.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fictive_Save = fictive_Save;\nexports.get_And_Save_Code = get_And_Save_Code;\nexports.show_Code = show_Code;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar fs = require('fs');\n\nfunction fictive_Save(_x, _x2) {\n  return _fictive_Save.apply(this, arguments);\n}\n\nfunction _fictive_Save() {\n  _fictive_Save = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, code, path;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, code = _req$body.code, path = _req$body.path;\n            console.log(code);\n            console.log(path);\n\n            try {\n              fs.writeFile(\"fictiveProjects/\" + path, code, function (err) {\n                if (err) {\n                  return console.log(err);\n                }\n\n                console.log(\"The file was saved fictively!\");\n              });\n              res.json({\n                \"code\": code\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fictive_Save.apply(this, arguments);\n}\n\nfunction get_And_Save_Code(_x3, _x4) {\n  return _get_And_Save_Code.apply(this, arguments);\n}\n\nfunction _get_And_Save_Code() {\n  _get_And_Save_Code = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, code, path;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, code = _req$body2.code, path = _req$body2.path; //console.log(code);\n\n            console.log(path);\n\n            try {\n              fs.writeFile(path, code, function (err) {\n                if (err) {\n                  return console.log(err);\n                }\n\n                console.log(\"The file was saved !\");\n              });\n              res.json({\n                \"code\": code\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _get_And_Save_Code.apply(this, arguments);\n}\n\nfunction show_Code(_x5, _x6) {\n  return _show_Code.apply(this, arguments);\n}\n\nfunction _show_Code() {\n  _show_Code = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var new_path, did_Something_Changed, contents, virtual_contents;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            new_path = req.body.new_path;\n            did_Something_Changed = true;\n\n            try {\n              console.log(new_path);\n              contents = fs.readFileSync(new_path, 'utf8');\n              virtual_contents = fs.readFileSync(\"fictiveProjects/\" + new_path, 'utf8'); // console.log(\"voila\");\n              //\n              // console.log(virtual_contents);\n              // console.log(contents);\n              // console.log(virtual_contents==contents);\n\n              if (contents.localeCompare(virtual_contents) == 0) {\n                console.log(\"nothing\");\n                did_Something_Changed = false;\n              } // console.log(\"verification done\");\n\n\n              console.log(did_Something_Changed);\n              res.json({\n                \"variation\": did_Something_Changed,\n                \"code\": virtual_contents\n              });\n            } catch (e) {\n              console.log(e);\n            }\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _show_Code.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhdmUuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJmaWN0aXZlX1NhdmUiLCJyZXEiLCJyZXMiLCJib2R5IiwiY29kZSIsInBhdGgiLCJjb25zb2xlIiwibG9nIiwid3JpdGVGaWxlIiwiZXJyIiwianNvbiIsImUiLCJnZXRfQW5kX1NhdmVfQ29kZSIsInNob3dfQ29kZSIsIm5ld19wYXRoIiwiZGlkX1NvbWV0aGluZ19DaGFuZ2VkIiwiY29udGVudHMiLCJyZWFkRmlsZVN5bmMiLCJ2aXJ0dWFsX2NvbnRlbnRzIiwibG9jYWxlQ29tcGFyZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFFLElBQUlBLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBaEI7O1NBRW9CQyxZOzs7OzswRUFBZixpQkFBNEJDLEdBQTVCLEVBQWlDQyxHQUFqQztBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsd0JBQ2NELEdBQUcsQ0FBQ0UsSUFEbEIsRUFDRUMsSUFERixhQUNFQSxJQURGLEVBQ09DLElBRFAsYUFDT0EsSUFEUDtBQUdMQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsSUFBWjtBQUNBRSxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWjs7QUFFQSxnQkFBRztBQUNEUCxjQUFBQSxFQUFFLENBQUNVLFNBQUgsQ0FBYSxxQkFBbUJILElBQWhDLEVBQXNDRCxJQUF0QyxFQUE0QyxVQUFTSyxHQUFULEVBQWM7QUFDMUQsb0JBQUdBLEdBQUgsRUFBUTtBQUNQLHlCQUFPSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUUsR0FBWixDQUFQO0FBQ0E7O0FBQ0RILGdCQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSwrQkFBWjtBQUNDLGVBTEQ7QUFPQUwsY0FBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFDUCx3QkFBT047QUFEQSxlQUFUO0FBSUMsYUFaSCxDQVlHLE9BQU1PLENBQU4sRUFBUTtBQUVQTCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUksQ0FBWjtBQUVBOztBQXRCQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBeUJlQyxpQjs7Ozs7K0VBQWYsa0JBQWlDWCxHQUFqQyxFQUFzQ0MsR0FBdEM7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlCQUNjRCxHQUFHLENBQUNFLElBRGxCLEVBQ0VDLElBREYsY0FDRUEsSUFERixFQUNPQyxJQURQLGNBQ09BLElBRFAsRUFHTDs7QUFDQUMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVo7O0FBRUEsZ0JBQUc7QUFDRFAsY0FBQUEsRUFBRSxDQUFDVSxTQUFILENBQWFILElBQWIsRUFBbUJELElBQW5CLEVBQXlCLFVBQVNLLEdBQVQsRUFBYztBQUN2QyxvQkFBR0EsR0FBSCxFQUFRO0FBQ1AseUJBQU9ILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRSxHQUFaLENBQVA7QUFDQTs7QUFDREgsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBQ0MsZUFMRDtBQU9BTCxjQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBUztBQUNQLHdCQUFPTjtBQURBLGVBQVQ7QUFJQyxhQVpILENBWUcsT0FBTU8sQ0FBTixFQUFRO0FBRVBMLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxDQUFaO0FBRUE7O0FBdEJDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEc7Ozs7U0EyQmlCRSxTOzs7Ozt1RUFBZixrQkFBeUJaLEdBQXpCLEVBQThCQyxHQUE5QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFRVksWUFBQUEsUUFGRixHQUVhYixHQUFHLENBQUNFLElBRmpCLENBRUVXLFFBRkY7QUFHREMsWUFBQUEscUJBSEMsR0FHcUIsSUFIckI7O0FBSUwsZ0JBQUc7QUFDRFQsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlPLFFBQVo7QUFDS0UsY0FBQUEsUUFGSixHQUVlbEIsRUFBRSxDQUFDbUIsWUFBSCxDQUFnQkgsUUFBaEIsRUFBMEIsTUFBMUIsQ0FGZjtBQUdJSSxjQUFBQSxnQkFISixHQUd1QnBCLEVBQUUsQ0FBQ21CLFlBQUgsQ0FBZ0IscUJBQW1CSCxRQUFuQyxFQUE2QyxNQUE3QyxDQUh2QixFQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0Qsa0JBQUlFLFFBQVEsQ0FBQ0csYUFBVCxDQUF1QkQsZ0JBQXZCLEtBQTBDLENBQTlDLEVBQWlEO0FBQy9DWixnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksU0FBWjtBQUNBUSxnQkFBQUEscUJBQXFCLEdBQUMsS0FBdEI7QUFDRCxlQVpBLENBYUQ7OztBQUNBVCxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWVEscUJBQVo7QUFDQWIsY0FBQUEsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFDUCw2QkFBYUsscUJBRE47QUFFUCx3QkFBT0c7QUFGQSxlQUFUO0FBSUMsYUFuQkgsQ0FtQkcsT0FBTVAsQ0FBTixFQUFRO0FBQ1BMLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxDQUFaO0FBQ0E7O0FBekJDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEciLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvY29udHJvbGxlcnMvIiwic291cmNlc0NvbnRlbnQiOlsiICB2YXIgZnMgPSByZXF1aXJlKCdmcycpO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmljdGl2ZV9TYXZlKHJlcSwgcmVzKXtcbiAgY29uc3Qge2NvZGUscGF0aH09IHJlcS5ib2R5O1xuXG4gIGNvbnNvbGUubG9nKGNvZGUpO1xuICBjb25zb2xlLmxvZyhwYXRoKTtcblxuICB0cnl7XG4gICAgZnMud3JpdGVGaWxlKFwiZmljdGl2ZVByb2plY3RzL1wiK3BhdGgsIGNvZGUsIGZ1bmN0aW9uKGVycikge1xuICAgIGlmKGVycikge1xuICAgICByZXR1cm4gY29uc29sZS5sb2coZXJyKTtcbiAgICB9XG4gICAgY29uc29sZS5sb2coXCJUaGUgZmlsZSB3YXMgc2F2ZWQgZmljdGl2ZWx5IVwiKTtcbiAgICB9KTtcblxuICAgIHJlcy5qc29uKHtcbiAgICAgIFwiY29kZVwiOmNvZGVcbiAgICB9KTtcblxuICAgIH1jYXRjaChlKXtcblxuICAgICAgY29uc29sZS5sb2coZSlcblxuICAgICB9XG5cbiAgfVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldF9BbmRfU2F2ZV9Db2RlKHJlcSwgcmVzKXtcbiAgY29uc3Qge2NvZGUscGF0aH09IHJlcS5ib2R5O1xuXG4gIC8vY29uc29sZS5sb2coY29kZSk7XG4gIGNvbnNvbGUubG9nKHBhdGgpO1xuXG4gIHRyeXtcbiAgICBmcy53cml0ZUZpbGUocGF0aCwgY29kZSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgaWYoZXJyKSB7XG4gICAgIHJldHVybiBjb25zb2xlLmxvZyhlcnIpO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhcIlRoZSBmaWxlIHdhcyBzYXZlZCAhXCIpO1xuICAgIH0pO1xuXG4gICAgcmVzLmpzb24oe1xuICAgICAgXCJjb2RlXCI6Y29kZVxuICAgIH0pO1xuXG4gICAgfWNhdGNoKGUpe1xuXG4gICAgICBjb25zb2xlLmxvZyhlKVxuXG4gICAgIH1cblxuICB9XG5cblxuICBleHBvcnQgYXN5bmMgZnVuY3Rpb24gc2hvd19Db2RlKHJlcSwgcmVzKXtcblxuICAgIGNvbnN0IHtuZXdfcGF0aH09IHJlcS5ib2R5O1xuICAgIHZhciBkaWRfU29tZXRoaW5nX0NoYW5nZWQ9dHJ1ZVxuICAgIHRyeXtcbiAgICAgIGNvbnNvbGUubG9nKG5ld19wYXRoKTtcbiAgICAgICB2YXIgY29udGVudHMgPSBmcy5yZWFkRmlsZVN5bmMobmV3X3BhdGgsICd1dGY4Jyk7XG4gICAgICAgdmFyIHZpcnR1YWxfY29udGVudHMgPSBmcy5yZWFkRmlsZVN5bmMoXCJmaWN0aXZlUHJvamVjdHMvXCIrbmV3X3BhdGgsICd1dGY4Jyk7XG4gICAgICAgLy8gY29uc29sZS5sb2coXCJ2b2lsYVwiKTtcbiAgICAgICAvL1xuICAgICAgIC8vIGNvbnNvbGUubG9nKHZpcnR1YWxfY29udGVudHMpO1xuICAgICAgIC8vIGNvbnNvbGUubG9nKGNvbnRlbnRzKTtcbiAgICAgICAvLyBjb25zb2xlLmxvZyh2aXJ0dWFsX2NvbnRlbnRzPT1jb250ZW50cyk7XG4gICAgICBpZiAoY29udGVudHMubG9jYWxlQ29tcGFyZSh2aXJ0dWFsX2NvbnRlbnRzKT09MCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIm5vdGhpbmdcIik7XG4gICAgICAgIGRpZF9Tb21ldGhpbmdfQ2hhbmdlZD1mYWxzZVxuICAgICAgfVxuICAgICAgLy8gY29uc29sZS5sb2coXCJ2ZXJpZmljYXRpb24gZG9uZVwiKTtcbiAgICAgIGNvbnNvbGUubG9nKGRpZF9Tb21ldGhpbmdfQ2hhbmdlZCk7XG4gICAgICByZXMuanNvbih7XG4gICAgICAgIFwidmFyaWF0aW9uXCI6IGRpZF9Tb21ldGhpbmdfQ2hhbmdlZCxcbiAgICAgICAgXCJjb2RlXCI6dmlydHVhbF9jb250ZW50c1xuICAgICAgfSk7XG4gICAgICB9Y2F0Y2goZSl7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpXG4gICAgICAgfVxuICAgIH1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "save.controller.js"
      ],
      "names": [
        "fs",
        "require",
        "fictive_Save",
        "req",
        "res",
        "body",
        "code",
        "path",
        "console",
        "log",
        "writeFile",
        "err",
        "json",
        "e",
        "get_And_Save_Code",
        "show_Code",
        "new_path",
        "did_Something_Changed",
        "contents",
        "readFileSync",
        "virtual_contents",
        "localeCompare"
      ],
      "mappings": ";;;;;;;;;;;;;AAAE,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;SAEoBC,Y;;;;;0EAAf,iBAA4BC,GAA5B,EAAiCC,GAAjC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACcD,GAAG,CAACE,IADlB,EACEC,IADF,aACEA,IADF,EACOC,IADP,aACOA,IADP;AAGLC,YAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAE,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,gBAAG;AACDP,cAAAA,EAAE,CAACU,SAAH,CAAa,qBAAmBH,IAAhC,EAAsCD,IAAtC,EAA4C,UAASK,GAAT,EAAc;AAC1D,oBAAGA,GAAH,EAAQ;AACP,yBAAOH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAP;AACA;;AACDH,gBAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACC,eALD;AAOAL,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AACP,wBAAON;AADA,eAAT;AAIC,aAZH,CAYG,OAAMO,CAAN,EAAQ;AAEPL,cAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AAEA;;AAtBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAyBeC,iB;;;;;+EAAf,kBAAiCX,GAAjC,EAAsCC,GAAtC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACcD,GAAG,CAACE,IADlB,EACEC,IADF,cACEA,IADF,EACOC,IADP,cACOA,IADP,EAGL;;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AAEA,gBAAG;AACDP,cAAAA,EAAE,CAACU,SAAH,CAAaH,IAAb,EAAmBD,IAAnB,EAAyB,UAASK,GAAT,EAAc;AACvC,oBAAGA,GAAH,EAAQ;AACP,yBAAOH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAP;AACA;;AACDH,gBAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACC,eALD;AAOAL,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AACP,wBAAON;AADA,eAAT;AAIC,aAZH,CAYG,OAAMO,CAAN,EAAQ;AAEPL,cAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AAEA;;AAtBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA2BiBE,S;;;;;uEAAf,kBAAyBZ,GAAzB,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAEEY,YAAAA,QAFF,GAEab,GAAG,CAACE,IAFjB,CAEEW,QAFF;AAGDC,YAAAA,qBAHC,GAGqB,IAHrB;;AAIL,gBAAG;AACDT,cAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACKE,cAAAA,QAFJ,GAEelB,EAAE,CAACmB,YAAH,CAAgBH,QAAhB,EAA0B,MAA1B,CAFf;AAGII,cAAAA,gBAHJ,GAGuBpB,EAAE,CAACmB,YAAH,CAAgB,qBAAmBH,QAAnC,EAA6C,MAA7C,CAHvB,EAIA;AACA;AACA;AACA;AACA;;AACD,kBAAIE,QAAQ,CAACG,aAAT,CAAuBD,gBAAvB,KAA0C,CAA9C,EAAiD;AAC/CZ,gBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAQ,gBAAAA,qBAAqB,GAAC,KAAtB;AACD,eAZA,CAaD;;;AACAT,cAAAA,OAAO,CAACC,GAAR,CAAYQ,qBAAZ;AACAb,cAAAA,GAAG,CAACQ,IAAJ,CAAS;AACP,6BAAaK,qBADN;AAEP,wBAAOG;AAFA,eAAT;AAIC,aAnBH,CAmBG,OAAMP,CAAN,EAAQ;AACPL,cAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACA;;AAzBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "  var fs = require('fs');\n\nexport async function fictive_Save(req, res){\n  const {code,path}= req.body;\n\n  console.log(code);\n  console.log(path);\n\n  try{\n    fs.writeFile(\"fictiveProjects/\"+path, code, function(err) {\n    if(err) {\n     return console.log(err);\n    }\n    console.log(\"The file was saved fictively!\");\n    });\n\n    res.json({\n      \"code\":code\n    });\n\n    }catch(e){\n\n      console.log(e)\n\n     }\n\n  }\nexport async function get_And_Save_Code(req, res){\n  const {code,path}= req.body;\n\n  //console.log(code);\n  console.log(path);\n\n  try{\n    fs.writeFile(path, code, function(err) {\n    if(err) {\n     return console.log(err);\n    }\n    console.log(\"The file was saved !\");\n    });\n\n    res.json({\n      \"code\":code\n    });\n\n    }catch(e){\n\n      console.log(e)\n\n     }\n\n  }\n\n\n  export async function show_Code(req, res){\n\n    const {new_path}= req.body;\n    var did_Something_Changed=true\n    try{\n      console.log(new_path);\n       var contents = fs.readFileSync(new_path, 'utf8');\n       var virtual_contents = fs.readFileSync(\"fictiveProjects/\"+new_path, 'utf8');\n       // console.log(\"voila\");\n       //\n       // console.log(virtual_contents);\n       // console.log(contents);\n       // console.log(virtual_contents==contents);\n      if (contents.localeCompare(virtual_contents)==0) {\n        console.log(\"nothing\");\n        did_Something_Changed=false\n      }\n      // console.log(\"verification done\");\n      console.log(did_Something_Changed);\n      res.json({\n        \"variation\": did_Something_Changed,\n        \"code\":virtual_contents\n      });\n      }catch(e){\n        console.log(e)\n       }\n    }\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/slack.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/slack.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/slack.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/slack.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "slack.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _slack = require(\"../controllers/slack.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/', _slack.getLastMessage);\nrouter.post('/send', _slack.putMessage); //router.post  ( '/delete', delete_Git_Repository);\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsYWNrLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJnZXRMYXN0TWVzc2FnZSIsInB1dE1lc3NhZ2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFHQTs7QUFEQSxJQUFNQSxNQUFNLEdBQUcsc0JBQWY7QUFJQUEsTUFBTSxDQUFDQyxJQUFQLENBQVksR0FBWixFQUFrQkMscUJBQWxCO0FBQ0FGLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLE9BQVosRUFBc0JFLGlCQUF0QixFLENBRUE7O2VBRWVILE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbmltcG9ydCB7Z2V0TGFzdE1lc3NhZ2UscHV0TWVzc2FnZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvc2xhY2suY29udHJvbGxlcic7XG5cblxucm91dGVyLnBvc3QoJy8nICwgZ2V0TGFzdE1lc3NhZ2UpO1xucm91dGVyLnBvc3QoJy9zZW5kJyAsIHB1dE1lc3NhZ2UpO1xuXG4vL3JvdXRlci5wb3N0ICAoICcvZGVsZXRlJywgZGVsZXRlX0dpdF9SZXBvc2l0b3J5KTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "slack.js"
      ],
      "names": [
        "router",
        "post",
        "getLastMessage",
        "putMessage"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAkBC,qBAAlB;AACAF,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAsBE,iBAAtB,E,CAEA;;eAEeH,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {getLastMessage,putMessage} from '../controllers/slack.controller';\n\n\nrouter.post('/' , getLastMessage);\nrouter.post('/send' , putMessage);\n\n//router.post  ( '/delete', delete_Git_Repository);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/slack.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/slack.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/slack.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/slack.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "slack.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLastMessage = getLastMessage;\nexports.putMessage = putMessage;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar token = \"xoxp-835473819876-837792425767-838148967462-a6d016a4d8b66f07baf85eeb865406e9\";\n\nvar _require = require(\"@slack/web-api\"),\n    WebClient = _require.WebClient;\n\nvar web = new WebClient(token);\n\nfunction getLastMessage(_x, _x2) {\n  return _getLastMessage.apply(this, arguments);\n}\n\nfunction _getLastMessage() {\n  _getLastMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var msg;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return web.conversations.history({\n              channel: \"CQKDXQWS0\",\n              limit: 4\n            });\n\n          case 2:\n            msg = _context.sent;\n            res.json({\n              \"msg3\": msg.messages[3].username + \": \" + msg.messages[3].text,\n              \"msg2\": msg.messages[2].username + \": \" + msg.messages[2].text,\n              \"msg1\": msg.messages[1].username + \": \" + msg.messages[1].text,\n              \"msg0\": msg.messages[0].username + \": \" + msg.messages[0].text\n            });\n            console.log(msg);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getLastMessage.apply(this, arguments);\n}\n\nfunction putMessage(_x3, _x4) {\n  return _putMessage.apply(this, arguments);\n}\n\nfunction _putMessage() {\n  _putMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var users, user, message;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return web.users.list();\n\n          case 2:\n            users = _context3.sent;\n            user = users.members[0].name;\n            message = req.body.message;\n\n            _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n              var res;\n              return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return web.chat.postMessage({\n                        username: \"mrejebsf\",\n                        link_names: true,\n                        channel: \"CQKDXQWS0\",\n                        text: message\n                      });\n\n                    case 2:\n                      res = _context2.sent;\n                      // `res` contains information about the posted message\n                      console.log('Message sent: ', res.ts);\n                      console.log(res);\n\n                    case 5:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            }))();\n\n            res.json({\n              \"name\": user\n            });\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _putMessage.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsYWNrLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsidG9rZW4iLCJyZXF1aXJlIiwiV2ViQ2xpZW50Iiwid2ViIiwiZ2V0TGFzdE1lc3NhZ2UiLCJyZXEiLCJyZXMiLCJjb252ZXJzYXRpb25zIiwiaGlzdG9yeSIsImNoYW5uZWwiLCJsaW1pdCIsIm1zZyIsImpzb24iLCJtZXNzYWdlcyIsInVzZXJuYW1lIiwidGV4dCIsImNvbnNvbGUiLCJsb2ciLCJwdXRNZXNzYWdlIiwidXNlcnMiLCJsaXN0IiwidXNlciIsIm1lbWJlcnMiLCJuYW1lIiwibWVzc2FnZSIsImJvZHkiLCJjaGF0IiwicG9zdE1lc3NhZ2UiLCJsaW5rX25hbWVzIiwidHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLEtBQUssR0FBRSw4RUFBYjs7ZUFHRUMsT0FBTyxDQUFDLGdCQUFELEM7SUFEUEMsUyxZQUFBQSxTOztBQUdGLElBQU1DLEdBQUcsR0FBRyxJQUFJRCxTQUFKLENBQWNGLEtBQWQsQ0FBWjs7U0FFc0JJLGM7Ozs7OzRFQUFmLGlCQUE4QkMsR0FBOUIsRUFBa0NDLEdBQWxDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBR1dILEdBQUcsQ0FBQ0ksYUFBSixDQUFrQkMsT0FBbEIsQ0FBMEI7QUFDeENDLGNBQUFBLE9BQU8sRUFBQyxXQURnQztBQUV4Q0MsY0FBQUEsS0FBSyxFQUFHO0FBRmdDLGFBQTFCLENBSFg7O0FBQUE7QUFHREMsWUFBQUEsR0FIQztBQU9MTCxZQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBUztBQUVYLHNCQUFRRCxHQUFHLENBQUNFLFFBQUosQ0FBYSxDQUFiLEVBQWdCQyxRQUFoQixHQUF5QixJQUF6QixHQUE4QkgsR0FBRyxDQUFDRSxRQUFKLENBQWEsQ0FBYixFQUFnQkUsSUFGM0M7QUFHWCxzQkFBUUosR0FBRyxDQUFDRSxRQUFKLENBQWEsQ0FBYixFQUFnQkMsUUFBaEIsR0FBeUIsSUFBekIsR0FBOEJILEdBQUcsQ0FBQ0UsUUFBSixDQUFhLENBQWIsRUFBZ0JFLElBSDNDO0FBSVgsc0JBQVFKLEdBQUcsQ0FBQ0UsUUFBSixDQUFhLENBQWIsRUFBZ0JDLFFBQWhCLEdBQXlCLElBQXpCLEdBQThCSCxHQUFHLENBQUNFLFFBQUosQ0FBYSxDQUFiLEVBQWdCRSxJQUozQztBQUtYLHNCQUFRSixHQUFHLENBQUNFLFFBQUosQ0FBYSxDQUFiLEVBQWdCQyxRQUFoQixHQUF5QixJQUF6QixHQUE4QkgsR0FBRyxDQUFDRSxRQUFKLENBQWEsQ0FBYixFQUFnQkU7QUFMM0MsYUFBVDtBQU9BQyxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU4sR0FBWjs7QUFkSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBZ0JlTyxVOzs7Ozt3RUFBZixrQkFBMEJiLEdBQTFCLEVBQThCQyxHQUE5QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNhSCxHQUFHLENBQUNnQixLQUFKLENBQVVDLElBQVYsRUFEYjs7QUFBQTtBQUNERCxZQUFBQSxLQURDO0FBRURFLFlBQUFBLElBRkMsR0FFSUYsS0FBSyxDQUFDRyxPQUFOLENBQWMsQ0FBZCxFQUFpQkMsSUFGckI7QUFHRUMsWUFBQUEsT0FIRixHQUdZbkIsR0FBRyxDQUFDb0IsSUFIaEIsQ0FHRUQsT0FIRjs7QUFJTCxvRUFBQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLDZCQUNtQnJCLEdBQUcsQ0FBQ3VCLElBQUosQ0FBU0MsV0FBVCxDQUFxQjtBQUFDYix3QkFBQUEsUUFBUSxFQUFDLFVBQVY7QUFBc0JjLHdCQUFBQSxVQUFVLEVBQUMsSUFBakM7QUFBdUNuQix3QkFBQUEsT0FBTyxFQUFFLFdBQWhEO0FBQTZETSx3QkFBQUEsSUFBSSxFQUFFUztBQUFuRSx1QkFBckIsQ0FEbkI7O0FBQUE7QUFDT2xCLHNCQUFBQSxHQURQO0FBRUM7QUFDQVUsc0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaLEVBQThCWCxHQUFHLENBQUN1QixFQUFsQztBQUVBYixzQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlYLEdBQVo7O0FBTEQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsYUFBRDs7QUFPQUEsWUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDUCxzQkFBT1M7QUFEQSxhQUFUOztBQVhLO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEciLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvY29udHJvbGxlcnMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdG9rZW49IFwieG94cC04MzU0NzM4MTk4NzYtODM3NzkyNDI1NzY3LTgzODE0ODk2NzQ2Mi1hNmQwMTZhNGQ4YjY2ZjA3YmFmODVlZWI4NjU0MDZlOVwiXG5jb25zdCB7XG4gIFdlYkNsaWVudFxufT1yZXF1aXJlKFwiQHNsYWNrL3dlYi1hcGlcIik7XG5cbmNvbnN0IHdlYiA9IG5ldyBXZWJDbGllbnQodG9rZW4pO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TGFzdE1lc3NhZ2UocmVxLHJlcyl7XG4gIC8qbGV0IHVzZXJzID0gYXdhaXQgd2ViLnVzZXJzLmxpc3QoKTtcbiAgY29uc29sZS5sb2codXNlcnMpOyovXG4gIGxldCBtc2cgPSBhd2FpdCB3ZWIuY29udmVyc2F0aW9ucy5oaXN0b3J5KHtcbiAgICBjaGFubmVsOlwiQ1FLRFhRV1MwXCIsXG4gICAgbGltaXQgOiA0LFxuICB9KTtcbiAgcmVzLmpzb24oe1xuXG5cIm1zZzNcIjogbXNnLm1lc3NhZ2VzWzNdLnVzZXJuYW1lK1wiOiBcIittc2cubWVzc2FnZXNbM10udGV4dCxcblwibXNnMlwiOiBtc2cubWVzc2FnZXNbMl0udXNlcm5hbWUrXCI6IFwiK21zZy5tZXNzYWdlc1syXS50ZXh0LFxuXCJtc2cxXCI6IG1zZy5tZXNzYWdlc1sxXS51c2VybmFtZStcIjogXCIrbXNnLm1lc3NhZ2VzWzFdLnRleHQsXG5cIm1zZzBcIjogbXNnLm1lc3NhZ2VzWzBdLnVzZXJuYW1lK1wiOiBcIittc2cubWVzc2FnZXNbMF0udGV4dFxuICB9KVxuICBjb25zb2xlLmxvZyhtc2cpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHB1dE1lc3NhZ2UocmVxLHJlcyl7XG4gIGxldCB1c2VycyA9IGF3YWl0IHdlYi51c2Vycy5saXN0KCk7XG4gIHZhciB1c2VyPXVzZXJzLm1lbWJlcnNbMF0ubmFtZTtcbiAgY29uc3Qge21lc3NhZ2V9PSByZXEuYm9keTtcbiAgKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCB3ZWIuY2hhdC5wb3N0TWVzc2FnZSh7dXNlcm5hbWU6XCJtcmVqZWJzZlwiLCBsaW5rX25hbWVzOnRydWUsIGNoYW5uZWw6IFwiQ1FLRFhRV1MwXCIsIHRleHQ6IG1lc3NhZ2UgfSk7XG4gICAgLy8gYHJlc2AgY29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHBvc3RlZCBtZXNzYWdlXG4gICAgY29uc29sZS5sb2coJ01lc3NhZ2Ugc2VudDogJywgcmVzLnRzKTtcblxuICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gIH0pKCk7XG4gIHJlcy5qc29uKHtcbiAgICBcIm5hbWVcIjp1c2VyXG4gIH0pXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "slack.controller.js"
      ],
      "names": [
        "token",
        "require",
        "WebClient",
        "web",
        "getLastMessage",
        "req",
        "res",
        "conversations",
        "history",
        "channel",
        "limit",
        "msg",
        "json",
        "messages",
        "username",
        "text",
        "console",
        "log",
        "putMessage",
        "users",
        "list",
        "user",
        "members",
        "name",
        "message",
        "body",
        "chat",
        "postMessage",
        "link_names",
        "ts"
      ],
      "mappings": ";;;;;;;;;;;;AAAA,IAAMA,KAAK,GAAE,8EAAb;;eAGEC,OAAO,CAAC,gBAAD,C;IADPC,S,YAAAA,S;;AAGF,IAAMC,GAAG,GAAG,IAAID,SAAJ,CAAcF,KAAd,CAAZ;;SAEsBI,c;;;;;4EAAf,iBAA8BC,GAA9B,EAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGWH,GAAG,CAACI,aAAJ,CAAkBC,OAAlB,CAA0B;AACxCC,cAAAA,OAAO,EAAC,WADgC;AAExCC,cAAAA,KAAK,EAAG;AAFgC,aAA1B,CAHX;;AAAA;AAGDC,YAAAA,GAHC;AAOLL,YAAAA,GAAG,CAACM,IAAJ,CAAS;AAEX,sBAAQD,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,GAAyB,IAAzB,GAA8BH,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBE,IAF3C;AAGX,sBAAQJ,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,GAAyB,IAAzB,GAA8BH,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBE,IAH3C;AAIX,sBAAQJ,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,GAAyB,IAAzB,GAA8BH,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBE,IAJ3C;AAKX,sBAAQJ,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBC,QAAhB,GAAyB,IAAzB,GAA8BH,GAAG,CAACE,QAAJ,CAAa,CAAb,EAAgBE;AAL3C,aAAT;AAOAC,YAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;;AAdK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBeO,U;;;;;wEAAf,kBAA0Bb,GAA1B,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaH,GAAG,CAACgB,KAAJ,CAAUC,IAAV,EADb;;AAAA;AACDD,YAAAA,KADC;AAEDE,YAAAA,IAFC,GAEIF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBC,IAFrB;AAGEC,YAAAA,OAHF,GAGYnB,GAAG,CAACoB,IAHhB,CAGED,OAHF;;AAIL,oEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACmBrB,GAAG,CAACuB,IAAJ,CAASC,WAAT,CAAqB;AAACb,wBAAAA,QAAQ,EAAC,UAAV;AAAsBc,wBAAAA,UAAU,EAAC,IAAjC;AAAuCnB,wBAAAA,OAAO,EAAE,WAAhD;AAA6DM,wBAAAA,IAAI,EAAES;AAAnE,uBAArB,CADnB;;AAAA;AACOlB,sBAAAA,GADP;AAEC;AACAU,sBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BX,GAAG,CAACuB,EAAlC;AAEAb,sBAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD;;AAOAA,YAAAA,GAAG,CAACM,IAAJ,CAAS;AACP,sBAAOS;AADA,aAAT;;AAXK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "const token= \"xoxp-835473819876-837792425767-838148967462-a6d016a4d8b66f07baf85eeb865406e9\"\nconst {\n  WebClient\n}=require(\"@slack/web-api\");\n\nconst web = new WebClient(token);\n\nexport async function getLastMessage(req,res){\n  /*let users = await web.users.list();\n  console.log(users);*/\n  let msg = await web.conversations.history({\n    channel:\"CQKDXQWS0\",\n    limit : 4,\n  });\n  res.json({\n\n\"msg3\": msg.messages[3].username+\": \"+msg.messages[3].text,\n\"msg2\": msg.messages[2].username+\": \"+msg.messages[2].text,\n\"msg1\": msg.messages[1].username+\": \"+msg.messages[1].text,\n\"msg0\": msg.messages[0].username+\": \"+msg.messages[0].text\n  })\n  console.log(msg);\n}\nexport async function putMessage(req,res){\n  let users = await web.users.list();\n  var user=users.members[0].name;\n  const {message}= req.body;\n  (async () => {\n    const res = await web.chat.postMessage({username:\"mrejebsf\", link_names:true, channel: \"CQKDXQWS0\", text: message });\n    // `res` contains information about the posted message\n    console.log('Message sent: ', res.ts);\n\n    console.log(res);\n  })();\n  res.json({\n    \"name\":user\n  })\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/sms.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/sms.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/sms.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/sms.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "sms.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _sms = require(\"../controllers/sms.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/send', _sms.sendSMS);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtcy5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJwb3N0Iiwic2VuZFNNUyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOztBQURBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlBQSxNQUFNLENBQUNDLElBQVAsQ0FBZ0IsT0FBaEIsRUFBMEJDLFlBQTFCO2VBRWVGLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbmltcG9ydCB7c2VuZFNNU30gZnJvbSAnLi4vY29udHJvbGxlcnMvc21zLmNvbnRyb2xsZXInO1xuXG5cbnJvdXRlci5wb3N0ICAgKCAnL3NlbmQnICwgc2VuZFNNUyk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "sms.js"
      ],
      "names": [
        "router",
        "post",
        "sendSMS"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAgB,OAAhB,EAA0BC,YAA1B;eAEeF,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {sendSMS} from '../controllers/sms.controller';\n\n\nrouter.post   ( '/send' , sendSMS);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/sms.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/sms.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/sms.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/sms.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "sms.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendSMS = sendSMS;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar accountSid = 'ACd6d506454a4dd8ad756513b1eba9983c';\nvar authToken = 'a29e726be0912641452a6c70adb41382';\n\nfunction sendSMS(_x, _x2) {\n  return _sendSMS.apply(this, arguments);\n}\n\nfunction _sendSMS() {\n  _sendSMS = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, phoneNumber, sms, client;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _req$body = req.body, phoneNumber = _req$body.phoneNumber, sms = _req$body.sms;\n            client = require('twilio')(accountSid, authToken);\n            client.validationRequests.create({\n              friendlyName: 'My Home',\n              phoneNumber: phoneNumber\n            }).then(function (validation_request) {\n              return console.log(validation_request.friendlyName);\n            });\n            client.messages.create({\n              body: sms,\n              from: '+15106940839',\n              to: phoneNumber\n            }).then(function (message) {\n              return console.log(message.sid);\n            });\n            res.json({\n              \"message\": \"sms sent !\"\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sendSMS.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNtcy5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImFjY291bnRTaWQiLCJhdXRoVG9rZW4iLCJzZW5kU01TIiwicmVxIiwicmVzIiwiYm9keSIsInBob25lTnVtYmVyIiwic21zIiwiY2xpZW50IiwicmVxdWlyZSIsInZhbGlkYXRpb25SZXF1ZXN0cyIsImNyZWF0ZSIsImZyaWVuZGx5TmFtZSIsInRoZW4iLCJ2YWxpZGF0aW9uX3JlcXVlc3QiLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZXMiLCJmcm9tIiwidG8iLCJtZXNzYWdlIiwic2lkIiwianNvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxJQUFNQSxVQUFVLEdBQUcsb0NBQW5CO0FBQ0EsSUFBTUMsU0FBUyxHQUFHLGtDQUFsQjs7U0FFc0JDLE87Ozs7O3FFQUFmLGlCQUF1QkMsR0FBdkIsRUFBMkJDLEdBQTNCO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSx3QkFDb0JELEdBQUcsQ0FBQ0UsSUFEeEIsRUFDRUMsV0FERixhQUNFQSxXQURGLEVBQ2NDLEdBRGQsYUFDY0EsR0FEZDtBQUVDQyxZQUFBQSxNQUZELEdBRVVDLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JULFVBQWxCLEVBQTZCQyxTQUE3QixDQUZWO0FBSUxPLFlBQUFBLE1BQU0sQ0FBQ0Usa0JBQVAsQ0FDQ0MsTUFERCxDQUNRO0FBQUNDLGNBQUFBLFlBQVksRUFBRSxTQUFmO0FBQTBCTixjQUFBQSxXQUFXLEVBQUVBO0FBQXZDLGFBRFIsRUFFQ08sSUFGRCxDQUVNLFVBQUFDLGtCQUFrQjtBQUFBLHFCQUFJQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsa0JBQWtCLENBQUNGLFlBQS9CLENBQUo7QUFBQSxhQUZ4QjtBQUdESixZQUFBQSxNQUFNLENBQUNTLFFBQVAsQ0FDSU4sTUFESixDQUNXO0FBQ0xOLGNBQUFBLElBQUksRUFBRUUsR0FERDtBQUVMVyxjQUFBQSxJQUFJLEVBQUUsY0FGRDtBQUdMQyxjQUFBQSxFQUFFLEVBQUViO0FBSEMsYUFEWCxFQU1JTyxJQU5KLENBTVMsVUFBQU8sT0FBTztBQUFBLHFCQUFJTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUksT0FBTyxDQUFDQyxHQUFwQixDQUFKO0FBQUEsYUFOaEI7QUFRR2pCLFlBQUFBLEdBQUcsQ0FBQ2tCLElBQUosQ0FBUztBQUNQLHlCQUFVO0FBREgsYUFBVDs7QUFmRztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlUm9vdCI6Ii9ob21lL2VsaXNhYmV0aC9FbWVyZ2lub3YtSUkvc3JjL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFjY291bnRTaWQgPSAnQUNkNmQ1MDY0NTRhNGRkOGFkNzU2NTEzYjFlYmE5OTgzYyc7XG5jb25zdCBhdXRoVG9rZW4gPSAnYTI5ZTcyNmJlMDkxMjY0MTQ1MmE2YzcwYWRiNDEzODInO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZFNNUyhyZXEscmVzKXtcbiAgY29uc3Qge3Bob25lTnVtYmVyLHNtc309IHJlcS5ib2R5O1xuICBjb25zdCBjbGllbnQgPSByZXF1aXJlKCd0d2lsaW8nKShhY2NvdW50U2lkLGF1dGhUb2tlbik7XG5cbiAgY2xpZW50LnZhbGlkYXRpb25SZXF1ZXN0c1xuICAuY3JlYXRlKHtmcmllbmRseU5hbWU6ICdNeSBIb21lJywgcGhvbmVOdW1iZXI6IHBob25lTnVtYmVyfSlcbiAgLnRoZW4odmFsaWRhdGlvbl9yZXF1ZXN0ID0+IGNvbnNvbGUubG9nKHZhbGlkYXRpb25fcmVxdWVzdC5mcmllbmRseU5hbWUpKTtcbiBjbGllbnQubWVzc2FnZXNcbiAgICAuY3JlYXRlKHtcbiAgICAgICBib2R5OiBzbXMsXG4gICAgICAgZnJvbTogJysxNTEwNjk0MDgzOScsXG4gICAgICAgdG86IHBob25lTnVtYmVyXG4gICAgIH0pXG4gICAgLnRoZW4obWVzc2FnZSA9PiBjb25zb2xlLmxvZyhtZXNzYWdlLnNpZCkpO1xuXG4gICAgcmVzLmpzb24oe1xuICAgICAgXCJtZXNzYWdlXCI6XCJzbXMgc2VudCAhXCJcbiAgICB9KVxuXG59XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sms.controller.js"
      ],
      "names": [
        "accountSid",
        "authToken",
        "sendSMS",
        "req",
        "res",
        "body",
        "phoneNumber",
        "sms",
        "client",
        "require",
        "validationRequests",
        "create",
        "friendlyName",
        "then",
        "validation_request",
        "console",
        "log",
        "messages",
        "from",
        "to",
        "message",
        "sid",
        "json"
      ],
      "mappings": ";;;;;;;;;;;AAAA,IAAMA,UAAU,GAAG,oCAAnB;AACA,IAAMC,SAAS,GAAG,kCAAlB;;SAEsBC,O;;;;;qEAAf,iBAAuBC,GAAvB,EAA2BC,GAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,wBACoBD,GAAG,CAACE,IADxB,EACEC,WADF,aACEA,WADF,EACcC,GADd,aACcA,GADd;AAECC,YAAAA,MAFD,GAEUC,OAAO,CAAC,QAAD,CAAP,CAAkBT,UAAlB,EAA6BC,SAA7B,CAFV;AAILO,YAAAA,MAAM,CAACE,kBAAP,CACCC,MADD,CACQ;AAACC,cAAAA,YAAY,EAAE,SAAf;AAA0BN,cAAAA,WAAW,EAAEA;AAAvC,aADR,EAECO,IAFD,CAEM,UAAAC,kBAAkB;AAAA,qBAAIC,OAAO,CAACC,GAAR,CAAYF,kBAAkB,CAACF,YAA/B,CAAJ;AAAA,aAFxB;AAGDJ,YAAAA,MAAM,CAACS,QAAP,CACIN,MADJ,CACW;AACLN,cAAAA,IAAI,EAAEE,GADD;AAELW,cAAAA,IAAI,EAAE,cAFD;AAGLC,cAAAA,EAAE,EAAEb;AAHC,aADX,EAMIO,IANJ,CAMS,UAAAO,OAAO;AAAA,qBAAIL,OAAO,CAACC,GAAR,CAAYI,OAAO,CAACC,GAApB,CAAJ;AAAA,aANhB;AAQGjB,YAAAA,GAAG,CAACkB,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT;;AAfG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "const accountSid = 'ACd6d506454a4dd8ad756513b1eba9983c';\nconst authToken = 'a29e726be0912641452a6c70adb41382';\n\nexport async function sendSMS(req,res){\n  const {phoneNumber,sms}= req.body;\n  const client = require('twilio')(accountSid,authToken);\n\n  client.validationRequests\n  .create({friendlyName: 'My Home', phoneNumber: phoneNumber})\n  .then(validation_request => console.log(validation_request.friendlyName));\n client.messages\n    .create({\n       body: sms,\n       from: '+15106940839',\n       to: phoneNumber\n     })\n    .then(message => console.log(message.sid));\n\n    res.json({\n      \"message\":\"sms sent !\"\n    })\n\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/mail.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/mail.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/mail.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/mail.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "mail.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _mail = require(\"../controllers/mail.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/send', _mail.sendEmail);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWwuanMiXSwibmFtZXMiOlsicm91dGVyIiwicG9zdCIsInNlbmRFbWFpbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOztBQURBLElBQU1BLE1BQU0sR0FBRyxzQkFBZjtBQUlBQSxNQUFNLENBQUNDLElBQVAsQ0FBYyxPQUFkLEVBQXdCQyxlQUF4QjtlQUVlRixNIiwic291cmNlUm9vdCI6Ii9ob21lL2VsaXNhYmV0aC9FbWVyZ2lub3YtSUkvc3JjL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdleHByZXNzJztcblxuY29uc3Qgcm91dGVyID0gUm91dGVyKCk7XG5pbXBvcnQge3NlbmRFbWFpbH0gZnJvbSAnLi4vY29udHJvbGxlcnMvbWFpbC5jb250cm9sbGVyJztcblxuXG5yb3V0ZXIucG9zdCAoICcvc2VuZCcgLCBzZW5kRW1haWwpO1xuXG5leHBvcnQgZGVmYXVsdCByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "mail.js"
      ],
      "names": [
        "router",
        "post",
        "sendEmail"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAc,OAAd,EAAwBC,eAAxB;eAEeF,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {sendEmail} from '../controllers/mail.controller';\n\n\nrouter.post ( '/send' , sendEmail);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/mail.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/mail.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/mail.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/mail.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "mail.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendEmail = sendEmail;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar nodemailer = require(\"nodemailer\");\n\nfunction sendEmail(_x, _x2) {\n  return _sendEmail.apply(this, arguments);\n}\n\nfunction _sendEmail() {\n  _sendEmail = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var _req$body, reciever, subject, content, transporter, info;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"hello\");\n            _req$body = req.body, reciever = _req$body.reciever, subject = _req$body.subject, content = _req$body.content;\n            console.log(req.body); // async..await is not allowed in global scope, must use a wrapper\n            // Generate test SMTP service account from ethereal.email\n            // Only needed if you don't have a real mail account for testing\n            // create reusable transporter object using the default SMTP transport\n\n            transporter = nodemailer.createTransport({\n              host: 'smtp.gmail.com',\n              secure: true,\n              port: 465,\n              proxy: 'http://localhost:3000/',\n              auth: {\n                user: '',\n                pass: ''\n              }\n            });\n            transporter.verify(function (err, success) {\n              if (err) console.error(err);\n              console.log('Your config is correct');\n            });\n            console.log(\"proceding\"); // send mail with defined transport object\n\n            _context.next = 8;\n            return transporter.sendMail({\n              from: \"moncefrejeb1996@gmail.com\",\n              // sender address\n              to: reciever,\n              // list of receivers\n              subject: subject,\n              // Subject line\n              text: content // plain text body\n\n            });\n\n          case 8:\n            info = _context.sent;\n            console.log(\"proceding\");\n            res.json({\n              \"message\": \"Message sent\"\n            }); // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n            // Preview only available when sending through an Ethereal account\n            // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _sendEmail.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haWwuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJub2RlbWFpbGVyIiwicmVxdWlyZSIsInNlbmRFbWFpbCIsInJlcSIsInJlcyIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwicmVjaWV2ZXIiLCJzdWJqZWN0IiwiY29udGVudCIsInRyYW5zcG9ydGVyIiwiY3JlYXRlVHJhbnNwb3J0IiwiaG9zdCIsInNlY3VyZSIsInBvcnQiLCJwcm94eSIsImF1dGgiLCJ1c2VyIiwicGFzcyIsInZlcmlmeSIsImVyciIsInN1Y2Nlc3MiLCJlcnJvciIsInNlbmRNYWlsIiwiZnJvbSIsInRvIiwidGV4dCIsImluZm8iLCJqc29uIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLElBQU1BLFVBQVUsR0FBR0MsT0FBTyxDQUFDLFlBQUQsQ0FBMUI7O1NBRXNCQyxTOzs7Ozt1RUFBZixpQkFBeUJDLEdBQXpCLEVBQTZCQyxHQUE3QjtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0xDLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLE9BQVo7QUFESyx3QkFFNkJILEdBQUcsQ0FBQ0ksSUFGakMsRUFFRUMsUUFGRixhQUVFQSxRQUZGLEVBRVdDLE9BRlgsYUFFV0EsT0FGWCxFQUVtQkMsT0FGbkIsYUFFbUJBLE9BRm5CO0FBR0xMLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSCxHQUFHLENBQUNJLElBQWhCLEVBSEssQ0FJTDtBQUNBO0FBQ0E7QUFFQTs7QUFDTUksWUFBQUEsV0FURCxHQVNlWCxVQUFVLENBQUNZLGVBQVgsQ0FBMkI7QUFDM0NDLGNBQUFBLElBQUksRUFBQyxnQkFEc0M7QUFFM0NDLGNBQUFBLE1BQU0sRUFBQyxJQUZvQztBQUczQ0MsY0FBQUEsSUFBSSxFQUFDLEdBSHNDO0FBSTNDQyxjQUFBQSxLQUFLLEVBQUUsd0JBSm9DO0FBSzNDQyxjQUFBQSxJQUFJLEVBQUU7QUFDRkMsZ0JBQUFBLElBQUksRUFBRSxFQURKO0FBRUZDLGdCQUFBQSxJQUFJLEVBQUU7QUFGSjtBQUxxQyxhQUEzQixDQVRmO0FBb0JMUixZQUFBQSxXQUFXLENBQUNTLE1BQVosQ0FBbUIsVUFBQ0MsR0FBRCxFQUFNQyxPQUFOLEVBQWtCO0FBQ25DLGtCQUFJRCxHQUFKLEVBQVNoQixPQUFPLENBQUNrQixLQUFSLENBQWNGLEdBQWQ7QUFDVGhCLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0gsYUFIQztBQUlBRCxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxXQUFaLEVBeEJLLENBeUJMOztBQXpCSztBQUFBLG1CQTBCWUssV0FBVyxDQUFDYSxRQUFaLENBQXFCO0FBQ3BDQyxjQUFBQSxJQUFJLEVBQUMsMkJBRCtCO0FBQ0Y7QUFDbENDLGNBQUFBLEVBQUUsRUFBRWxCLFFBRmdDO0FBRXRCO0FBQ2RDLGNBQUFBLE9BQU8sRUFBRUEsT0FIMkI7QUFHbEI7QUFDbEJrQixjQUFBQSxJQUFJLEVBQUNqQixPQUorQixDQUl2Qjs7QUFKdUIsYUFBckIsQ0ExQlo7O0FBQUE7QUEwQkRrQixZQUFBQSxJQTFCQztBQWdDTHZCLFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFdBQVo7QUFFQUYsWUFBQUEsR0FBRyxDQUFDeUIsSUFBSixDQUFTO0FBQ1AseUJBQVU7QUFESCxhQUFULEVBbENLLENBcUNMO0FBRUE7QUFDQTs7QUF4Q0s7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlzYWJldGgvRW1lcmdpbm92LUlJL3NyYy9jb250cm9sbGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBub2RlbWFpbGVyID0gcmVxdWlyZShcIm5vZGVtYWlsZXJcIik7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzZW5kRW1haWwocmVxLHJlcyl7XG4gIGNvbnNvbGUubG9nKFwiaGVsbG9cIik7XG4gIGNvbnN0IHtyZWNpZXZlcixzdWJqZWN0LGNvbnRlbnR9PSByZXEuYm9keTtcbiAgY29uc29sZS5sb2cocmVxLmJvZHkpO1xuICAvLyBhc3luYy4uYXdhaXQgaXMgbm90IGFsbG93ZWQgaW4gZ2xvYmFsIHNjb3BlLCBtdXN0IHVzZSBhIHdyYXBwZXJcbiAgLy8gR2VuZXJhdGUgdGVzdCBTTVRQIHNlcnZpY2UgYWNjb3VudCBmcm9tIGV0aGVyZWFsLmVtYWlsXG4gIC8vIE9ubHkgbmVlZGVkIGlmIHlvdSBkb24ndCBoYXZlIGEgcmVhbCBtYWlsIGFjY291bnQgZm9yIHRlc3RpbmdcblxuICAvLyBjcmVhdGUgcmV1c2FibGUgdHJhbnNwb3J0ZXIgb2JqZWN0IHVzaW5nIHRoZSBkZWZhdWx0IFNNVFAgdHJhbnNwb3J0XG4gIGNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICAgICAgaG9zdDonc210cC5nbWFpbC5jb20nLFxuICAgICAgc2VjdXJlOnRydWUsXG4gICAgICBwb3J0OjQ2NSxcbiAgICAgIHByb3h5OiAnaHR0cDovL2xvY2FsaG9zdDozMDAwLycsXG4gICAgICBhdXRoOiB7XG4gICAgICAgICAgdXNlcjogJycsXG4gICAgICAgICAgcGFzczogJydcbiAgICAgIH0sXG5cbiAgfSk7XG4gIHRyYW5zcG9ydGVyLnZlcmlmeSgoZXJyLCBzdWNjZXNzKSA9PiB7XG4gICAgaWYgKGVycikgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIGNvbnNvbGUubG9nKCdZb3VyIGNvbmZpZyBpcyBjb3JyZWN0Jyk7XG59KTtcbiAgY29uc29sZS5sb2coXCJwcm9jZWRpbmdcIik7XG4gIC8vIHNlbmQgbWFpbCB3aXRoIGRlZmluZWQgdHJhbnNwb3J0IG9iamVjdFxuICBsZXQgaW5mbyA9IGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKHtcbiAgICBmcm9tOlwibW9uY2VmcmVqZWIxOTk2QGdtYWlsLmNvbVwiLCAvLyBzZW5kZXIgYWRkcmVzc1xuICAgIHRvOiByZWNpZXZlciwgLy8gbGlzdCBvZiByZWNlaXZlcnNcbiAgICBzdWJqZWN0OiBzdWJqZWN0LCAvLyBTdWJqZWN0IGxpbmVcbiAgICB0ZXh0OmNvbnRlbnQgLy8gcGxhaW4gdGV4dCBib2R5XG4gIH0pO1xuICBjb25zb2xlLmxvZyhcInByb2NlZGluZ1wiKTtcblxuICByZXMuanNvbih7XG4gICAgXCJtZXNzYWdlXCI6XCJNZXNzYWdlIHNlbnRcIlxuICB9KTtcbiAgLy8gTWVzc2FnZSBzZW50OiA8YjY1OGY4Y2EtNjI5Ni1jY2Y0LTgzMDYtODdkNTdhMGI0MzIxQGV4YW1wbGUuY29tPlxuXG4gIC8vIFByZXZpZXcgb25seSBhdmFpbGFibGUgd2hlbiBzZW5kaW5nIHRocm91Z2ggYW4gRXRoZXJlYWwgYWNjb3VudFxuICAvLyBQcmV2aWV3IFVSTDogaHR0cHM6Ly9ldGhlcmVhbC5lbWFpbC9tZXNzYWdlL1dhUUtNZ0tkZHhRRG9vdS4uLlxufVxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "mail.controller.js"
      ],
      "names": [
        "nodemailer",
        "require",
        "sendEmail",
        "req",
        "res",
        "console",
        "log",
        "body",
        "reciever",
        "subject",
        "content",
        "transporter",
        "createTransport",
        "host",
        "secure",
        "port",
        "proxy",
        "auth",
        "user",
        "pass",
        "verify",
        "err",
        "success",
        "error",
        "sendMail",
        "from",
        "to",
        "text",
        "info",
        "json"
      ],
      "mappings": ";;;;;;;;;;;AAAA,IAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;SAEsBC,S;;;;;uEAAf,iBAAyBC,GAAzB,EAA6BC,GAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AADK,wBAE6BH,GAAG,CAACI,IAFjC,EAEEC,QAFF,aAEEA,QAFF,EAEWC,OAFX,aAEWA,OAFX,EAEmBC,OAFnB,aAEmBA,OAFnB;AAGLL,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB,EAHK,CAIL;AACA;AACA;AAEA;;AACMI,YAAAA,WATD,GASeX,UAAU,CAACY,eAAX,CAA2B;AAC3CC,cAAAA,IAAI,EAAC,gBADsC;AAE3CC,cAAAA,MAAM,EAAC,IAFoC;AAG3CC,cAAAA,IAAI,EAAC,GAHsC;AAI3CC,cAAAA,KAAK,EAAE,wBAJoC;AAK3CC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,IAAI,EAAE,EADJ;AAEFC,gBAAAA,IAAI,EAAE;AAFJ;AALqC,aAA3B,CATf;AAoBLR,YAAAA,WAAW,CAACS,MAAZ,CAAmB,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACnC,kBAAID,GAAJ,EAAShB,OAAO,CAACkB,KAAR,CAAcF,GAAd;AACThB,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,aAHC;AAIAD,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAxBK,CAyBL;;AAzBK;AAAA,mBA0BYK,WAAW,CAACa,QAAZ,CAAqB;AACpCC,cAAAA,IAAI,EAAC,2BAD+B;AACF;AAClCC,cAAAA,EAAE,EAAElB,QAFgC;AAEtB;AACdC,cAAAA,OAAO,EAAEA,OAH2B;AAGlB;AAClBkB,cAAAA,IAAI,EAACjB,OAJ+B,CAIvB;;AAJuB,aAArB,CA1BZ;;AAAA;AA0BDkB,YAAAA,IA1BC;AAgCLvB,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEAF,YAAAA,GAAG,CAACyB,IAAJ,CAAS;AACP,yBAAU;AADH,aAAT,EAlCK,CAqCL;AAEA;AACA;;AAxCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "const nodemailer = require(\"nodemailer\");\n\nexport async function sendEmail(req,res){\n  console.log(\"hello\");\n  const {reciever,subject,content}= req.body;\n  console.log(req.body);\n  // async..await is not allowed in global scope, must use a wrapper\n  // Generate test SMTP service account from ethereal.email\n  // Only needed if you don't have a real mail account for testing\n\n  // create reusable transporter object using the default SMTP transport\n  const transporter = nodemailer.createTransport({\n      host:'smtp.gmail.com',\n      secure:true,\n      port:465,\n      proxy: 'http://localhost:3000/',\n      auth: {\n          user: '',\n          pass: ''\n      },\n\n  });\n  transporter.verify((err, success) => {\n    if (err) console.error(err);\n    console.log('Your config is correct');\n});\n  console.log(\"proceding\");\n  // send mail with defined transport object\n  let info = await transporter.sendMail({\n    from:\"moncefrejeb1996@gmail.com\", // sender address\n    to: reciever, // list of receivers\n    subject: subject, // Subject line\n    text:content // plain text body\n  });\n  console.log(\"proceding\");\n\n  res.json({\n    \"message\":\"Message sent\"\n  });\n  // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\n\n  // Preview only available when sending through an Ethereal account\n  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/mastodon.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/mastodon.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/mastodon.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/mastodon.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "mastodon.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _mastodon = require(\"../controllers/mastodon.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/send', _mastodon.putMessage); //router.get  ( '/get', newMessage);\n\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hc3RvZG9uLmpzIl0sIm5hbWVzIjpbInJvdXRlciIsInBvc3QiLCJwdXRNZXNzYWdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBR0E7O0FBREEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZLE9BQVosRUFBc0JDLG9CQUF0QixFLENBRUE7O2VBRWVGLE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbmltcG9ydCB7cHV0TWVzc2FnZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvbWFzdG9kb24uY29udHJvbGxlcic7XG5cblxucm91dGVyLnBvc3QoJy9zZW5kJyAsIHB1dE1lc3NhZ2UpO1xuXG4vL3JvdXRlci5nZXQgICggJy9nZXQnLCBuZXdNZXNzYWdlKTtcblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "mastodon.js"
      ],
      "names": [
        "router",
        "post",
        "putMessage"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAY,OAAZ,EAAsBC,oBAAtB,E,CAEA;;eAEeF,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {putMessage} from '../controllers/mastodon.controller';\n\n\nrouter.post('/send' , putMessage);\n\n//router.get  ( '/get', newMessage);\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/mastodon.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/mastodon.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/mastodon.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/mastodon.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "mastodon.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.putMessage = putMessage;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Mastodon = require('mastodon-api');\n\nvar http = require('http');\n\nvar fs = require('fs'); // Chargement du fichier index.html affiché au client\n\n\nvar server = http.createServer(function (req, res) {\n  fs.readFile('./../public/index.html', 'utf-8', function (error, content) {\n    res.writeHead(200, {\n      \"Content-Type\": \"text/html\"\n    });\n    res.end(content);\n  });\n}); // Chargement de socket.io\n\nvar io = require('socket.io').listen(server);\n\nvar isRecievedMessage = true; // Quand un client se connecte, on le note dans la console\n\nserver.listen(8000, function () {\n  console.log(new Date() + ' Server is listening on port 8080');\n});\nvar M = new Mastodon({\n  client_key: \"sbkjjlFE2FXYL5NSU5M-aBG6wDuN7nKMusvTeTCU6L4\",\n  client_secret: \"I_NrWXxS4TNcL-AQhuGacStY0rymQmOTdDYdwZus-bk\",\n  access_token: \"ftD6_-7GUyICadICrUlhDFCBqCmJ8QBKS_4QBT5Y1Cg\",\n  timeout_ms: 60 * 1000\n});\n\nfunction putMessage(_x, _x2) {\n  return _putMessage.apply(this, arguments);\n}\n\nfunction _putMessage() {\n  _putMessage = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var params;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            isRecievedMessage = false;\n            params = {\n              status: req.body.message\n            };\n            M.post('statuses', params, function (error, data) {\n              if (error) {\n                console.error(error);\n              } else {\n                console.log(\"success, id: \" + data.id + \" \");\n                console.log(data);\n                var username = data.account.username;\n                var avatar = data.account.avatar;\n                console.log(username);\n                res.json({\n                  \"name\": username,\n                  \"avatar\": avatar,\n                  \"sender\": true\n                });\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _putMessage.apply(this, arguments);\n}\n\nvar listener = M.stream('streaming/user');\nvar value = null;\nvar avatar = null;\nvar history = new Map();\nvar avatars = [];\nlistener.on('message', function (msg) {\n  if (msg.data.account != undefined) {\n    value = msg.data.account.username + \":\" + msg.data.content;\n    avatar = msg.data.account.avatar;\n  } //console.log(value);\n  //newMessage(msg);\n\n\n  if (value != null) {\n    if (isRecievedMessage == true) {\n      history.set(value, true);\n      avatars.push(avatar);\n    } else {\n      history.set(value, false);\n      avatars.push(avatar);\n    } //  history = history.slice(-10);\n\n\n    io.sockets.emit('message', {\n      value: value,\n      avatar: avatar\n    });\n    console.log(\"done\");\n    console.log(history);\n    isRecievedMessage = true;\n  }\n});\nlistener.on('error', function (err) {\n  return console.log(err);\n});\nio.sockets.on('connection', function (socket) {\n  if (value != null) {\n    console.log(value);\n    var i = 0;\n\n    var _iterator = _createForOfIteratorHelper(history.keys()),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var k = _step.value;\n        socket.emit('message', {\n          value: k,\n          avatar: avatars[i],\n          sender: history.get(k)\n        });\n        i++;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n}); // const server = http.createServer();\n//\n// server.listen(8080, function() {\n//     console.log((new Date()) + ' Server is listening on port 8080');\n// });\n// const wsServer = new WebSocketServer({\n//     httpServer: server,\n// });\n//\n// wsServer.on('request', function(request) {\n//   console.log(\"hy\");\n//   const connection = request.accept('echo-protocol', request.origin);\n//\n//     console.log((new Date()) + ' Connection accepted.');\n//     connection.on('message', function(message) {\n//           console.log('Received Message: ' + message.utf8Data);\n//           connection.sendUTF(\"hello\");\n//\n//     });\n//     connection.on('close', function(reasonCode, description) {\n//         console.log((new Date()) + ' Peer ' + connection.remoteAddress + ' disconnected.');\n//     });\n// });\n// export async function newMessage(msg,req,res){\n//   res.json({\n//     \"new\":msg.data.account.username+\": \"+msg.data.content\n//   })*/\n//}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "mastodon.controller.js"
      ],
      "names": [
        "Mastodon",
        "require",
        "http",
        "fs",
        "server",
        "createServer",
        "req",
        "res",
        "readFile",
        "error",
        "content",
        "writeHead",
        "end",
        "io",
        "listen",
        "isRecievedMessage",
        "console",
        "log",
        "Date",
        "M",
        "client_key",
        "client_secret",
        "access_token",
        "timeout_ms",
        "putMessage",
        "params",
        "status",
        "body",
        "message",
        "post",
        "data",
        "id",
        "username",
        "account",
        "avatar",
        "json",
        "listener",
        "stream",
        "value",
        "history",
        "Map",
        "avatars",
        "on",
        "msg",
        "undefined",
        "set",
        "push",
        "sockets",
        "emit",
        "err",
        "socket",
        "i",
        "keys",
        "k",
        "sender",
        "get"
      ],
      "mappings": ";;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAACC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,EAAE,GAAGF,OAAO,CAAC,IAAD,CAAhB,C,CAEA;;;AACA,IAAIG,MAAM,GAAGF,IAAI,CAACG,YAAL,CAAkB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC9CJ,EAAAA,EAAE,CAACK,QAAH,CAAY,wBAAZ,EAAsC,OAAtC,EAA+C,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;AACpEH,IAAAA,GAAG,CAACI,SAAJ,CAAc,GAAd,EAAmB;AAAC,sBAAgB;AAAjB,KAAnB;AACAJ,IAAAA,GAAG,CAACK,GAAJ,CAAQF,OAAR;AACH,GAHD;AAIH,CALY,CAAb,C,CAMA;;AACA,IAAIG,EAAE,GAAGZ,OAAO,CAAC,WAAD,CAAP,CAAqBa,MAArB,CAA4BV,MAA5B,CAAT;;AACA,IAAIW,iBAAiB,GAAC,IAAtB,C,CACA;;AAGAX,MAAM,CAACU,MAAP,CAAc,IAAd,EAAoB,YAAW;AAC3BE,EAAAA,OAAO,CAACC,GAAR,CAAa,IAAIC,IAAJ,EAAD,GAAe,mCAA3B;AACH,CAFD;AAGA,IAAMC,CAAC,GAAC,IAAInB,QAAJ,CAAa;AAEnBoB,EAAAA,UAAU,EAAE,6CAFO;AAGnBC,EAAAA,aAAa,EAAE,6CAHI;AAInBC,EAAAA,YAAY,EAAE,6CAJK;AAKnBC,EAAAA,UAAU,EAAE,KAAG;AALI,CAAb,CAAR;;SASsBC,U;;;;;wEAAf,iBAA0BlB,GAA1B,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACLQ,YAAAA,iBAAiB,GAAC,KAAlB;AACMU,YAAAA,MAFD,GAEQ;AACXC,cAAAA,MAAM,EAACpB,GAAG,CAACqB,IAAJ,CAASC;AADL,aAFR;AAKLT,YAAAA,CAAC,CAACU,IAAF,CAAO,UAAP,EAAkBJ,MAAlB,EAAyB,UAAChB,KAAD,EAAOqB,IAAP,EAAc;AACrC,kBAAIrB,KAAJ,EAAW;AACPO,gBAAAA,OAAO,CAACP,KAAR,CAAcA,KAAd;AACH,eAFD,MAEM;AACJO,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAgBa,IAAI,CAACC,EAArB,GAAwB,GAApC;AACAf,gBAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;AACA,oBAAIE,QAAQ,GAACF,IAAI,CAACG,OAAL,CAAaD,QAA1B;AACA,oBAAIE,MAAM,GAACJ,IAAI,CAACG,OAAL,CAAaC,MAAxB;AACAlB,gBAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ;AACAzB,gBAAAA,GAAG,CAAC4B,IAAJ,CAAS;AACP,0BAAOH,QADA;AAEP,4BAASE,MAFF;AAGP,4BAAS;AAHF,iBAAT;AAKD;AACF,aAfD;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAyBL,IAAME,QAAQ,GAAGjB,CAAC,CAACkB,MAAF,CAAS,gBAAT,CAAjB;AACA,IAAIC,KAAK,GAAC,IAAV;AACA,IAAIJ,MAAM,GAAC,IAAX;AACA,IAAIK,OAAO,GAAE,IAAIC,GAAJ,EAAb;AACA,IAAIC,OAAO,GAAC,EAAZ;AACAL,QAAQ,CAACM,EAAT,CAAY,SAAZ,EAAuB,UAAAC,GAAG,EAAG;AAC3B,MAAIA,GAAG,CAACb,IAAJ,CAASG,OAAT,IAAkBW,SAAtB,EAAiC;AAC/BN,IAAAA,KAAK,GAACK,GAAG,CAACb,IAAJ,CAASG,OAAT,CAAiBD,QAAjB,GAA0B,GAA1B,GAA8BW,GAAG,CAACb,IAAJ,CAASpB,OAA7C;AACAwB,IAAAA,MAAM,GAACS,GAAG,CAACb,IAAJ,CAASG,OAAT,CAAiBC,MAAxB;AAED,GAL0B,CAM3B;AACA;;;AACA,MAAII,KAAK,IAAE,IAAX,EAAiB;AACf,QAAIvB,iBAAiB,IAAE,IAAvB,EAA6B;AAC3BwB,MAAAA,OAAO,CAACM,GAAR,CAAYP,KAAZ,EAAkB,IAAlB;AACAG,MAAAA,OAAO,CAACK,IAAR,CAAaZ,MAAb;AACD,KAHD,MAGM;AACJK,MAAAA,OAAO,CAACM,GAAR,CAAYP,KAAZ,EAAkB,KAAlB;AACAG,MAAAA,OAAO,CAACK,IAAR,CAAaZ,MAAb;AAED,KARc,CAUjB;;;AACErB,IAAAA,EAAE,CAACkC,OAAH,CAAWC,IAAX,CAAgB,SAAhB,EAA0B;AAACV,MAAAA,KAAK,EAACA,KAAP;AAAaJ,MAAAA,MAAM,EAACA;AAApB,KAA1B;AAEAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYsB,OAAZ;AACAxB,IAAAA,iBAAiB,GAAC,IAAlB;AACD;AAEF,CA1BD;AA6BAqB,QAAQ,CAACM,EAAT,CAAY,OAAZ,EAAqB,UAAAO,GAAG;AAAA,SAAIjC,OAAO,CAACC,GAAR,CAAYgC,GAAZ,CAAJ;AAAA,CAAxB;AAEFpC,EAAE,CAACkC,OAAH,CAAWL,EAAX,CAAc,YAAd,EAA4B,UAAUQ,MAAV,EAAkB;AAC1C,MAAIZ,KAAK,IAAE,IAAX,EAAiB;AACftB,IAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAZ;AACA,QAAIa,CAAC,GAAC,CAAN;;AAFe,+CAGDZ,OAAO,CAACa,IAAR,EAHC;AAAA;;AAAA;AAGf,0DAA8B;AAAA,YAArBC,CAAqB;AAC5BH,QAAAA,MAAM,CAACF,IAAP,CAAY,SAAZ,EAAsB;AAACV,UAAAA,KAAK,EAACe,CAAP;AAASnB,UAAAA,MAAM,EAACO,OAAO,CAACU,CAAD,CAAvB;AAA2BG,UAAAA,MAAM,EAACf,OAAO,CAACgB,GAAR,CAAYF,CAAZ;AAAlC,SAAtB;AACAF,QAAAA,CAAC;AACF;AANc;AAAA;AAAA;AAAA;AAAA;AAOhB;AAEF,CAVH,E,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;AACA",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "const Mastodon=require('mastodon-api');\nvar http = require('http');\nvar fs = require('fs');\n\n// Chargement du fichier index.html affiché au client\nvar server = http.createServer(function(req, res) {\n    fs.readFile('./../public/index.html', 'utf-8', function(error, content) {\n        res.writeHead(200, {\"Content-Type\": \"text/html\"});\n        res.end(content);\n    });\n});\n// Chargement de socket.io\nvar io = require('socket.io').listen(server);\nvar isRecievedMessage=true;\n// Quand un client se connecte, on le note dans la console\n\n\nserver.listen(8000, function() {\n    console.log((new Date()) + ' Server is listening on port 8080');\n});\nconst M=new Mastodon({\n\n  client_key: \"sbkjjlFE2FXYL5NSU5M-aBG6wDuN7nKMusvTeTCU6L4\" ,\n  client_secret: \"I_NrWXxS4TNcL-AQhuGacStY0rymQmOTdDYdwZus-bk\" ,\n  access_token: \"ftD6_-7GUyICadICrUlhDFCBqCmJ8QBKS_4QBT5Y1Cg\",\n  timeout_ms: 60*1000\n})\n\n\nexport async function putMessage(req,res){\n  isRecievedMessage=false;\n  const params={\n    status:req.body.message\n  }\n  M.post('statuses',params,(error,data)=>{\n    if (error) {\n        console.error(error);\n    }else {\n      console.log(\"success, id: \"+data.id+\" \");\n      console.log(data);\n      var username=data.account.username;\n      var avatar=data.account.avatar\n      console.log(username);\n      res.json({\n        \"name\":username,\n        \"avatar\":avatar,\n        \"sender\":true\n      })\n    }\n  })\n}\n\n\n\n  const listener = M.stream('streaming/user')\n  var value=null;\n  var avatar=null;\n  var history= new Map();\n  var avatars=[]\n  listener.on('message', msg =>{\n    if (msg.data.account!=undefined) {\n      value=msg.data.account.username+\":\"+msg.data.content;\n      avatar=msg.data.account.avatar;\n\n    }\n    //console.log(value);\n    //newMessage(msg);\n    if (value!=null) {\n      if (isRecievedMessage==true) {\n        history.set(value,true);\n        avatars.push(avatar)\n      }else {\n        history.set(value,false);\n        avatars.push(avatar)\n\n      }\n\n    //  history = history.slice(-10);\n      io.sockets.emit('message',{value:value,avatar:avatar});\n\n      console.log(\"done\");\n      console.log(history);\n      isRecievedMessage=true\n    }\n\n  });\n\n\n  listener.on('error', err => console.log(err));\n\nio.sockets.on('connection', function (socket) {\n    if (value!=null) {\n      console.log(value);\n      var i=0\n      for (var k of history.keys()) {\n        socket.emit('message',{value:k,avatar:avatars[i],sender:history.get(k)});\n        i++\n      }\n    }\n\n  });\n\n\n// const server = http.createServer();\n//\n// server.listen(8080, function() {\n//     console.log((new Date()) + ' Server is listening on port 8080');\n// });\n// const wsServer = new WebSocketServer({\n//     httpServer: server,\n// });\n//\n// wsServer.on('request', function(request) {\n//   console.log(\"hy\");\n//   const connection = request.accept('echo-protocol', request.origin);\n//\n//     console.log((new Date()) + ' Connection accepted.');\n//     connection.on('message', function(message) {\n//           console.log('Received Message: ' + message.utf8Data);\n//           connection.sendUTF(\"hello\");\n//\n//     });\n//     connection.on('close', function(reasonCode, description) {\n//         console.log((new Date()) + ' Peer ' + connection.remoteAddress + ' disconnected.');\n//     });\n// });\n\n  // export async function newMessage(msg,req,res){\n  //   res.json({\n  //     \"new\":msg.data.account.username+\": \"+msg.data.content\n  //   })*/\n  //}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/routes/zip.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/routes/zip.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/routes/zip.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/routes/zip.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
        "sourceFileName": "zip.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = require(\"express\");\n\nvar _zip = require(\"../controllers/zip.controller\");\n\nvar router = (0, _express.Router)();\nrouter.post('/', _zip.zip_Code);\nrouter.post('/unZip', _zip.unZip_Code);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInppcC5qcyJdLCJuYW1lcyI6WyJyb3V0ZXIiLCJwb3N0IiwiemlwX0NvZGUiLCJ1blppcF9Db2RlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBR0E7O0FBREEsSUFBTUEsTUFBTSxHQUFHLHNCQUFmO0FBSUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFhLEdBQWIsRUFBa0JDLGFBQWxCO0FBQ0FGLE1BQU0sQ0FBQ0MsSUFBUCxDQUFhLFFBQWIsRUFBdUJFLGVBQXZCO2VBR2VILE0iLCJzb3VyY2VSb290IjoiL2hvbWUvZWxpc2FiZXRoL0VtZXJnaW5vdi1JSS9zcmMvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gJ2V4cHJlc3MnO1xuXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcbmltcG9ydCB7emlwX0NvZGUsdW5aaXBfQ29kZX0gZnJvbSAnLi4vY29udHJvbGxlcnMvemlwLmNvbnRyb2xsZXInO1xuXG5cbnJvdXRlci5wb3N0KCAnLycsIHppcF9Db2RlKTtcbnJvdXRlci5wb3N0KCAnL3VuWmlwJywgdW5aaXBfQ29kZSk7XG5cblxuZXhwb3J0IGRlZmF1bHQgcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "zip.js"
      ],
      "names": [
        "router",
        "post",
        "zip_Code",
        "unZip_Code"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AADA,IAAMA,MAAM,GAAG,sBAAf;AAIAA,MAAM,CAACC,IAAP,CAAa,GAAb,EAAkBC,aAAlB;AACAF,MAAM,CAACC,IAAP,CAAa,QAAb,EAAuBE,eAAvB;eAGeH,M",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/routes/",
      "sourcesContent": [
        "import { Router } from 'express';\n\nconst router = Router();\nimport {zip_Code,unZip_Code} from '../controllers/zip.controller';\n\n\nrouter.post( '/', zip_Code);\nrouter.post( '/unZip', unZip_Code);\n\n\nexport default router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259815
  },
  "{\"sourceRoot\":\"/home/elisabeth/Emerginov-II/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/Emerginov-II\",\"filename\":\"/home/elisabeth/Emerginov-II/src/controllers/zip.controller.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/Emerginov-II\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/Emerginov-II",
      "filename": "/home/elisabeth/Emerginov-II/src/controllers/zip.controller.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/Emerginov-II",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/Emerginov-II/src/controllers/zip.controller.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/Emerginov-II/src/controllers/zip.controller.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
        "sourceFileName": "zip.controller.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.zip_Code = zip_Code;\nexports.unZip_Code = unZip_Code;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar fs = require('fs');\n\nvar archiver = require('archiver');\n\nvar zlib = require('zlib');\n\nfunction zip_Code(_x, _x2) {\n  return _zip_Code.apply(this, arguments);\n}\n\nfunction _zip_Code() {\n  _zip_Code = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var output, archive;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // create a file to stream archive data to.\n            output = fs.createWriteStream(__dirname + '/zipped/resultat.zip');\n            archive = archiver('zip', {\n              zlib: {\n                level: 9\n              } // Sets the compression level.\n\n            }); // listen for all archive data to be written\n            // 'close' event is fired only when a file descriptor is involved\n\n            output.on('close', function () {\n              console.log(archive.pointer() + ' total bytes');\n              console.log('archiver has been finalized and the output file descriptor has closed.');\n            });\n            output.on('end', function () {\n              console.log('Data has been drained');\n            }); // good practice to catch warnings (ie stat failures and other non-blocking errors)\n\n            archive.on('warning', function (err) {\n              if (err.code === 'ENOENT') {// log warning\n              } else {\n                // throw error\n                throw err;\n              }\n            }); // good practice to catch this error explicitly\n\n            archive.on('error', function (err) {\n              throw err;\n            }); // pipe archive data to the file\n\n            archive.pipe(output); // append files from a sub-directory and naming it `new-subdir` within the archive\n\n            archive.directory('projects/project1', 'Project'); // finalize the archive (ie we are done appending files but streams have to finish yet)\n            // 'close', 'end' or 'finish' may be fired right after calling this method so register to them beforehand\n\n            archive.finalize();\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _zip_Code.apply(this, arguments);\n}\n\nfunction unZip_Code(_x3, _x4) {\n  return _unZip_Code.apply(this, arguments);\n}\n\nfunction _unZip_Code() {\n  _unZip_Code = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var fileContents, writeStream, unzip;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fileContents = fs.createReadStream(__dirname + '/zipped/resultat.zip');\n            writeStream = fs.createWriteStream(__dirname + '/unzipped/Projet'); //  fileContents._readableState.buffer.head='content-encoding'\n            // switch (response.headers['content-encoding']) {\n            //   // or, just use zlib.createUnzip() to handle both cases\n            //   case 'gzip':\n            //     response.pipe(zlib.createGunzip()).pipe(output);\n            //     break;\n            //   case 'deflate':\n            //     response.pipe(zlib.createInflate()).pipe(output);\n            //     break;\n            //   default:\n            //     response.pipe(output);\n            //     break;\n            // }\n\n            unzip = zlib.createGunzip();\n            fileContents.pipe(unzip).pipe(writeStream);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _unZip_Code.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInppcC5jb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsImFyY2hpdmVyIiwiemxpYiIsInppcF9Db2RlIiwicmVxIiwicmVzIiwib3V0cHV0IiwiY3JlYXRlV3JpdGVTdHJlYW0iLCJfX2Rpcm5hbWUiLCJhcmNoaXZlIiwibGV2ZWwiLCJvbiIsImNvbnNvbGUiLCJsb2ciLCJwb2ludGVyIiwiZXJyIiwiY29kZSIsInBpcGUiLCJkaXJlY3RvcnkiLCJmaW5hbGl6ZSIsInVuWmlwX0NvZGUiLCJmaWxlQ29udGVudHMiLCJjcmVhdGVSZWFkU3RyZWFtIiwid3JpdGVTdHJlYW0iLCJ1bnppcCIsImNyZWF0ZUd1bnppcCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQ0EsSUFBSUEsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBRCxDQUFoQjs7QUFDQSxJQUFJQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLElBQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O1NBQ3NCRyxROzs7OztzRUFBZixpQkFBd0JDLEdBQXhCLEVBQTRCQyxHQUE1QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTDtBQUNJQyxZQUFBQSxNQUZDLEdBRVFQLEVBQUUsQ0FBQ1EsaUJBQUgsQ0FBcUJDLFNBQVMsR0FBRyxzQkFBakMsQ0FGUjtBQUdEQyxZQUFBQSxPQUhDLEdBR1NSLFFBQVEsQ0FBQyxLQUFELEVBQVE7QUFDNUJDLGNBQUFBLElBQUksRUFBRTtBQUFFUSxnQkFBQUEsS0FBSyxFQUFFO0FBQVQsZUFEc0IsQ0FDVDs7QUFEUyxhQUFSLENBSGpCLEVBTUw7QUFDQTs7QUFDQUosWUFBQUEsTUFBTSxDQUFDSyxFQUFQLENBQVUsT0FBVixFQUFtQixZQUFXO0FBQzVCQyxjQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUosT0FBTyxDQUFDSyxPQUFSLEtBQW9CLGNBQWhDO0FBQ0FGLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHdFQUFaO0FBQ0QsYUFIRDtBQUlBUCxZQUFBQSxNQUFNLENBQUNLLEVBQVAsQ0FBVSxLQUFWLEVBQWlCLFlBQVc7QUFDMUJDLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVCQUFaO0FBQ0QsYUFGRCxFQVpLLENBZUw7O0FBQ0FKLFlBQUFBLE9BQU8sQ0FBQ0UsRUFBUixDQUFXLFNBQVgsRUFBc0IsVUFBU0ksR0FBVCxFQUFjO0FBQ2xDLGtCQUFJQSxHQUFHLENBQUNDLElBQUosS0FBYSxRQUFqQixFQUEyQixDQUN6QjtBQUNELGVBRkQsTUFFTztBQUNMO0FBQ0Esc0JBQU1ELEdBQU47QUFDRDtBQUNGLGFBUEQsRUFoQkssQ0F3Qkw7O0FBQ0FOLFlBQUFBLE9BQU8sQ0FBQ0UsRUFBUixDQUFXLE9BQVgsRUFBb0IsVUFBU0ksR0FBVCxFQUFjO0FBQ2hDLG9CQUFNQSxHQUFOO0FBQ0QsYUFGRCxFQXpCSyxDQTRCTDs7QUFDQU4sWUFBQUEsT0FBTyxDQUFDUSxJQUFSLENBQWFYLE1BQWIsRUE3QkssQ0E4Qkw7O0FBQ0FHLFlBQUFBLE9BQU8sQ0FBQ1MsU0FBUixDQUFrQixtQkFBbEIsRUFBdUMsU0FBdkMsRUEvQkssQ0FnQ0w7QUFDQTs7QUFDQVQsWUFBQUEsT0FBTyxDQUFDVSxRQUFSOztBQWxDSztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBd0NlQyxVOzs7Ozt3RUFBZixrQkFBMEJoQixHQUExQixFQUE4QkMsR0FBOUI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0NnQixZQUFBQSxZQURELEdBQ2dCdEIsRUFBRSxDQUFDdUIsZ0JBQUgsQ0FBb0JkLFNBQVMsR0FBQyxzQkFBOUIsQ0FEaEI7QUFFQ2UsWUFBQUEsV0FGRCxHQUVleEIsRUFBRSxDQUFDUSxpQkFBSCxDQUFxQkMsU0FBUyxHQUFDLGtCQUEvQixDQUZmLEVBR0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU1nQixZQUFBQSxLQWpCRCxHQWlCU3RCLElBQUksQ0FBQ3VCLFlBQUwsRUFqQlQ7QUFrQkxKLFlBQUFBLFlBQVksQ0FBQ0osSUFBYixDQUFrQk8sS0FBbEIsRUFBeUJQLElBQXpCLENBQThCTSxXQUE5Qjs7QUFsQks7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRyIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlzYWJldGgvRW1lcmdpbm92LUlJL3NyYy9jb250cm9sbGVycy8iLCJzb3VyY2VzQ29udGVudCI6WyJcbnZhciBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG52YXIgYXJjaGl2ZXIgPSByZXF1aXJlKCdhcmNoaXZlcicpO1xuY29uc3QgemxpYiA9IHJlcXVpcmUoJ3psaWInKTtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB6aXBfQ29kZShyZXEscmVzKXtcbiAgLy8gY3JlYXRlIGEgZmlsZSB0byBzdHJlYW0gYXJjaGl2ZSBkYXRhIHRvLlxuICB2YXIgb3V0cHV0ID0gZnMuY3JlYXRlV3JpdGVTdHJlYW0oX19kaXJuYW1lICsgJy96aXBwZWQvcmVzdWx0YXQuemlwJyk7XG4gIHZhciBhcmNoaXZlID0gYXJjaGl2ZXIoJ3ppcCcsIHtcbiAgICB6bGliOiB7IGxldmVsOiA5IH0gLy8gU2V0cyB0aGUgY29tcHJlc3Npb24gbGV2ZWwuXG4gIH0pO1xuICAvLyBsaXN0ZW4gZm9yIGFsbCBhcmNoaXZlIGRhdGEgdG8gYmUgd3JpdHRlblxuICAvLyAnY2xvc2UnIGV2ZW50IGlzIGZpcmVkIG9ubHkgd2hlbiBhIGZpbGUgZGVzY3JpcHRvciBpcyBpbnZvbHZlZFxuICBvdXRwdXQub24oJ2Nsb3NlJywgZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coYXJjaGl2ZS5wb2ludGVyKCkgKyAnIHRvdGFsIGJ5dGVzJyk7XG4gICAgY29uc29sZS5sb2coJ2FyY2hpdmVyIGhhcyBiZWVuIGZpbmFsaXplZCBhbmQgdGhlIG91dHB1dCBmaWxlIGRlc2NyaXB0b3IgaGFzIGNsb3NlZC4nKTtcbiAgfSk7XG4gIG91dHB1dC5vbignZW5kJywgZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coJ0RhdGEgaGFzIGJlZW4gZHJhaW5lZCcpO1xuICB9KTtcbiAgLy8gZ29vZCBwcmFjdGljZSB0byBjYXRjaCB3YXJuaW5ncyAoaWUgc3RhdCBmYWlsdXJlcyBhbmQgb3RoZXIgbm9uLWJsb2NraW5nIGVycm9ycylcbiAgYXJjaGl2ZS5vbignd2FybmluZycsIGZ1bmN0aW9uKGVycikge1xuICAgIGlmIChlcnIuY29kZSA9PT0gJ0VOT0VOVCcpIHtcbiAgICAgIC8vIGxvZyB3YXJuaW5nXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHRocm93IGVycm9yXG4gICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICB9KTtcbiAgLy8gZ29vZCBwcmFjdGljZSB0byBjYXRjaCB0aGlzIGVycm9yIGV4cGxpY2l0bHlcbiAgYXJjaGl2ZS5vbignZXJyb3InLCBmdW5jdGlvbihlcnIpIHtcbiAgICB0aHJvdyBlcnI7XG4gIH0pO1xuICAvLyBwaXBlIGFyY2hpdmUgZGF0YSB0byB0aGUgZmlsZVxuICBhcmNoaXZlLnBpcGUob3V0cHV0KTtcbiAgLy8gYXBwZW5kIGZpbGVzIGZyb20gYSBzdWItZGlyZWN0b3J5IGFuZCBuYW1pbmcgaXQgYG5ldy1zdWJkaXJgIHdpdGhpbiB0aGUgYXJjaGl2ZVxuICBhcmNoaXZlLmRpcmVjdG9yeSgncHJvamVjdHMvcHJvamVjdDEnLCAnUHJvamVjdCcpO1xuICAvLyBmaW5hbGl6ZSB0aGUgYXJjaGl2ZSAoaWUgd2UgYXJlIGRvbmUgYXBwZW5kaW5nIGZpbGVzIGJ1dCBzdHJlYW1zIGhhdmUgdG8gZmluaXNoIHlldClcbiAgLy8gJ2Nsb3NlJywgJ2VuZCcgb3IgJ2ZpbmlzaCcgbWF5IGJlIGZpcmVkIHJpZ2h0IGFmdGVyIGNhbGxpbmcgdGhpcyBtZXRob2Qgc28gcmVnaXN0ZXIgdG8gdGhlbSBiZWZvcmVoYW5kXG4gIGFyY2hpdmUuZmluYWxpemUoKTtcbn1cblxuXG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVuWmlwX0NvZGUocmVxLHJlcyl7XG4gIGNvbnN0IGZpbGVDb250ZW50cyA9IGZzLmNyZWF0ZVJlYWRTdHJlYW0oX19kaXJuYW1lKycvemlwcGVkL3Jlc3VsdGF0LnppcCcpO1xuICBjb25zdCB3cml0ZVN0cmVhbSA9IGZzLmNyZWF0ZVdyaXRlU3RyZWFtKF9fZGlybmFtZSsnL3VuemlwcGVkL1Byb2pldCcpO1xuICAvLyAgZmlsZUNvbnRlbnRzLl9yZWFkYWJsZVN0YXRlLmJ1ZmZlci5oZWFkPSdjb250ZW50LWVuY29kaW5nJ1xuICAvLyBzd2l0Y2ggKHJlc3BvbnNlLmhlYWRlcnNbJ2NvbnRlbnQtZW5jb2RpbmcnXSkge1xuICAvLyAgIC8vIG9yLCBqdXN0IHVzZSB6bGliLmNyZWF0ZVVuemlwKCkgdG8gaGFuZGxlIGJvdGggY2FzZXNcbiAgLy8gICBjYXNlICdnemlwJzpcbiAgLy8gICAgIHJlc3BvbnNlLnBpcGUoemxpYi5jcmVhdGVHdW56aXAoKSkucGlwZShvdXRwdXQpO1xuICAvLyAgICAgYnJlYWs7XG4gIC8vICAgY2FzZSAnZGVmbGF0ZSc6XG4gIC8vICAgICByZXNwb25zZS5waXBlKHpsaWIuY3JlYXRlSW5mbGF0ZSgpKS5waXBlKG91dHB1dCk7XG4gIC8vICAgICBicmVhaztcbiAgLy8gICBkZWZhdWx0OlxuICAvLyAgICAgcmVzcG9uc2UucGlwZShvdXRwdXQpO1xuICAvLyAgICAgYnJlYWs7XG4gIC8vIH1cblxuICBjb25zdCB1bnppcCA9IHpsaWIuY3JlYXRlR3VuemlwKCk7XG4gIGZpbGVDb250ZW50cy5waXBlKHVuemlwKS5waXBlKHdyaXRlU3RyZWFtKTtcbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "zip.controller.js"
      ],
      "names": [
        "fs",
        "require",
        "archiver",
        "zlib",
        "zip_Code",
        "req",
        "res",
        "output",
        "createWriteStream",
        "__dirname",
        "archive",
        "level",
        "on",
        "console",
        "log",
        "pointer",
        "err",
        "code",
        "pipe",
        "directory",
        "finalize",
        "unZip_Code",
        "fileContents",
        "createReadStream",
        "writeStream",
        "unzip",
        "createGunzip"
      ],
      "mappings": ";;;;;;;;;;;;AACA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;SACsBG,Q;;;;;sEAAf,iBAAwBC,GAAxB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACIC,YAAAA,MAFC,GAEQP,EAAE,CAACQ,iBAAH,CAAqBC,SAAS,GAAG,sBAAjC,CAFR;AAGDC,YAAAA,OAHC,GAGSR,QAAQ,CAAC,KAAD,EAAQ;AAC5BC,cAAAA,IAAI,EAAE;AAAEQ,gBAAAA,KAAK,EAAE;AAAT,eADsB,CACT;;AADS,aAAR,CAHjB,EAML;AACA;;AACAJ,YAAAA,MAAM,CAACK,EAAP,CAAU,OAAV,EAAmB,YAAW;AAC5BC,cAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACK,OAAR,KAAoB,cAAhC;AACAF,cAAAA,OAAO,CAACC,GAAR,CAAY,wEAAZ;AACD,aAHD;AAIAP,YAAAA,MAAM,CAACK,EAAP,CAAU,KAAV,EAAiB,YAAW;AAC1BC,cAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,aAFD,EAZK,CAeL;;AACAJ,YAAAA,OAAO,CAACE,EAAR,CAAW,SAAX,EAAsB,UAASI,GAAT,EAAc;AAClC,kBAAIA,GAAG,CAACC,IAAJ,KAAa,QAAjB,EAA2B,CACzB;AACD,eAFD,MAEO;AACL;AACA,sBAAMD,GAAN;AACD;AACF,aAPD,EAhBK,CAwBL;;AACAN,YAAAA,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoB,UAASI,GAAT,EAAc;AAChC,oBAAMA,GAAN;AACD,aAFD,EAzBK,CA4BL;;AACAN,YAAAA,OAAO,CAACQ,IAAR,CAAaX,MAAb,EA7BK,CA8BL;;AACAG,YAAAA,OAAO,CAACS,SAAR,CAAkB,mBAAlB,EAAuC,SAAvC,EA/BK,CAgCL;AACA;;AACAT,YAAAA,OAAO,CAACU,QAAR;;AAlCK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAwCeC,U;;;;;wEAAf,kBAA0BhB,GAA1B,EAA8BC,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AACCgB,YAAAA,YADD,GACgBtB,EAAE,CAACuB,gBAAH,CAAoBd,SAAS,GAAC,sBAA9B,CADhB;AAECe,YAAAA,WAFD,GAEexB,EAAE,CAACQ,iBAAH,CAAqBC,SAAS,GAAC,kBAA/B,CAFf,EAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEMgB,YAAAA,KAjBD,GAiBStB,IAAI,CAACuB,YAAL,EAjBT;AAkBLJ,YAAAA,YAAY,CAACJ,IAAb,CAAkBO,KAAlB,EAAyBP,IAAzB,CAA8BM,WAA9B;;AAlBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "/home/elisabeth/Emerginov-II/src/controllers/",
      "sourcesContent": [
        "\nvar fs = require('fs');\nvar archiver = require('archiver');\nconst zlib = require('zlib');\nexport async function zip_Code(req,res){\n  // create a file to stream archive data to.\n  var output = fs.createWriteStream(__dirname + '/zipped/resultat.zip');\n  var archive = archiver('zip', {\n    zlib: { level: 9 } // Sets the compression level.\n  });\n  // listen for all archive data to be written\n  // 'close' event is fired only when a file descriptor is involved\n  output.on('close', function() {\n    console.log(archive.pointer() + ' total bytes');\n    console.log('archiver has been finalized and the output file descriptor has closed.');\n  });\n  output.on('end', function() {\n    console.log('Data has been drained');\n  });\n  // good practice to catch warnings (ie stat failures and other non-blocking errors)\n  archive.on('warning', function(err) {\n    if (err.code === 'ENOENT') {\n      // log warning\n    } else {\n      // throw error\n      throw err;\n    }\n  });\n  // good practice to catch this error explicitly\n  archive.on('error', function(err) {\n    throw err;\n  });\n  // pipe archive data to the file\n  archive.pipe(output);\n  // append files from a sub-directory and naming it `new-subdir` within the archive\n  archive.directory('projects/project1', 'Project');\n  // finalize the archive (ie we are done appending files but streams have to finish yet)\n  // 'close', 'end' or 'finish' may be fired right after calling this method so register to them beforehand\n  archive.finalize();\n}\n\n\n\n\nexport async function unZip_Code(req,res){\n  const fileContents = fs.createReadStream(__dirname+'/zipped/resultat.zip');\n  const writeStream = fs.createWriteStream(__dirname+'/unzipped/Projet');\n  //  fileContents._readableState.buffer.head='content-encoding'\n  // switch (response.headers['content-encoding']) {\n  //   // or, just use zlib.createUnzip() to handle both cases\n  //   case 'gzip':\n  //     response.pipe(zlib.createGunzip()).pipe(output);\n  //     break;\n  //   case 'deflate':\n  //     response.pipe(zlib.createInflate()).pipe(output);\n  //     break;\n  //   default:\n  //     response.pipe(output);\n  //     break;\n  // }\n\n  const unzip = zlib.createGunzip();\n  fileContents.pipe(unzip).pipe(writeStream);\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1601039259775
  },
  "{\"sourceRoot\":\"/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www\",\"filename\":\"/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www",
      "filename": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "import app from './app';\n\nasync function main() {\n  await app.listen(3000);\n  console.log('Server on port 3000');\n}\n\n;\nmain();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsIm1haW4iLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxHQUFQLE1BQWdCLE9BQWhCOztBQUNBLGVBQWVDLElBQWYsR0FBcUI7QUFDbkIsUUFBTUQsR0FBRyxDQUFDRSxNQUFKLENBQVcsSUFBWCxDQUFOO0FBQ0FDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaO0FBQ0Q7O0FBQUE7QUFDREgsSUFBSSIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlzYWJldGgvM0EvUHJvamV0Q291cnQvbXlfd2ViYXBwX25vZGUvc291cmNlcy93d3cvc3JjLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcHAgZnJvbSAnLi9hcHAnO1xuYXN5bmMgZnVuY3Rpb24gbWFpbigpe1xuICBhd2FpdCBhcHAubGlzdGVuKDMwMDApO1xuICBjb25zb2xlLmxvZygnU2VydmVyIG9uIHBvcnQgMzAwMCcpXG59O1xubWFpbigpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "main",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,GAAP,MAAgB,OAAhB;;AACA,eAAeC,IAAf,GAAqB;AACnB,QAAMD,GAAG,CAACE,MAAJ,CAAW,IAAX,CAAN;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;;AAAA;AACDH,IAAI",
      "sourceRoot": "/home/elisabeth/3A/ProjetCourt/my_webapp_node/sources/www/src/",
      "sourcesContent": [
        "import app from './app';\nasync function main(){\n  await app.listen(3000);\n  console.log('Server on port 3000')\n};\nmain();\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601039259775
  }
}
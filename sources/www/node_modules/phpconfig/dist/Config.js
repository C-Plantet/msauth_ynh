"use strict";
/*
 * PHPConfig - Loads Uniter's PHP configuration
 * Copyright (c) Dan Phillimore (asmblah)
 * https://github.com/uniter/phpconfig/
 *
 * Released under the MIT license
 * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt
 */
Object.defineProperty(exports, "__esModule", { value: true });
function isEmpty(subConfig) {
    return Object.keys(subConfig).length === 0;
}
/**
 * @inheritDoc
 */
var Config = /** @class */ (function () {
    function Config(requirer, exporter, rootConfig, ConfigSetClass) {
        this.requirer = requirer;
        this.exporter = exporter;
        this.rootConfig = rootConfig;
        this.ConfigSetClass = ConfigSetClass;
    }
    /**
     * @inheritDoc
     */
    Config.prototype.exportLibrary = function (mainLibraryName, subLibraryName) {
        return this.exporter.exportLibrary(this.rootConfig, mainLibraryName, subLibraryName);
    };
    /**
     * @inheritDoc
     */
    Config.prototype.getConfigsForLibrary = function (mainLibraryName, subLibraryName) {
        var _this = this;
        var libraryConfig = this.exporter.exportLibrary(this.rootConfig, mainLibraryName, subLibraryName);
        var configs = libraryConfig.pluginConfigFilePaths.map(function (path) {
            var _a;
            var pluginConfig = (_a = _this.requirer.require(path)) !== null && _a !== void 0 ? _a : {};
            if (typeof pluginConfig !== 'object') {
                throw new Error(subLibraryName
                    ? "Imported config for sub-library \"" + subLibraryName + "\" under main library \"" + mainLibraryName + "\" should be an object"
                    : "Imported config for main library \"" + mainLibraryName + "\" should be an object");
            }
            return pluginConfig;
        });
        if (!isEmpty(libraryConfig.topLevelConfig)) {
            configs.push(libraryConfig.topLevelConfig);
        }
        return new this.ConfigSetClass(configs);
    };
    return Config;
}());
exports.default = Config;
//# sourceMappingURL=Config.js.map
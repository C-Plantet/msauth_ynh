"use strict";
/*
 * PHPConfig - Loads Uniter's PHP configuration
 * Copyright (c) Dan Phillimore (asmblah)
 * https://github.com/uniter/phpconfig/
 *
 * Released under the MIT license
 * https://github.com/uniter/phpconfig/raw/master/MIT-LICENSE.txt
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * A type predicate for determining at runtime whether a valid root config was given.
 *
 * @param {RootConfig | SubConfig} config
 * @returns {boolean}
 */
function isValidConfig(config) {
    return (Object.keys(config).filter(function (settingName) {
        // Only the keys "plugins" and/or "settings" are allowed
        return settingName !== 'plugins' && settingName !== 'settings';
    }).length === 0);
}
/**
 * @inheritDoc
 */
var ConfigLoader = /** @class */ (function () {
    function ConfigLoader(requirer, loader, exporter, ConfigClass, ConfigSetClass) {
        this.requirer = requirer;
        this.loader = loader;
        this.exporter = exporter;
        this.ConfigClass = ConfigClass;
        this.ConfigSetClass = ConfigSetClass;
    }
    /**
     * @inheritDoc
     */
    ConfigLoader.prototype.getConfig = function (searchPaths) {
        var rootConfig = this.loader.load(searchPaths);
        if (!isValidConfig(rootConfig)) {
            throw new Error('Given root config is invalid: may only specify "plugins" or "settings" or both');
        }
        return new this.ConfigClass(this.requirer, this.exporter, rootConfig, this.ConfigSetClass);
    };
    return ConfigLoader;
}());
exports.default = ConfigLoader;
//# sourceMappingURL=ConfigLoader.js.map